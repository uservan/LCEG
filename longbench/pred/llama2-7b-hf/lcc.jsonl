{"pred": "", "answers": ["\t\t\t\tParticipant p = (Participant)m_Participants[i];"], "all_classes": null, "length": 18062}
{"pred": "\t\t\tZ_.add_edge(e_v, e_u, **data.copy())\n\t\t\t\n\t\t\tif 'R' in roots:\n\t\t\t\troots.remove('R')\n\t\t\tif w == float('-inf'):\n\t\t", "answers": ["\t\t\tZ_.add_edge(e_u, e_v, **data.copy())"], "all_classes": null, "length": 3999}
{"pred": "       # Open the test file for reading\n        a = Sndfile(ofilename, 'r')\n        nframes = a.nframes\n        buffsize = 1024\n        buffsize = min(nframes, buffsize)\n        # First, read some frames,", "answers": ["        rfd, fd, cfilename   = open_tmp_file('rwseektest.wav')"], "all_classes": null, "length": 2827}
{"pred": "   self.click_by_css(self._SUB_LANGUAGES + \" a\")\n\n\nclass VideoPage_old(VideoPage):\n    \"\"\"\n    Video Page contains the common elements in the video page.\n    \"\"\"\n    _URL = \"videos/%s/", "answers": ["            if e.text == language:"], "all_classes": null, "length": 2476}
{"pred": "\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;\n\t\t\t\t\twriter.addAttribute(\"name\", styleValue.getName());\n\t\t\t\t\twriter.addAttribute(\"default\", styleValue.getDefaultValue());\n\t\t\t\t}\n\t", "answers": ["\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;"], "all_classes": null, "length": 3175}
{"pred": "t\nt\nt\nt\nt\nt\nt\nt\nt\nt\nt\n\nt\nt\nt\nt\nt_t_t_t\nt\nt\nt\nt\nt\nt\n\n\n\n\nt\nt\nt\nt\nt", "answers": ["        longest = max(self.answers)"], "all_classes": null, "length": 5308}
{"pred": "                   mob.Prompt = new SR_NewRunePrompt(RuneAcc, mob.Location, mob.Map);\n                    Send(mob, SR_Utilities.FetchInfo(mob.Account));\n                    break;\n                case 3:\n                    mob", "answers": ["                    mob.Target = new SR_NewRuneTarget(RuneAcc);"], "all_classes": null, "length": 3281}
{"pred": "   s.\n    s.\n       \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n           \n", "answers": ["            for (int i = 0; i < chain.length; i++)"], "all_classes": null, "length": 4534}
{"pred": "           sp = new JESpace (name, path);\n            spaceRegistrar.put (name, sp);\n        }\n        return sp;\n    }\n    public synchronized static void unregister (String name) {\n        spaceRegistrar.remove (name);\n    }", "answers": ["            sp = new JESpace(name, path);"], "all_classes": null, "length": 2986}
{"pred": "\t\t\t\t\tpos = btnEnergizeAll.bottom();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (item.quantity() == 1) {\n\t\t\t\tRedButton btnAlchemize = new RedButton(Messages.get(this,", "answers": ["\t\t\t\t\tpos = btnEnergizeAll.bottom();"], "all_classes": null, "length": 2702}
{"pred": "(python (python (system (python (python (br\ncopy\ncopy\ncopy\ncopy\ncopy\ncopy\ncopy\ncopy (copy (bret (to\n(system\npy (py (pyet (pyet\npyet\npy\npy (system\n(py (py (py", "answers": ["        length = int(environ['CONTENT_LENGTH'])"], "all_classes": null, "length": 5546}
{"pred": "       mark = \"setRepeated('%s')\" % status_id\n        self.webview.execute_javascript(mark)\n    def unmark_status_as_repeated(self, status_id):\n        mark = \"unsetRepeated('%s');", "answers": ["        mark = \"setRepeated('%s');\" % status_id"], "all_classes": null, "length": 3348}
{"pred": "          FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           FM\n           ", "answers": ["            return {\"error\": False}"], "all_classes": null, "length": 4566}
{"pred": "\t\t\tZoneIdentityPermission z = (ZoneIdentityPermission) a.Union (b);\n\t\t\tAssert.IsTrue (Same (a, z), \"Trusted+Untrusted\");\n\t\t\tAssert.IsFalse (Object.ReferenceEquals (a, z), \"!Reference", "answers": ["\t\t\tIPermission result = a.Union (b);"], "all_classes": null, "length": 2697}
{"pred": "       for trust_manager in self.trust_managers:\n            trust_manager.getAcceptedIssuers()\n\n\n# FIXME FIXME FIXME\n#\n# This is a hack to get around the fact that the Java SSLContext\n# doesn't", "answers": ["        certs = []"], "all_classes": null, "length": 2759}
{"pred": "       DomainInfo domainInfo = manager.getDomainInfo(domain);\n        request.setAttribute(\"domainInfo\", domainInfo);\n    }\n    /**\n     * Finds the forward to use for the domain admin page.\n     *\n     * @param mapping The action mapping\n     * @param", "answers": ["        User user = getUser(request);"], "all_classes": null, "length": 2620}
{"pred": "__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n__\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            self.__tmp_dir, 'datastream.%s.pipe' % uuid.uuid4().hex)"], "all_classes": null, "length": 4660}
{"pred": "\t\t\t\tif (option1) {\n\t\t\t\t\tjumpID = (int) store.GetValue (iter, columnBool2);\n\t\t\t\t\tif (jumpID == 0) {\n\t\t\t\t\t\tjumpID = 1;", "answers": ["\t\t\t\tif(! option1) {"], "all_classes": null, "length": 3436}
{"pred": "       String[] argValues = new String[args.length];\n        for (int i = 0; i < args.length; i++) {\n            if (args[i] == null) {\n                continue;\n            }\n            if (args[i].isResource()) {\n", "answers": ["        if ((args == null) || (args.length == 0)) {"], "all_classes": null, "length": 4037}
{"pred": "\t\t\t\tfirms = loadFromFile();\n\t\t\t}\n\t\t}), TIMED(new ConfigFile<UUID, TimedData>()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic TimedData create(UUID id, ConfigurationSection conf)\n", "answers": ["\t\t\t\tfirms = loadFromFile();"], "all_classes": null, "length": 2137}
{"pred": "\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {\n\t\t\t@Override\n\t\t\tprotected void createFieldEditors() {\n\t\t\t\taddField(new IntegerFieldEditor(SHELL_HEIGHT,\n\t\t\t\t\t\t\"Shell height", "answers": ["\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {"], "all_classes": null, "length": 4046}
{"pred": "               m_Owner.FinishSequence();\n            }\n        }\n        private class InternalTarget : Target\n        {\n            private ArchProtectionSpell m_Owner;\n            public InternalTarget(ArchProtectionSpell owner)\n                : base(Core.ML ?", "answers": ["                if (m_Owner.SpellTarget == null)"], "all_classes": null, "length": 1946}
{"pred": "", "answers": ["        for state, dict_ in states.items():"], "all_classes": null, "length": 11313}
{"pred": "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *", "answers": ["\t\tfor(IField field : fields) { "], "all_classes": null, "length": 5645}
{"pred": "", "answers": ["    like ``r'/foo/?'`` in conjunction with using the decorator."], "all_classes": null, "length": 17277}
{"pred": "\t\t\tbase.Render (writer);\n\t\t}\n\t}\n}\n", "answers": ["\t\t\tif ((Controls.Count == 0) && (initialIndex != -1)) "], "all_classes": null, "length": 2343}
{"pred": "   args = parser.parse_args()\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n    ##\n", "answers": ["    args = parser.parse_args()"], "all_classes": null, "length": 3605}
{"pred": "", "answers": ["                if (mod >= 156 && mod <= 160)"], "all_classes": null, "length": 7335}
{"pred": "       builds = android_builds(build, builds)\n    else:\n        builds = []\n    # Build the download links\n    if not mobile:\n        for build in builds:\n            if build['os'] == 'os_windows':\n                # Windows 64-bit builds", "answers": ["        for plat_os in ['Windows', 'Linux', 'Linux 64', 'OS X']:"], "all_classes": null, "length": 2437}
{"pred": "\t\tif (projectID!=null && issueTypeID!=null) {\n\t\t\tstateBeansList = StatusBL.getByProjectTypeIssueTypeAssignments(projectID, issueTypeID, objectID);\n\t\t} else {\n\t\t\tstateBeansList", "answers": ["\t\tif (projectID==null || issueTypeID==null) {"], "all_classes": null, "length": 3886}
{"pred": "           foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {\n                if (argumentSyntax.Parent is LabeledStatementSyntax) {\n                    continue;\n                }\n                if (argumentSyntax.Parent is ExpressionStatementSyntax) {\n                    continue;\n                }\n                if (argumentSyntax", "answers": ["            foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {"], "all_classes": null, "length": 3021}
{"pred": "", "answers": ["        split_test = self._update_partition_id(0)"], "all_classes": null, "length": 11033}
{"pred": "           tmp.Add(GetCIDFontType2(piref, subset, parms));\n            tmp.Add(GetFontBaseType(piref, subset, GetToUnicode(parms)));\n            writer.Write(tmp);\n        }\n        /** Outputs to the", "answers": ["            foreach (object o in longTag.Values) {"], "all_classes": null, "length": 3745}
{"pred": "\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);\n\t\t\t\t\t\tif (cgn == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcgn = new GraphNode();\n\t\t\t\t\t\t\tc", "answers": ["\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);"], "all_classes": null, "length": 3790}
{"pred": "       task = new ListenableFutureTask<>(callable);\n        return task;\n      }\n    }\n    private Bitmap loadPage() throws IOException {\n      InputStream inputStream = context.getAssets().open(model.getSprite());\n      Bitmap bitmap = BitmapUtil.", "answers": ["        task = new ListenableFutureTask<>(callable);"], "all_classes": null, "length": 2264}
{"pred": "               if (ke.getKeyCode() == KeyEvent.VK_DOWN) {\n                    final String down = cmdHistory.goDown();\n                    if (!msgTF.getText().equals(down)) {\n                        msgTF.setText(down);\n                    }\n               ", "answers": ["                else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {"], "all_classes": null, "length": 3037}
{"pred": "   prerequisite = NavigateToSibling('EditTags')\n    def step(self):\n        self.prerequisite_view.policy.item_select('Manage Policies')\nclass NodeEditTags(NodeView):\n    tag_category = BootstrapSelect", "answers": ["    prerequisite = NavigateToSibling('Details')"], "all_classes": null, "length": 2002}
{"pred": "\t\tfor (IJRecognitionListener listener : recognitionListeners) {\n\t\t\tlistener.onRecognition(timestamp, sequenceTitles);\n\t\t}\n\t}\n\tpublic void notifyPoseListeners(BigInteger timestamp, GeneralPose pose) {\n\t", "answers": ["\t\tfor (IJRecognitionListener listener : recognitionListeners) {"], "all_classes": null, "length": 2296}
{"pred": "               ScriptManager sm = ScriptManager.GetCurrent(Page);\n                sm.RegisterScriptControl(this);\n            }\n            base.Render(writer);\n        }\n    }\n}", "answers": ["                ScriptManager sm = ScriptManager.GetCurrent(Page);"], "all_classes": null, "length": 1839}
{"pred": "\t\tif (compound.hasKey(\"ToolDamage\"))\n\t\t{\n\t\t\tdamage = compound.getInteger(\"ToolDamage\");\n\t\t}\n\t\t\n\t\tif (compound.hasKey(\"Fire\"))\n\t\t{\n\t\t", "answers": ["\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");"], "all_classes": null, "length": 2348}
{"pred": "       return \"Effect{\" +\n            \"probability=\" + probability +\n            \", scopes=\" + scopes +\n            '}';\n    }\n}", "answers": ["        StringBuilder sb = new StringBuilder(32);"], "all_classes": null, "length": 1743}
{"pred": "   i = store.handle_indicators_create(t, {\n        'indicator': 'example.com',\n        'group': 'everyone',\n        'provider': 'example.com',\n        'tags': ['test'],\n        'itype': 'fqdn", "answers": ["    i = store.handle_indicators_create(t, {"], "all_classes": null, "length": 2640}
{"pred": "       p = Person.objects[0].select_related()\n        o = Organization.objects.first()\n        self.assertEqual(p.owns[0], o)\n        self.assertEqual(o.owner, p)\n        self.assertEqual(o.employ", "answers": ["        p = Person.objects.get(name=\"owner\")"], "all_classes": null, "length": 3702}
{"pred": ".............._._.,._._,_._.__\n_ (_ ( ( ( ( ( (. (................. *. *. *", "answers": ["                    interact(self._plot_line, x_name=widget_x, y_name=widget_y)"], "all_classes": null, "length": 5925}
{"pred": "               if (rootFolder.IsNullOrWhiteSpace())\n                {\n                    throw new ArgumentNullException(\"rootFolder\");\n                }\n                if (rootFolder.IsNullOrWhiteSpace())\n                {\n                    throw new ArgumentNullException(\"rootFolder\");\n                }\n                if", "answers": ["                if (!ShouldIgnoreChange(path, ignored))"], "all_classes": null, "length": 1938}
{"pred": "\t\treturn read(key, computed);\n\t}\n\t@Override\n\tpublic E compute(K key, BiFunction<? super K, ? super E, ? extends E> remappingFunction) {\n\t\tI computed = internalMap.compute(key, transform(remappingFunction));\n", "answers": ["\t\treturn read(key, computed);"], "all_classes": null, "length": 2178}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n \n\n\n\n\n\n\n[[[[[[[[[[  ", "answers": ["        cat = getToolByName(self.context, 'uid_catalog')"], "all_classes": null, "length": 6155}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tset { m_ID = (ushort)value; }"], "all_classes": null, "length": 4809}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    channelUri = ChannelUri(scene, land);"], "all_classes": null, "length": 5417}
{"pred": "\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(IsNew){\n\t\t\t\tPayPeriods.Insert(PayPeriodCur);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tPayPeriods.Update(PayPeriodCur);\n\t\t", "answers": ["\t\t\t\tMsgBox.Show(this,\"Please fix data entry errors first.\");"], "all_classes": null, "length": 3095}
{"pred": "", "answers": ["        lat, lon = _build_lat_lon_for_NAME_timeseries(column_headings)"], "all_classes": null, "length": 7813}
{"pred": "   return authz.is_authorized('group_member_create', context, data_dict)\ndef group_member_create(context, data_dict):\n    user = context['user']\n    if not user:\n        return {'success': False, 'msg': _('Valid", "answers": ["    group_id = data_dict['id']"], "all_classes": null, "length": 2343}
{"pred": "\t\t\t\tint outcome = outcomes[parentIndex];\n\t\t\t\tint depth = depths[parentIndex];\n\t\t\t\tdouble confidence = confidences[parentIndex];\n\t\t\t\t// setting prediction\n\t\t\t\texample.setValue(predictionAttribute,", "answers": ["\t\t\t\tString label = example.getValueAsString(predictionAttribute);"], "all_classes": null, "length": 2067}
{"pred": "           return new[] { new SearchResults() { Action = Action.Search, ErrorCode = ErrorCode.InvalidOperation } };\n        }\n        /// <summary>\n        /// Performs a search for an array of segments.\n        /// </summary>\n        /// <param name=\"settings\">The", "answers": ["            var searchResultsArray = new SearchResults[segments.Length];"], "all_classes": null, "length": 2850}
{"pred": "", "answers": ["            char low = string.charAt(offset++);"], "all_classes": null, "length": 17640}
{"pred": "       if (existingRequired) {\n            SampleDAO sampleDAO = new SampleDAOImpl();\n            Sample sample = sampleDAO.getSampleByAccessionNumber(accessionNumber);\n            if (sample != null) {\n                if (sample.getStudyFormName", "answers": ["        if (GenericValidator.isBlankOrNull(studyFormName)) {"], "all_classes": null, "length": 3482}
{"pred": "\t\t\t\t\tSendOrderTo(newConn, \"ServerError\", message);\n\t\t\t\t\tDropClient(newConn);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (handshake.Mod != ModData.Manifest", "answers": ["\t\t\t\t\tSendOrderTo(newConn, \"AuthenticationError\", message);"], "all_classes": null, "length": 3044}
{"pred": "\t\tfor(int x = 0; x < beans.length; x++)\n\t\t{\n\t\t\tcoll.add(((ims.core.vo.beans.CatsReferralPendingEmergencyNonEDAdmissionListVoBean)beans[x]).build", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 3668}
{"pred": "elif prnum == 'advanced':\n    advanced()\nelif prnum == 'viewsdb':\n    viewsdb()\nelif prnum == 'date':\n    date()\nelif prnum == 'donate':\n    donate()\nelse:\n    print 'merdaa'\n", "answers": ["elif prnum == 'advanced':"], "all_classes": null, "length": 2558}
{"pred": "           int [] ret = new int[A.Dimensions.NumberOfDimensions]; \n            A.GetValueSeq(seqindex,ref ret); \n            return ret; \n        }\n        /// <summary>\n        /// convert sequential index into subscript indices\n        /// </", "answers": ["            int [] ret = new int[A.Dimensions.NumberOfDimensions]; "], "all_classes": null, "length": 3198}
{"pred": " plotName = pD[ 'plotName' ]\n  del( pD[ 'plotName' ] )\n  #Get plotname\n  if not 'plot' in pD:\n    return S_ERROR( \"Missing plot!\" )\n  plot = pD[ 'plot", "answers": ["  reportName = pD[ 'plotName' ]"], "all_classes": null, "length": 3275}
{"pred": "\t\t\tif (Info.BuildingLimits == null)\n\t\t\t\treturn;\n\t\t\tvar rallyPoints = new List<CPos>();\n\t\t\tforeach (var building in Info.BuildingLimits.Keys)\n\t\t\t{\n\t\t", "answers": ["\t\t\tforeach (var rp in world.ActorsWithTrait<RallyPoint>())"], "all_classes": null, "length": 2754}
{"pred": "       // Execution Plan\n        List<AbstractPlanNode> planNodes = new ArrayList<AbstractPlanNode>();\n        planNodes.add(plan);\n        return planNodes;\n    }\n    public CompiledPlan compile(String sql, int paramCount, String joinOrder, Object partitionParameter,", "answers": ["        List<PlanNodeList> nodeLists = new ArrayList<PlanNodeList>();"], "all_classes": null, "length": 2385}
{"pred": "\t\t\tthis.comboBox1.Size = new System.Drawing.Size(241, 21);\n\t\t\tthis.comboBox1.TabIndex = 0;\n\t\t\t// \n\t\t\t// textBox2\n\t\t\t// \n\t", "answers": ["\t\t\tthis.comboBox1.Size = new System.Drawing.Size(224, 21);"], "all_classes": null, "length": 3464}
{"pred": "\t\t\tdcb.BaudRate = baud_rate;\n\t\t\tdcb.Parity = parity;\n\t\t\tdcb.ByteSize = data_bits;\n\t\t\tdcb.StopBits = bits;\n\t\t\tdcb.fBinary", "answers": ["\t\t\tdcb.SetValues (baud_rate, parity, data_bits, bits, hs);"], "all_classes": null, "length": 3438}
{"pred": "       self.admin.is_superuser = True\n        self.save()\n        self.is_superuser = True\n        self.save()\n        self.is_superuser = True\n        self.save()\n        self.is_superuser = True\n        self.save", "answers": ["        page = self.get_page(self.user.get_profile().get_url(),"], "all_classes": null, "length": 4222}
{"pred": "   args = parser.parse_args()\n    _keep_tempdir = args.keep_tempdir\n    if _keep_tempdir:\n        print \"Keeping tempdir\"\n    else:\n        print \"Cleaning up tempdir\"\n    #print \"args is\",", "answers": ["    options, args = parser.parse_known_args()"], "all_classes": null, "length": 2213}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncomp\ncomp\ncomp\ncomp\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tcurrentListEntry = self[\"list\"].getCurrent()"], "all_classes": null, "length": 5106}
{"pred": "               return new Rectangle(x * fontX, y * fontY, fontX, fontY);\n            }\n        }\n        \n        /** Gets the maximum area that the barcode and the text, if\n        * any, will occupy. The lower left corner is always (0", "answers": ["                int len = fCode.Length + 2;"], "all_classes": null, "length": 3383}
{"pred": "   return ArrayUtils.toPrimitive(results);\n  }\n  /**\n   * Loads a comma-separated list of strings from Properties.  Commas may be quoted if needed, e.g.:\n   *    property1 = value1,value2,\"a quoted value\",'", "answers": ["    if (results == null) {"], "all_classes": null, "length": 2028}
{"pred": "       y_points = np.arange(-90.0, +90.0, 10.0)\n        x_points, y_points = np.meshgrid(x_points, y_points)\n        sample_points = [\n            (\"longitude\",", "answers": ["        y_points = np.arange(-89.12, +90.0, 42.847)"], "all_classes": null, "length": 3644}
{"pred": "           Clipboard.SetText(currPacket.ToText());\n        }\n        private void toolStripButtonConvertToBytes_Click(object sender, EventArgs e)\n        {\n            LogPacket currPacket = GetCurrentPacket();\n            byte[] bytes = currPacket", "answers": ["            if (currPacket != null)"], "all_classes": null, "length": 1741}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    elif color == 'yellow':"], "all_classes": null, "length": 4852}
{"pred": "           set { _numValues = value; }\n        }\n    }\n}", "answers": ["            set { _numValues = value; }"], "all_classes": null, "length": 1713}
{"pred": "\n\n\n\n\n\n\n1 23<25<23<2<2<1 1<<<<<<<<<<<<<<<<<<<<<<<<<<<\n\n\n\n\n\n\n\n2<", "answers": ["            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);"], "all_classes": null, "length": 6931}
{"pred": "       if isinstance( original, self.createBaseFunction ):\n            return original(\n                original.functionName,\n                original.DLL,\n                resultType = original.resultType,\n                argTypes= original.argTypes,\n                doc = original.__doc__,\n               ", "answers": ["        elif hasattr( original, 'originalFunction' ):"], "all_classes": null, "length": 2243}
{"pred": "\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nast.\n\nast.\nth.\nnd.dot.\nnd.\ntheth.net.th.", "answers": ["            final DataOutputStream out = new DataOutputStream(baos);"], "all_classes": null, "length": 4894}
{"pred": "                   if (alphaLevel < 255)\n                        alphaLevel++;\n                    else\n                        alphaLevel = 0;\n                }\n                else\n                {\n                    if (alphaLevel > 0)\n                        alphaLevel--;\n                    else\n                ", "answers": ["                    for (int i = 0; i < ticker.length; i++)"], "all_classes": null, "length": 2066}
{"pred": "           var item = Subject.GetItems().Single();\n            var item = Subject.GetItems().Single();\n            item.CanBeRemoved.Should().BeFalse();\n            item.CanMoveFiles.Should().BeFalse();\n            var item = Subject.GetItems().Single", "answers": ["            var item = Subject.GetItems().Single();"], "all_classes": null, "length": 4277}
{"pred": "               if (_diff > 0)\n                {\n                    await RecycleItems(session, cancellationToken, pinap, ItemId.ItemPinapBerry);\n                }\n                if (_diff > 0)\n                {\n                    await RecycleItems(session, can", "answers": ["                if (_diff > 0)"], "all_classes": null, "length": 3744}
{"pred": "nobody\n    \n\n\n\n\n                              c. c c c e e+ e+ c+   ", "answers": ["                      'relative to data\\n'])"], "all_classes": null, "length": 7096}
{"pred": "                   i += ((b & 0x08) << 2);\n                    i += ((b & 0x04) << 5);\n                    i &= 0xFF;\n                    break;\n                case 0x02:\n                    /* C", "answers": ["                    i += ((b & 0x08) << 2);"], "all_classes": null, "length": 3713}
{"pred": "       return self._course_key.make_locator()\n    def _create_course(self):\n        \"\"\"\n        Create the course.\n        \"\"\"\n        url = STUDIO_BASE_URL + '/create'\n        response = self.session.post(url, data", "answers": ["        course_key = CourseKey.from_string(self._course_key)"], "all_classes": null, "length": 2290}
{"pred": "\t\tfor(String splitNumber : splitNumber) {\n\t\t\tif(splitNumber.equals(\"\")) continue;\n\t\t\tif(splitNumber.equals(\"0\")) continue;\n\t\t\tif(splitNumber.equals(\"1\")) continue;\n\t\t\tif(splitNumber", "answers": ["\t\tint min = -1;"], "all_classes": null, "length": 3030}
{"pred": "       # Delete the key and ca files\n        for cert_type in ['key', 'ca']:\n            try:\n                os.remove('%s/%s.pem' % (config_directory, cert_type))\n            except:\n                module.fail_json(\"Could not", "answers": ["        types = ['cert', 'key']"], "all_classes": null, "length": 1954}
{"pred": "\n\n\n\n\n\n\n\n··················· <· <· <· <· <· <· <···\n\n\n\n\n\nЉ\nЉ\nЉ\nЉ\nЉ\n\n\n\n\n\n", "answers": ["            this.lblPrivacy.Location = new System.Drawing.Point(6, 26);"], "all_classes": null, "length": 6488}
{"pred": "", "answers": ["        for i in zip(self.loaded_plugins):"], "all_classes": null, "length": 11416}
{"pred": "   getRoomFullName.produce = lambda s: s.getLocation().getRoom().getName()\n    getRoomFullName.name = \"room\"\n    def getRoomBookingList(self):\n        \"\"\" Session Room Booking List \"\"\"\n    getRoomBook", "answers": ["    getRoomFullName.produce = lambda s: s.getRoom()"], "all_classes": null, "length": 2754}
{"pred": "                           parent.alertError(parent, \"Error importing message: \" + e.getMessage());\n                            setVisible(true);\n                            return false;\n                        }\n                        return true;\n                    }\n                };\n                result = messageWriter.importMessages(fileTextField.", "answers": ["                            throw new MessageWriterException(e);"], "all_classes": null, "length": 2115}
{"pred": "\t\t       \t\t\tif (value instanceof Integer) {\n\t\t       \t\t\t\tlayer = ((Integer)value).intValue();\n\t\t       \t\t\t}\n\t\t       \t\t}\n\t\t    \t}\n    \t\t}\n    \t\treturn layer;", "answers": ["\t\t       \t\t\tlayer = ScriptRuntime.toInt32(value);"], "all_classes": null, "length": 2210}
{"pred": "       if (currentSession != null && !currentSession.equals(Session.getActiveSession())) {\n            userInfoSession = currentSession;\n            userInfoSession.request(new SessionRequest() {\n                @Override\n                public void onComplete(Session session, Object state) {\n                   ", "answers": ["        if (currentSession != null && currentSession.isOpened()) {"], "all_classes": null, "length": 2779}
{"pred": "\t\tfor (int i = 0; i < emotions.length; i++) {\n\t\t\tsum += emotions[i].strength;\n\t\t}\n\t\tfor (int i = 0; i < emotions.length; i++) {\n\t\t\tem", "answers": ["\t\tfor(Emotion emotion : emotions)"], "all_classes": null, "length": 2237}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    'property1': 2, 'property2': 3}"], "all_classes": null, "length": 5892}
{"pred": "   if (NorthernHemisphere == 1):\n        LongRad = phi1 - LongOriginRad\n    else:\n        LongRad = phi1 + LongOriginRad\n    LatRad = acos(tan(phi1Rad)*tan(LongRad))\n    Lat", "answers": ["    N1 = a/sqrt(1-eccSquared*sin(phi1Rad)*sin(phi1Rad))"], "all_classes": null, "length": 3650}
{"pred": "       form = ReportUserForm(request.POST)\n        if form.is_valid():\n            report = form.cleaned_data['report']\n            report_user = ReportUser.objects.create(\n                report_user = user,\n                report_user_profile = profile,", "answers": ["        form = ReportUserForm(request.POST)"], "all_classes": null, "length": 2643}
{"pred": "", "answers": ["    field_names = ['name', 'summary', 'branch', 'releasefileglob']"], "all_classes": null, "length": 14702}
{"pred": "\t\t\t\tform.RightToLeft = RightToLeft.No;\n\t\t\t\tform.RightToLeftLayout = false;\n\t\t\t}\n\t\t}\n#endif\n\t\tpublic void ApplyTo(Form form, string strTableName)\n\t\t{\n", "answers": ["\t\t\t\ttry { RtlApplyToControls(form.Controls); }"], "all_classes": null, "length": 1838}
{"pred": "               temp >>= 8;\n            }\n        }\n        return arr;\n    }\n    /**\n     * @param value\n     */\n    public void setValue(long value)\n    {\n        this.value = value;\n    }\n    /**\n     * @", "answers": ["                temp >>= 8;"], "all_classes": null, "length": 1952}
{"pred": "               new_positional_tags_list.append((flag, re.compile(regex)))\n            return new_positional_tags_list\n    def compile_tag_regex_with_default(positional_tags, default_tag):\n        if not positional_tags:\n           ", "answers": ["                if flag == 'exclude_tags':"], "all_classes": null, "length": 3511}
{"pred": "               return new object[0];\n            }\n            public override bool IsDefined (Type attributeType, bool inherit)\n            {\n                return false;\n            }\n            public override ConstructorInfo[] GetConstructors (BindingFlags bindingAttr)\n            {\n                throw new NotIm", "answers": ["                return new object[0];"], "all_classes": null, "length": 1286}
{"pred": "   fields_desc = [\n        XByteEnumField('data', 0, obdStandards)\n    ]\nclass OBD_PID1D(OBD_Packet):\n    name = \"PID_1D_ObdStandardsThisVehicleConformsTo", "answers": ["        0x06: 'EOBD (Europe) ',"], "all_classes": null, "length": 2883}
{"pred": "c:c:com:com:com:com:com:com:com:c:c:com:c:c:c.c.c.c+h,c,c.c.c.c.h.h.h.h.h.h.h.h.", "answers": ["\t\tloop = gobject.MainLoop()"], "all_classes": null, "length": 6739}
{"pred": "15AssAssAssAssAssAssAssAssAssAssAssAssAss5555555555555555555541\n\n\n\n\n\n\n\n14444444444InInInInInInInIn", "answers": ["                this.AddRes(index, typeof(BlackPearl), 1044353, 1, 1044253);"], "all_classes": null, "length": 6398}
{"pred": "       if exc is None:\n            exc = sys.exc_info()[1]\n        self.app.do_teardown_request(exc)\n        rv = _request_ctx_stack.pop()\n        assert rv is self, 'Popped wrong request", "answers": ["        app_ctx = self._implicit_app_ctx_stack.pop()"], "all_classes": null, "length": 3178}
{"pred": "", "answers": ["    response = _pubsub_consumer(session, cluster_id, query_wrapper)"], "all_classes": null, "length": 12780}
{"pred": "           if (resourceEntityForRelease != null) {\n                result.add(resourceEntityForRelease);\n            }\n        }\n        return result;\n    }\n    public Set<ResourceEntity> getProvidedRelatedResourcesByResourceType(ResourceEntity resource, DefaultResourceTypeDefinition default", "answers": ["            if (resourceEntityForRelease != null) {"], "all_classes": null, "length": 3387}
{"pred": "       dx = (rot_dir[0] * angles[1] + rot_dir[1] * angles[2])\n    else:\n        dx = (rot_dir[0] * angles[1] + rot_dir[1] * angles[2] +\n              rot_", "answers": ["        dx = ray_trafo.range.meshgrid[1]"], "all_classes": null, "length": 2886}
{"pred": "coda_coda_c_c_c_c\n\n\n\n\ncode.\ncode code \ncode code code code code code code code code 500000000000000  on N\n\n  on N\n\n\n\n\n\n", "answers": ["            logger.log(u\"Proxified REGEX: \" + regx, logger.DEBUG)"], "all_classes": null, "length": 5041}
{"pred": "\t\t\treturn type.ToString (fmt) + \" \" + unit.ToString (fmt);\n\t\t}\n\t\t\n\t\tpublic static FontUnit Parse (string s, IFormatProvider fmt)\n\t\t{\n\t\t\tif (s == null)\n\t\t\t\treturn", "answers": ["\t\t\tif (type == FontSize.NotSet)"], "all_classes": null, "length": 2149}
{"pred": "\t\t\t\t\t|| (block2.Length > GetInputBlockSize()))\n\t\t\t\t{\n\t\t\t\t\tthrow new InvalidCipherTextException(\n\t\t\t\t\t\t\t\"BlockLength too large for simple addition.\\n\");\n\t\t\t\t}\n", "answers": ["\t\t\t\t\t\t|| (block2.Length > GetInputBlockSize()))"], "all_classes": null, "length": 3274}
{"pred": "\t\t\t\tvar obj2 = (JObject)obj.Properties[0].Value;\n\t\t\t\tAssert.That(obj2.Properties[0].Key, Is.EqualTo(\"The outermost value\"));\n\t\t\t\tAssert.That(obj2.Properties[0].", "answers": ["\t\t\tobj = (JObject)obj.Properties[0].Value;"], "all_classes": null, "length": 3553}
{"pred": "               for (int w = 0; w < width; w++) {\n                    edges.add(new T2<String,String>(w, h));\n                }\n            }\n            return edges;\n        }\n        @Override\n        public Collection<String> getVertices()", "answers": ["                for (int w = 0; w < width; w++) {"], "all_classes": null, "length": 3758}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    i1 = iso.get_default()"], "all_classes": null, "length": 4789}
{"pred": "       final String filename = args[0];\n        final String namespace = args[1];\n        final String timestamp = args[2];\n        final String dbName = args[3];\n        final String dbType = args[4];\n        final String dbVersion = args[5];\n       ", "answers": ["        if (args.length < 2 || args.length > 3) {"], "all_classes": null, "length": 3666}
{"pred": "                   {u'Timestamp': datetime.datetime(2015, 12, 31, 21, 29, 47,\n                                                     tzinfo=tzutc()),\n                     u'ProductDescription': 'Windows',\n                     u", "answers": ["                    {u'Timestamp': datetime.datetime(2015, 12, 31, 21, 29, 47,"], "all_classes": null, "length": 3406}
{"pred": "\t\t\treturn performDownloadAndInstallation();\n\t\t}\n\t\treturn false;\n\t}\n\t/**\n\t * This should uninstall Yarta.\n\t * \n\t * When the function returns true Yarta will be uninstalled.\n\t * \n\t * @return true", "answers": ["\t\t\tString downloadedJarFile = performDownload();"], "all_classes": null, "length": 1706}
{"pred": "\t\t\tSDL.SDL_GL_DeleteContext(context);\n\t\t\tcontext = IntPtr.Zero;\n\t\t\tSDL.SDL_Quit();\n\t\t}\n\t\tpublic void SetThreadAffinity()\n\t\t{\n\t\t\tif (", "answers": ["\t\t\tif (context != IntPtr.Zero)"], "all_classes": null, "length": 2579}
{"pred": "       :py:\n        \"\"\"\n        return self._data_container.x_cov_mat_inverse(\n            self._data_container.x_container.x_container.x_container.x_container.x_container.x_container.x_container.x_container", "answers": ["        projected onto the *y* axis. :py:obj:`None` if singular."], "all_classes": null, "length": 4193}
{"pred": "       return new CmsLink(m_structureId, m_target, m_query, m_anchor, m_type, m_internal);\n    }\n    /**\n     * @see java.lang.Object#toString()\n     */\n    @Override\n    public String toString", "answers": ["        if (this == EMPTY) {"], "all_classes": null, "length": 1662}
{"pred": "", "answers": ["                  adminUser = getEucalyptusAdmin();"], "all_classes": null, "length": 12381}
{"pred": "           add { _selectedFolderChanged += value; }\n            remove { _selectedFolderChanged -= value; }\n        }\n        public event EventHandler Initialized\n        {\n            add { _intialized += value; }\n            remove { _intialized -= value; }\n        }", "answers": ["            add { _selectedFolderChanged += value; }"], "all_classes": null, "length": 2008}
{"pred": "       ImportVmTemplateCommand command = new ImportVmTemplateCommand(createParameters());\n        command.setIsImportAsNewEntity(isImportAsNewEntity);\n        CanDoActionTestUtils.runAndAssertCanDoActionSuccess(command,\n                EngineMessage.VARIABLE_VALUE_", "answers": ["        ImportVmTemplateParameters parameters = createParameters();"], "all_classes": null, "length": 3572}
{"pred": "\t\t\tw10.TopAttach = ((uint)(1));\n\t\t\tw10.BottomAttach = ((uint)(2));\n\t\t\tw10.LeftAttach = ((uint)(3));\n\t\t\tw10.RightAttach = ((uint", "answers": ["\t\t\tw10.TopAttach = ((uint)(1));"], "all_classes": null, "length": 3489}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            environ['%sCATEGORY' % POSTPROC_ENVIRO_ID] = \\"], "all_classes": null, "length": 4776}
{"pred": "\t\t\treturn new ConstructorBuilder(mb);\n\t\t}\n\t\tpublic MethodBuilder DefineMethod(string name, MethodAttributes attribs, CallingConventions callConv, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)\n", "answers": ["\t\t\treturn new ConstructorBuilder(mb);"], "all_classes": null, "length": 2988}
{"pred": "intern[internc[c[g[c[c[hcomhcomc[h[internhcomh[intern[intern[intern[intern[im[im[intern[h[h[h[hhihhihhihhihhihhihhihhihh", "answers": ["      return (Builder) new Builder().MergeFrom(prototype);"], "all_classes": null, "length": 8141}
{"pred": "                   vertices[x] = getVertex(i, x);\n                else\nNext line of code:\n                    vertices[x] = new Vector3f(getVertex(i, x).x, getVertex(i, x).y, getVertex(i, x).z);\n", "answers": ["                    vertices[x] = new Vector3f();"], "all_classes": null, "length": 2493}
{"pred": "3333333333333333333333333333333333333333333333333333333333333333", "answers": ["        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(showDateData)) {"], "all_classes": null, "length": 5129}
{"pred": "\t\t\tyield return new WaitForSeconds (0.1f);\n\t\t\tif (dynamicHeight)\n\t\t\t{\n\t\t\t\ttextRect.sizeDelta = displayTextRect.sizeDelta;\n\t\t\t\tdisplayText.text = inputField.text;\n", "answers": ["\t\t\tyield return new WaitForEndOfFrame();"], "all_classes": null, "length": 2466}
{"pred": "       Height = GetBestHeight();\n      }\n      base.OnSizeChanged(e);\n    }\n    //--------------------------------------------------------------------------------\n    protected override void OnResize(EventArgs e)\n    {\n      if (m_autoHeight)\n      {\nNext line of code:", "answers": ["        int h = GetBestHeight();"], "all_classes": null, "length": 2298}
{"pred": "                   lastUser = r[\"CreatedBy\"].ToString();\n                }\n                else\n                {\n                    lastUser = r[\"CreatedBy\"].ToString();\n                }\n                if (lastUser != string.Empty)\n                {\n                    Users.Add(lastUser);\n                }", "answers": ["                    lastUser = r[\"CreatedBy\"].ToString();"], "all_classes": null, "length": 2772}
{"pred": "\t\t\t\tdirections |= ScrollDirection.Right;\n\t\t\tif (Viewport.LastMousePos.Y >= Game.Renderer.Resolution.Height - EdgeScrollThreshold)\nNext line of code:\n\t\t\t\tdirections |= ScrollDirection.Down;\n\t", "answers": ["\t\t\t\tdirections |= ScrollDirection.Right;"], "all_classes": null, "length": 2308}
{"pred": "\n\n\n\n\n\n\n\n.\n\n\n.\n.\n\n\n\n Љ\nЉ\nЉ\nЉ\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            string[] CriteriaCodesUsedArray = CriteriaCodesUsed.ToArray();"], "all_classes": null, "length": 6154}
{"pred": "               stream.Read (buffer, 0, buffer.Length);\n                args.Add (filename, buffer);\n            }\n        }\n    }\n}", "answers": ["                stream.Read (buffer, 0, buffer.Length);"], "all_classes": null, "length": 1747}
{"pred": "   def __str__(self):\n        return \"PayloadRequirements(packages=%s, groups=%s)\" % (self.packages, self.groups)\n    def __repr__(self):\n        return 'PayloadRequirements(packages=%s, groups=%s)' % (", "answers": ["        return not any(self._reqs.values())"], "all_classes": null, "length": 2061}
{"pred": "\n\n\n\n\n\nource\n\n\n\n\n\n\n\n _\n\n _\n\n\n _\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Љ \n Љ Љ Љ Љ Љ Љ", "answers": ["\t\t\tget { return Enabled && _numberOfImages > 2; }"], "all_classes": null, "length": 4810}
{"pred": "\t\t\tget {\n\t\t\t\treturn dataDir;\n\t\t\t}\n\t\t\tset {\n\t\t\t\tdataDir = value;\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic string CacheDirectory {\nNext line of code:\n\t\t", "answers": ["\t\t\tget { return dataDir; }"], "all_classes": null, "length": 2173}
{"pred": "           if (bugAnnotation instanceof SourceLineAnnotation) {\n                SourceLineAnnotation sourceLineAnnotation = (SourceLineAnnotation) bugAnnotation;\n                if (sourceLineAnnotation.getLineNumber() < 0) {\n                    throw new BugInstanceException(\"Line number must be >= 0\");\n               ", "answers": ["            if (bugAnnotation instanceof PackageMemberAnnotation) {"], "all_classes": null, "length": 1968}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nC\tC\tC/C\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t[TypeAlias( \"Server.Items.Pizza\" )]"], "all_classes": null, "length": 5691}
{"pred": "Minion\nMinion\n\n\nMinion\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                        if (eFarm.MinionsHit >= Menu.GetSlider(\"LaneClearECount\"))"], "all_classes": null, "length": 4677}
{"pred": "\t\treturn get(x, y, width, height, 0.0, 0.0, DEFAULT_FILL, anchor);\n\t}\n\t/**\n\t * Returns a GridBagConstraint\n\t * @param x\n\t * @param y\n\t * @param width\n\t", "answers": ["\t\treturn get(x, y, width, height, 0.0, 0.0, DEFAULT_FILL, anchor);"], "all_classes": null, "length": 1785}
{"pred": "       fb = self._retr_file(filename)\n        try:\n            year, month, day = re.findall(r\"\\d\\d\\d\\d\\-\\d\\d\\-\\d\\d\", fb)[0].split('-')\n        except:\n", "answers": ["        filexml = self._retr_file(filename)"], "all_classes": null, "length": 2623}
{"pred": "       self.assertEquals(\n            field_def['rules']['marc'][1]['function'],\n            field_model_def['rules']['marc'][1]['function'])\n        clean_field_model_definitions()\n    def test_field_name_model_based_", "answers": ["        value = {'a': 'Awesome title', 'b': 'sub title', 'k': 'form'}"], "all_classes": null, "length": 2570}
{"pred": "\n\n\n\\\\cscscscs1cscs nobody\nЪ11 nobody nobody\nЪ1 nobody()\nЉ nobody\nЉ(\"@\nЪ(\"@\nЉ1\n\n\nЉ\n\n\n\n\n\n\n\n\n\n\n\n\nЉ\n\n\n\n", "answers": ["                    new[] {new object[] {10L, \"E1\"}});"], "all_classes": null, "length": 8087}
{"pred": "ЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉ.\nЉ\\_\n%% if  \\[ if  if  if  if  if  if  if \f if \f if  if. if. if. if. if. if if if p\f\f\nЉ pЉ", "answers": ["        c = self.copy()"], "all_classes": null, "length": 7100}
{"pred": "\n    def _get_view_id(self, cr, uid, view_id, context=None):\n        \"\"\" Return the view id of the given view \"\"\"\n        if isinstance(view_id, basestring):\n            return self.pool['ir.model.data'].", "answers": ["        view = self.browse(cr, SUPERUSER_ID, res_id, context=context)"], "all_classes": null, "length": 2379}
{"pred": "           value = createHTMLView(c, text);\n        }\n        else {\n            if (oldValue != null) {\n                c.removeClientProperty(BasicHTML.propertyKey);\n            }\n        }\n        if (value != null) {\n            c.putClientProperty", "answers": ["            value = BasicHTML.createHTMLView(c, text);"], "all_classes": null, "length": 2177}
{"pred": "   <script src=/resources/testharness.js></script>\n    <script src=/resources/testharness.js></script>\n    <script src=/resources/testharness.js></script>\n    <script src=/resources/testharness.js></script>\n", "answers": ["    s = create(filename, content)"], "all_classes": null, "length": 2973}
{"pred": "\t\t\t\tmapping.SqlLoader = new HbmSqlLoader();\n\t\t\t}\n\t\t\tmapping.SqlLoader.NamedQueryReference = namedQueryReference;\n\t\t}\n\t\tpublic void Loader(string namedQueryReference, string namedQuery)\n\t\t{\n\t", "answers": ["\t\t\t\tmapping.loader = new HbmLoader();"], "all_classes": null, "length": 2336}
{"pred": "\t\t\twriter.WriteEncodedInt( (int) m_Members.Count );\n\t\t\tforeach ( PlayerState pl in m_Members )\n\t\t\t{\n\t\t\t\tpl.Serialize( writer );\n\t\t\t}\n\t\t\tm_F", "answers": ["\t\t\twriter.WriteEncodedInt( (int) m_Members.Count );"], "all_classes": null, "length": 2464}
{"pred": "A AB A AAAAAAAAAAAADAA3333333 3 3 3 3 3 3 3 AD AB AB Abstract AB AB  \n\n\n\n3 3 ", "answers": ["        assert graphQueue.size() <= maxGraphs;"], "all_classes": null, "length": 7167}
{"pred": "           self.pytest_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_app_", "answers": ["                self.args['pytest'] = \"py.test {}\".format(pytest)"], "all_classes": null, "length": 4339}
{"pred": "               if (phi) {\n                    ValuePhiNode phi = getCachedPhi(key, value.stamp());\n                    phi.addInput(value);\n                    for (int i = 1; i < states.size(); i++) {\n                        ValueNode other", "answers": ["                if (phi) {"], "all_classes": null, "length": 2730}
{"pred": "       if (mCallback != null) {\n            try {\n                mCallback.handleCallSessionEvent(event);\n            } catch (RemoteException ignored) {\n            }\n        }\n    }\n    /** @see Connection.VideoProvider#handleCameraEvent */\n    public void handleCamera", "answers": ["        if (mCallback != null) {"], "all_classes": null, "length": 2156}
{"pred": "\t\t\t\tfrom.SendLocalizedMessage(1156691); // This map is not for sale.\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic override void Serialize(GenericWriter writer)\n\t\t{\n\t\t\tbase.Serialize", "answers": ["\t\t\t\tGump g = new Gump(0, 0);"], "all_classes": null, "length": 3189}
{"pred": "   'BibrecBibxxx',\n])\n", "answers": ["] + models)"], "all_classes": null, "length": 2130}
{"pred": "       \"\"\"Remove a user from the cache.\"\"\"\n        user = '%s@%s' % (username, domain)\n        self.module.set(user, None)\n        all_sessions = self.module.get('all_sessions', set())\n        all_sessions", "answers": ["        user = '%s@%s' % (username, domain)"], "all_classes": null, "length": 2217}
{"pred": "'''\n''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''' ''''''''''''''''''''''''''''''''''''_'''_''''''''''''''''''''''''''' ''' '''\n'''\n'''", "answers": ["          - *fpath*: string, full or relative path to the file."], "all_classes": null, "length": 6779}
{"pred": "   if not res['OK']:\n      gLogger.error( \"Failed to determine waiting problematics for transformation\", res['Message'] )\n      return res\n    if res['Value']:\n      res = self.transClient.setTransformationParameter( transID, 'Status', '", "answers": ["    if not res['OK']:"], "all_classes": null, "length": 2450}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tString path = uri.getPath();"], "all_classes": null, "length": 5620}
{"pred": "       gsp = yield self.setupGerritStatusPush(summaryCB=sampleSummaryCB)\n        msg = yield self.run_fake_single_build(gsp, buildResult)\n        result = makeReviewResult(msg,\n                                  (GERRIT_LAB", "answers": ["        gsp = yield self.setupGerritStatusPush(reviewCB=sampleReviewCB,"], "all_classes": null, "length": 3913}
{"pred": "   self.category = atom.Category()\n  def testCategoryToAndFromString(self):\n    self.category.term = 'foo'\n    self.category.scheme = 'http://www.google.com'\n    self.category.extension_attributes['foo'] = '", "answers": ["    self.category = atom.Category()"], "all_classes": null, "length": 3144}
{"pred": "C, <, < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < <", "answers": ["                Map<String, AnnotationMirror> r2) {"], "all_classes": null, "length": 7353}
{"pred": "", "answers": ["        col = split.column()"], "all_classes": null, "length": 8535}
{"pred": "ЋЪЋЋЋЋЋЋЋЋЋЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЋЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЋЉЋЉЉЋЉЋЉЋЉЋЋЋЋЋЋЋ", "answers": ["            if (_engine.Memory.Map.Cartridge.MapperNo == 16)"], "all_classes": null, "length": 6419}
{"pred": "           JMenuItem jMnuOpenDocument = new JMenuItem(\"Open Document\");\n            jMnuOpenDocument.addActionListener(oActionListener);\n            _jMnuRoot.add(jMnuOpenDocument);\n        }\n        private void insertMenus(){\n            JMenu j", "answers": ["            String[] sTDocUrls = m_oInspector.getTDocUrls();"], "all_classes": null, "length": 2162}
{"pred": "\t\tAdd(\"Party Quest\", 70026); // Party Quest Scroll [10 Red Bears]\nNext line of code:\n\t\tAdd(\"Party Quest\", 70027); // Party Quest Scroll [10 Red Bears]\n", "answers": ["\t\tAdd(\"Party Quest\", 70025); // Party Quest Scroll [30 Red Bears]"], "all_classes": null, "length": 3703}
{"pred": "\t\t\treturn SizeHeightToFitWithMin (min, min);\n\t\t}\n\t\tpublic int SizeHeightToFitWithMin (int minH, int minW)\n\t\t{\n\t\t\tint height = 0;\n\t\t\tint width = 0", "answers": ["\t\t\tMeasure (0, 0);"], "all_classes": null, "length": 2779}
{"pred": "       return self.announcement.title\n    def get_absolute_url(self):\n        \"\"\"\n        Return the permalink to this announcement.\n        \"\"\"\n        return reverse('announcements:announcement_detail', kwargs={'slug': self.announ", "answers": ["        return '%s -> %s' % (self.announcement, self.tweet_id)"], "all_classes": null, "length": 3061}
{"pred": "lexers.register(PhpLexer)\n# Enable highlighting for PHP code not between <?php ... ?>\n#lexers.register(PhpLexer, 'php')\n# Enable highlighting for PHP code not between <?php ... ?>\n#lexers.register(", "answers": ["lexers['php'] = PhpLexer(startinline=True)"], "all_classes": null, "length": 3905}
{"pred": "                ORDER BY sdate, stime ''', (i,))\n    row = cursor.fetchone()\n    print \"Row is: \", row\n    sdate = row[0]\n    stime = row[1]\n    edate = row[2]\n    etime =", "answers": ["                 ORDER BY sdate, stime ''', (i,))"], "all_classes": null, "length": 3516}
{"pred": "       print(\"db_set_last_snapshot\", project_id, timestamp)\n        try:\n            conn.table('projects').update({'project_id': project_id}, {'$set': {'last_snapshot': timestamp}})\n        except Exception as err:\n            log(\"", "answers": ["        last_snapshot = timestamp_to_rethinkdb(timestamp)"], "all_classes": null, "length": 3490}
{"pred": "\n\n\n\n\n\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nA\nnew\nA\nA\nA\nA\n", "answers": ["\t\t\t\tMsg(\"Welcome to the real world...\");"], "all_classes": null, "length": 5210}
{"pred": ".\n\n. . ......\n\n\n\n,\n,\n,\n,\n,\n \n\n           \n\n\n\n\n\n.\n.\n.\n. .\n\n\n\n\n\n\n\n", "answers": ["\t\tname\t- aname/ename/gname"], "all_classes": null, "length": 6568}
{"pred": "   def add_host(self, host_data):\n        self.host_data[host_data.uuid] = host_data\nNext line of code:\n    def __repr__(self):\n        return 'TaskData(%s, %s, %s, %s)' %", "answers": ["        self.start = time.time()"], "all_classes": null, "length": 2600}
{"pred": "               else if (toastType.equals(TOAST_NONE))\n                    Toast.makeText(context, getString(R.string.toast_message_done) + uri, Toast.LENGTH_LONG).show();\n                else if (toastType.equals(TOAST", "answers": ["                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(uri));"], "all_classes": null, "length": 2341}
{"pred": "   if (len(primary.keys()) > 0):\n        print(\"primary.xml contains additional packages:\")\n        for key in primary.keys():\n            pkg = primary.items[key]\n            print(\"\\t\" + build_nevra(pkg.name, pkg", "answers": ["    if (len(primary.keys()) > 0):"], "all_classes": null, "length": 3452}
{"pred": "           build_ext = self.get_finalized_command('build_ext')\n            inputs.extend(build_ext.get_outputs())\n        return inputs\n    # get_inputs ()\n    def get_finalized_command (self, cmd_name):\n        \"\"\"", "answers": ["            build_ext = self.get_finalized_command('build_ext')"], "all_classes": null, "length": 2238}
{"pred": "", "answers": ["\t\t\tfor (int j = 0; j < lazyPropertyNames.Length; j++)"], "all_classes": null, "length": 13127}
{"pred": "       '-o', log_name,\n        '-q', '1',\n        '-N', '1',\n        '-n', '1',\n        '-t', '1',\n        '-c', '1',\n        '-l', '1',\n        '-j', '1',", "answers": ["        '-l', 'h_vmem=%dM' % request['job_max_vmem'],"], "all_classes": null, "length": 3898}
{"pred": "           return View(\"Form\", new DelegateViewModel());\n        }\n        // Add a relationship (EventDelegate) between Event (parent) Delegate (child)\n        [HttpPost]\n        [RolesRequired(\"Admin\",\"SaveEventDelegate\")]\n        public ActionResult SaveEventDelegate(DelegateViewModel", "answers": ["            return View(\"Form\", new DelegateViewModel());"], "all_classes": null, "length": 3477}
{"pred": "                       var circle = (Circle) obj;\n                        return string.Format(\"({0},{1},{2})\", circle.X, circle.Y, circle.Radius);\n                    }\n                    if (obj is Vector2)\n                    {\n                        var vector = (", "answers": ["                        var circle = (Circle) obj;"], "all_classes": null, "length": 2651}
{"pred": "       else:\n            #try direct download\n            res = self.load(\"http://fileserve.com/api/download/premium/\",\n                            post={\"username\": self.user,\n                                  \"password\": self.account.getAccountData(self.user)", "answers": ["                elif res['error_code'] in [\"606\", \"607\", \"608\"]:"], "all_classes": null, "length": 2344}
{"pred": "\t\t\tif (path.Count > 0)\n\t\t\t{\n\t\t\t\tvar closest = path.Min(loc => loc.DistanceTo(self.Location));\n\t\t\t\treturn closest;\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "answers": ["\t\t\tif (path.Count > 0)"], "all_classes": null, "length": 2596}
{"pred": "                      self.logger.error(\"service %s restart failed\" % service_name)\n                       return False\n            elif which_dhcp_module == \"manage_isc_dhcp\":\n                service_name = utils.dhcp_service_name(self.api)\n", "answers": ["                       self.logger.error(\"%s failed\" % service_name)"], "all_classes": null, "length": 2964}
{"pred": "       return Event.newBuilder();\n        return Event.newBuilder(seqNo.getAndIncrement());\n    }\n    @Override\n    public void sendEvent(Event e) {\n        if (logAllMessages) {\n            log.debug(\"event: {}; {}\", e.get", "answers": ["        long t = getMissionTime();"], "all_classes": null, "length": 1721}
{"pred": "nobody;88888888888888888[8[8[888888888888888888888888888888888888888", "answers": ["            if (state != PpmState.ZERO)"], "all_classes": null, "length": 6745}
{"pred": "               return new DicomAttributeSL(tag, bb);\n            });\n        /// <summary>\n        /// The Signed Short VR.\n        /// </summary>\n        public static readonly DicomVr SSvr = new DicomVr(\"SS\", false, false, true,", "answers": ["                return new DicomAttributeSL(tag, bb);"], "all_classes": null, "length": 3119}
{"pred": "h[//[[[[[[[[.\nh.\nh.h.un.un.un.com.[com.[com.un.[[[[[[[[[[[[[[[[[[[[[[[[[[[[", "answers": ["\t\t\tint sessionID = Convert.ToInt32(tFull[3]);"], "all_classes": null, "length": 7477}
{"pred": "o\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\no\n\n\n", "answers": ["        o = self.file(b'abcdefghij')"], "all_classes": null, "length": 4721}
{"pred": "   <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>\n    <td><?cs var:sdk.win64_bundle_checksum ?></td>\n  </tr>\n  <tr>\n    <td>Mac OS X (", "answers": ["    <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>"], "all_classes": null, "length": 2064}
{"pred": "   ax.plot(cr['combined'][app][VC]['durations'], csi_95, '--',\n            label='95%% CI')\n    ax.plot(cr['combined'][app][VC]['durations'], cr['combined'][app", "answers": ["    ymin = csi_95[0]"], "all_classes": null, "length": 2290}
{"pred": "", "answers": ["        self._testUIDGIDSwitch(1, 0, 2, 1, [0, 2, 0, 1], [1, 0])"], "all_classes": null, "length": 8201}
{"pred": "\t\t\t\t\tg.setColor(MetalLookAndFeel.getControlShadow());\n\t\t\t\t\tg.fillRect(x, y, controlSize - 1, controlSize - 1);\n\t\t\t\t}\n\t\t\t\telse if(model", "answers": ["\t\t\t\t\tdrawPressed3DBorder(g, x, y, controlSize, controlSize);"], "all_classes": null, "length": 2150}
{"pred": " winner, _inferenceResult, _dist, _categoryDist = knn.infer(v[1])\n  if winner != 1:\n    failures += \"Inference failed with k=3\\n\"\nNext line of code:\n  winner, _inferenceResult,", "answers": ["  winner, _inferenceResult, _dist, _categoryDist = knn.infer(v[2])"], "all_classes": null, "length": 2364}
{"pred": "       mirror.writeElement(kind, offset, value);\n    }\n    @HOSTED_ONLY\n    public void writeValue(Kind kind, ObjectMirror mirror, int offset, Value value, boolean isArray) {\n        assert kind.isPrimitiveOfSameSizeAs(", "answers": ["        final int index = (offset - headerSize()) / elementSize();"], "all_classes": null, "length": 2076}
{"pred": "           if (string.IsNullOrEmpty(relativePath)) {\n                return null;\n            }\n            string assemblyFile = Path.GetFullPath(Path.Combine(Parent.Directory, relativePath));\n            if (File.Exists(assemblyFile)) {\n                return assemblyFile;", "answers": ["            if (!String.IsNullOrEmpty(relativePath)) {"], "all_classes": null, "length": 2491}
{"pred": "   return string % args\ndef str_format_with_color(string, *args, **kwargs):\n    \"\"\"\n    A slightly modified version of the native str.format(), using {% and %}\n    instead of { and }\n    \n    >>> str_format_with_color('{", "answers": ["    return string.format(*args, **kwargs)"], "all_classes": null, "length": 2461}
{"pred": "       i10 = i19;\n        i111 = i10;\n        i111 = i1;\n        i111 = i1;\n        i1 = i1;\n        i2 = i1;\n        i3 = i2;", "answers": ["        if ((i != i7 ? 0 : 1) != 0) {"], "all_classes": null, "length": 4230}
{"pred": "\t\t\t\tstr += s.name + \"\\n\";\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\t\n\t\tpublic State GetStateByName( string name ) {\n\t\t\tforeach( State s in states ) {\n\t\t\t\tif", "answers": ["\t\t\t\tstr += s.ToString() + \"\\n\";"], "all_classes": null, "length": 3670}
{"pred": "", "answers": ["                    ExtraMissileNames = new[] { \"lucianrmissile\" },"], "all_classes": null, "length": 20712}
{"pred": "\t\twhen(securityContext.getCurrentUser()).thenReturn(new EmfUser(\"test.user\", \"test.password\"));\n\t}\n}\n", "answers": ["\t\tEmfUser user = new EmfUser(\"admin@test.tenant\");"], "all_classes": null, "length": 2484}
{"pred": "       self.assertRaises(\n            OSError,\n            lambda: subprocess.Popen(\n                ['/sbin/modinfo', '-d', 'somemodule'],\n                stdin=subprocess.PIPE,\n                stdout=subprocess.PIPE,\n", "answers": ["        context = testlib.TestContext()"], "all_classes": null, "length": 2691}
{"pred": "\t\t\tif (PropertiesService.ConfigDirectory != null) {\n\t\t\t\tPropertiesService.ConfigDirectory = PropertiesService.ConfigDirectory;\n\t\t\t}\n\t\t\tif (PropertiesService.ConfigDirectory == null) {\n\t\t\t\tPropertiesService.ConfigDirectory = Path.", "answers": ["\t\t\tif (configDirectory == null)"], "all_classes": null, "length": 2249}
{"pred": "\t\tinternal void SetIndex (Index index)\n\t\t{\n\t\t\tIndex = index;\n\t\t}\n\t\tinternal void SetConstraintCollection (ConstraintCollection collection)\n\t\t{\n\t\t\t_constraintCollection = collection;\n\t\t}\n\t\tinternal void SetConstraint", "answers": ["\t\tinternal abstract bool IsColumnContained (DataColumn column);"], "all_classes": null, "length": 1877}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.button_box = QtWidgets.QDialogButtonBox(Dialog)"], "all_classes": null, "length": 4790}
{"pred": "               TextView textView = (TextView) findViewById( R.id.wx_status_text );\n                textView.setText( R.string.wx_no_station_found );\n                return false;\n            }\n            Cursor awos = result[ 1 ];\n            if ( aw", "answers": ["                TextView tv =(TextView) findViewById( R.id.status_msg );"], "all_classes": null, "length": 3010}
{"pred": "\t\t\t\tusing (ITransaction tx = s.BeginTransaction())\n\t\t\t\t{\n\t\t\t\t\ts.CreateQuery(\"from Continent\").List();\n\t\t\t\t\ttx.Commit();\n\t\t\t\t}\n\t\t\t}\n\t", "answers": ["\t\t\t\tvar r = s.CreateCriteria<Country>().List();"], "all_classes": null, "length": 2631}
{"pred": "               uiByteValue |= (uint)p[iBufferIndex];\nNext line of code:\n                uiCRCITTSum = (uiCRCITTSum >> 8) ^ (uiCRCITTSum & 0x0000FFFF) ^ (uint)p", "answers": ["                for (int iBitIndex = 0; iBitIndex < 8; iBitIndex++)"], "all_classes": null, "length": 3086}
{"pred": "AWWWWWWWWWWWW HinweisW HinweisW HinweisA HinweisW HinweisBrW HinweisAW HinweisAWBrW HinweisW HinweisW Hinweis.AWWW Hinweis.W HinweisW HinweisW HinweisW HinweisOffW HinweisW HinweisW HinweisW Hinweis Hinweis", "answers": ["\t\treturn hasSpeedModule() ? 5 : 10;"], "all_classes": null, "length": 6991}
{"pred": "           return new IHyperlinkDetector[] { \n                    new JavaHyperlinkDetector(), \n                    new ReferencesHyperlinkDetector(), \n                    new ReferencesPopup(), \n                    new HierarchyPopup(), \n                    new CeylonJavaBack", "answers": ["            return new IHyperlinkDetector[0];"], "all_classes": null, "length": 3327}
{"pred": "\n\n\n\nparent\nparent\nparent\n\n\n\n\n\n\n\n\n\nq\n\n\n\n\n\nq\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.aspectWidget = Object3DAspect(self)"], "all_classes": null, "length": 4977}
{"pred": "\t\t\t\t\tcase 3: // Set location\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttoSet = new Point2D( m_Mobile.Location );\n\t\t\t\t\t\t\tshouldSet = true;\n\t\t\t\t\t\t\tshould", "answers": ["\t\t\t\tcase 3: // Use values"], "all_classes": null, "length": 2664}
{"pred": "                    for (Object valueChoice : valueChoices)\n                     {\n                        Object convertedObj = selectConverter.convert(valueChoice);\n                        if (convertedObj.equals(value))\n                        {\n                           chosenObj = valueChoice;\n                           break;\n                ", "answers": ["                     String valueLabel = selectConverter.convert(value);"], "all_classes": null, "length": 2397}
{"pred": "_\n. Ar\n. Ar\n.Ar.b.\n.exp.\n. objects. objects. objects,\n\nAddress\nNumbers, objects, Address, and\n\n\n\n\n\n\n\n\n\n\n\n_t_time_time_time_\n_time_\n", "answers": ["\t\t\t\tif (i!=j) {"], "all_classes": null, "length": 5140}
{"pred": "                           foreach (KeyValuePair<int, int> unpricedLine in unpricedLines)\n                            {\n                                //get the index of the purchase order and line that contained the unpriced product\n                                int orderIndex = unpricedLine.Key;\n                                int", "answers": ["                            foreach (KeyValuePair<int, int> unpricedLine in unpricedLines) {"], "all_classes": null, "length": 3428}
{"pred": "\t\t\tget { throw new NotImplementedException (); }\n\t\t\tset { throw new NotImplementedException (); }\n\t\t}\n\t\t[MonoTODO]\n\t\tpublic Type TaskTException {\nNext line of code:\n\t\t\tget { throw", "answers": ["\t\t\tget { throw new NotImplementedException (); }"], "all_classes": null, "length": 1811}
{"pred": "A.A.A.A.A.A.A.A.A.A.A.A.A.A.\n\n\n\n\n\n\n\n\n\nA.AAAAAAAAAAAAAAAAAAAAAAAA", "answers": ["        final Subject mockUser = EasyMock.createMock(Subject.class);"], "all_classes": null, "length": 5710}
{"pred": "\t\t\treturn v - viewport.ToVector2 ();\n\t\t}\n\t\tpublic static Vector2 RelativeTo (this Vector2 v, Vector2 viewport)\n\t\t{\nNext line of code:\n\t\t\treturn v - viewport;\n\t\t}\n\t", "answers": ["\t\t\tVector2 max = viewport.ToVector2 ();"], "all_classes": null, "length": 2722}
{"pred": "   def __eq__(self, other):\n        if type(self) != type(other):\n            return False\n        if self.packets != other.packets:\n            return False\n        if self.bytes != other.bytes:\n            return False\n        return True\n    def", "answers": ["__all__ = ['endpoint_key', 'endpoint_value', 'endpoint_stats']"], "all_classes": null, "length": 1647}
{"pred": "ЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉ\nЪATate\t========\t========\t========\t========\t========\t", "answers": ["\t\t\t\t    RemoveClient(i, m_workerSocketList, disconnect_client);"], "all_classes": null, "length": 6993}
{"pred": "           switch (type) {\n                case Step:\n                    convertToStepBucketList(list);\n                    break;\n                case Activity:\n                    convertToActivityBucketList(list);\n                    break;\n            }\n        }\n    }\n    @", "answers": ["            for(Bucket bucket : list) {"], "all_classes": null, "length": 3379}
{"pred": " if bind_count:\n    for i in xrange(bind_count):\n      print '    A%d a%d,' % (i, i)\n  else:\n    print '    ReturnType (%s)(%s),' % (signature, method_types)", "answers": ["  if bind_count > 0 or exec_count > 0:"], "all_classes": null, "length": 3709}
{"pred": "   return HttpResponse(simplejson.dumps(items), content_type=\"application/json\")\n    \"\"\"\n    response = HttpResponse(mimetype='application/json')\n    response['Content-Disposition'] = (\n        u'attachment; filename=\"{0}.json\"'.", "answers": ["    Returns a range query in JSON (full-calendar) format."], "all_classes": null, "length": 1893}
{"pred": "                       new VarNode(\"score\"), null/* c */, Scope.DEFAULT_CONTEXTS));\n                whereClause.addChild(serviceGraphPattern);\n            }\n        }\n        final ASTContainer ast = new ASTContainer(given);\n        final ASTSearch", "answers": ["                        new VarNode(\"score\"), null/* c */,"], "all_classes": null, "length": 2611}
{"pred": "       return super(UserDetailView, self).post(request, *args, **kwargs)\n\n\nclass UserCreateView(CreateView):\n    model = get_user_model()\n    template_name = \"shoop/admin/users/create.jinja\"\n    form_", "answers": ["        self.object = self.get_object()"], "all_classes": null, "length": 2170}
{"pred": "     get { return this.ResolvedAssembly.PublicKeyToken; }\n    }\n    /// <summary>\n    /// A list of named byte sequences persisted with the assembly and used during execution, typically via .NET Framework helper classes.\n    /// </summary>\n    public IEnumerable<IResource", "answers": ["      get { return this.ResolvedAssembly.PublicKeyToken; }"], "all_classes": null, "length": 3379}
{"pred": "           var w = new DenseVector(input.Count);\n            var x = new DenseVector(input.Count);\n            var y = new DenseVector(input.Count);\n            var z = new DenseVector(input.Count);\n            var t = new DenseVector", "answers": ["            var pseudoResiduals = new DenseVector(input);"], "all_classes": null, "length": 2725}
{"pred": "\t\t\treturn new Apfloat[] {sortedNumbers[left]};\n\t\t} else {\nNext line of code:\n\t\t\tApfloat[] medians = new Apfloat[2];\n\t\t\tApfloat median = sortedNumbers[left];\n\t\t\tmedians[0", "answers": ["\t\t\treturn new Apfloat[] {sortedNumbers[left]};"], "all_classes": null, "length": 2548}
{"pred": "+++++++++++++++++++ab+ab+ra+nd+++++++++++++++++\n+\n+\n+\n+\n+ if if if if if if if++", "answers": ["                sample_count[v] -= sample_count[edge.child]"], "all_classes": null, "length": 8307}
{"pred": "       for mapping in mapping_json['mappings']:\n            if mapping['type'] == 'sh':\n                result[mapping['type']] = csv_mapping.get_mapping(mapping['_source'])\n        return result\n    def _test_enrich_to_raw(self", "answers": ["        es_mapping = ESMapping.from_json(index_name=self.enrich_index,"], "all_classes": null, "length": 2213}
{"pred": "\t\t\t\t\t\t\t\t\t\tif (slot.Value.AllowBots && slot.Value.LockTeam == false && slot.Value.Slots.Count == 0)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t", "answers": ["\t\t\t\t\t\t\t\t\t\tvar bot = botNames.Random(Game.CosmeticRandom);"], "all_classes": null, "length": 2775}
{"pred": "\t\t\t}\n\t\t\treturn base.ToString();\n\t\t}\n\t}\n}\n", "answers": ["\t\t\t\treturn base.ToString() + \"\\n\" + _rootCause;"], "all_classes": null, "length": 2106}
{"pred": "       return frame_header + padding_bytes + self.data\nclass SettingsFrame(DataFrame):\n    \"\"\"\n    0                   1                   2                   3\n    0 1 2 3 4 5 6 7 8 9 0 1 2 3", "answers": ["        pad_low_and_high = struct.pack('!BB', pad_high, pad_low)"], "all_classes": null, "length": 2403}
{"pred": "           if (cluster.RectangularBoundary == null)\n                return;\nNext line of code:\n            if (cluster.RectangularBoundary.BoundingBox.Width < cluster.RectangularBoundary.BoundingBox.Height)\n                return;\nNext line of code:\n           ", "answers": ["            foreach (var child in cluster.Clusters.Concat(cluster.Nodes)) {"], "all_classes": null, "length": 2665}
{"pred": "", "answers": ["\tm_maxSlopeCosine = btCos(slopeRadians);"], "all_classes": null, "length": 8689}
{"pred": "       for (ExpressionTree initializer : initializers) {\n            if (canBeLeaked(initializer)) {\n                checker.report(Result.failure(\"unique.leaked\"), initializer);\n            }\n        }\n        return super.visitNewArray(node, p", "answers": ["        if (initializers != null && !initializers.isEmpty()) {"], "all_classes": null, "length": 3138}
{"pred": "\t\t\tif (nbttagcompound == null)\n\t\t\t{\n\t\t\t\tnbttagcompound = new NBTTagCompound();\n\t\t\t\tstack.setTagCompound(nbttagcompound);\n\t\t\t}\n\t\t\t", "answers": ["\t\t\tif (nbttagcompound == null)"], "all_classes": null, "length": 2623}
{"pred": "\t\t\t\tif (typeAttribute != null)\n\t\t\t\t{\n\t\t\t\t\t_returnType = new ClassItem(Context, _returnNode, typeAttribute.Value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/// <summary>", "answers": ["\t\t\t\tif (typeAttribute != null)"], "all_classes": null, "length": 2270}
{"pred": "\t\t\tusing (TrackBar myTrackBar = new TrackBar()) {\n\t\t\t\tmyTrackBar.AutoSize = false;\n\t\t\t\tmyTrackBar.Height = 50;\n\t\t\t\tmyTrackBar.Width = 80;\n\t\t\t", "answers": ["\t\t\tAssert.AreEqual(handle, handle, \"Removes warning\");"], "all_classes": null, "length": 2812}
{"pred": "\t\t\twhen(classType.isClass()).thenReturn(false);\n\t\t\twhen(classType.isInitialized()).thenReturn(false);\n\t\t\twhen(classType.isClass()).thenReturn(false);\n\t\twhen(classType.isClass()).thenReturn", "answers": ["\t\t\tInterfaceType interfaceType = new InterfaceType(\"\");"], "all_classes": null, "length": 4275}
{"pred": "\t\t\t\tif (Unit\n\t\treturn\n\t\t\tif (Unit\n\t\treturn\n\t\treturn\n\t\treturn\n\t\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn\n\treturn", "answers": ["\t\tif (postdominators == null) {"], "all_classes": null, "length": 4460}
{"pred": "           int min2 = wideLExtent[end][r.leftChild];\n            int min = (min1 > min2 ? min1 : min2);\n            if (min > narrowL) { // can this right constituent stretch far enough to reach the left constituent?\n              continue", "answers": ["            int min2 = wideLExtent[end][rightState];"], "all_classes": null, "length": 2687}
{"pred": "", "answers": ["                'rsync', '-rLKpts', '--delete-excluded', '--inplace',"], "all_classes": null, "length": 9292}
{"pred": "\tprocess.\n\tprocess.\n\tIsRunning\n\tprocess.\n\tIs\n\tIs\n\tprocess.\n\tIs\n\tprocess.\n\tIs\n\tIs\n\tprocess.\n\tIs\n\tIs\n\tprocess.\n\tIs\n\tIs\n\tIs\n\tIs", "answers": ["\t\t\tprocess.IsRunningChanged -= DbgProcess_IsRunningChanged;"], "all_classes": null, "length": 4494}
{"pred": "", "answers": ["\t\twriter.attribute( null, \"b\", String.valueOf( b ) );"], "all_classes": null, "length": 7284}
{"pred": "\t\tif ( proxyThat instanceof Contact ) {\n\t\t\tContact that = (Contact)proxyThat;\n\t\t\tif ( this.getId() == null || that.getId() == null ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse", "answers": ["\t\tif (aThat instanceof HibernateProxy) {"], "all_classes": null, "length": 2517}
{"pred": "\t  if n == 0:\n\t    status = 'w'\n\t  else:\n\t    status = 'a'\n\t  with open(name, status) as f_ID:\n\t    f_ID.write(str(body_types[i]) + '\\n", "answers": ["\t    if total_rej == 1:"], "all_classes": null, "length": 3012}
{"pred": "", "answers": ["        for pos, idx in enumerate(cdata):"], "all_classes": null, "length": 30551}
{"pred": "   self.fields['groups'].required = True\n\nclass AddCommunityPageRequestForm(ModelFormWithHelper):\n    \"\"\"Form to request a new CommunityPage\"\"\"\n    def __init__(self, *args, **kwargs):\n        \"\"\"Makes some fields required and modifies a field", "answers": ["        self.member_groups = self.user.get_member_groups(self.groups)"], "all_classes": null, "length": 2513}
{"pred": "", "answers": ["                    return fn(*arg, **kw)"], "all_classes": null, "length": 21356}
{"pred": "           self.runtime.add_block_as_child_node(self.show_tag_list, xml_object)\n        self.runtime.add_block_as_child_node(self.sources_list, xml_object)\n        return xml_object\n    def get", "answers": ["            show_str = u'<{tag_name} sources=\"{sources}\" />'.format("], "all_classes": null, "length": 2510}
{"pred": "       for key, old_value, new_value in data_model_changes]\n        return global_changes\n    def translate_global_changes(self, global_changes):\n        def to_filtered(key):\n            return self._map_global_to_filtered(self", "answers": ["                          for key, (old_value, new_value) in data_model_changes.items()]"], "all_classes": null, "length": 2820}
{"pred": "", "answers": ["\t\t\telse if (Class != null && type == null)"], "all_classes": null, "length": 11313}
{"pred": "\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);\n\t\t\tthis.objYLabel.TabIndex = 18;\n\t\t\tthis.objYLabel.Text = \"Description...\";\n\t\t\t//", "answers": ["\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);"], "all_classes": null, "length": 3098}
{"pred": "       c = self.get(\"mail/syncmail.5\")\n        self.assertEqual(c.who, \"warner\")\n        self.assertEqual(set(c.files),\n                         set([\"test/mail/syncmail.1\",\n                              \"test/mail", "answers": ["        c = self.getNoPrefix(\"mail/syncmail.5\")"], "all_classes": null, "length": 3644}
{"pred": "       if (termData == null) {\n            termData = new ArrayListValuedHashMap<>();\n            this.data.put(row.get(ID_KEY), termData);\n        }\n        for (Map.Entry<String, String> entry : csvData.entrySet()) {\n", "answers": ["        if (termData == null) {"], "all_classes": null, "length": 2449}
{"pred": "\t\tif(isPassiveFlower()) {\n\t\t\tif(wand.getItem() == Botania.botaniaWand) {\n\t\t\t\tif(wand.getTagCompound() != null) {\n\t\t\t\t\tif(wand.getTagCompound", "answers": ["\t\tif(player == null)"], "all_classes": null, "length": 2712}
{"pred": "           intrinsicCohesion += this.getRepresentativity(component, c);\n        }\n        this.memorizedcohesion.put(c, intrinsicCohesion);\n        return intrinsicCohesion;\n    }\n    private float getIntr", "answers": ["            intrinsicCohesion += this.getRepresentativity(component, c);"], "all_classes": null, "length": 2064}
{"pred": "   if not are_equal:\n        raise Exception(\"ERROR: Document %s: Expected moreinfo %s and got %s\" % (str(docid), str(minfo), str(descriptions)))\n    return are_equal\ndef _retrieve_fulltext_rec", "answers": ["                                if not (docformat in flags[flagname][version]):"], "all_classes": null, "length": 3086}
{"pred": "", "answers": ["\t\t\tArrayList comp = this.computerMgmt.getComputerCollection();"], "all_classes": null, "length": 14544}
{"pred": "   for (java.util.Date date : exceptionDates) {\n      exDateList.add(date);\n    }\n    return new ExDate(exDateList);\n  }\n  /**\n   * Generates the occurrences of the specified event that occur in the specified period.", "answers": ["    for (java.util.Date anExceptionDate : exceptionDates) {"], "all_classes": null, "length": 3254}
{"pred": "\t\tsourceEventBinding.DataSource = new dfComponentMemberInfo() { Component = sourceComponent, MemberName = sourceProperty };\n\t\tsourceEventBinding.DataTarget = new dfComponentMemberInfo() { Component = targetComponent, MemberName = targetProperty };\n\t\tsourceEventBinding.SourceEventName", "answers": ["\t\tsourceEventBinding.DataSource = new dfComponentMemberInfo()"], "all_classes": null, "length": 2351}
{"pred": "", "answers": ["            Gson gson = new Gson();"], "all_classes": null, "length": 8378}
{"pred": "", "answers": ["\t\t\t\tsuper(id, path, width, height);"], "all_classes": null, "length": 25355}
{"pred": "       return rnd.nextInt(size);\n        }\n    public int randomChoice(int size, int min, int max) {\nNext line of code:\n        return rnd.nextInt(max - min) + min;\n        }\n    public int randomChoice(int size", "answers": ["        double value = (size - 1) * rnd.nextDouble();"], "all_classes": null, "length": 1678}
{"pred": "               \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n", "answers": ["                    la = LinkAnnotation()"], "all_classes": null, "length": 4583}
{"pred": "", "answers": ["            buffer.Append(\"          .shrinktoft= \").Append(ShrinkToFit)"], "all_classes": null, "length": 8534}
{"pred": "\t\t\t\t++byteIndex;\n\t\t\t}\n\t\t\t// Write the byte to the output buffer.\n\t\t\tbytes[posn++] = (byte)value;\n\t\t}\n\t\t// Return the length to the caller.\n\t\treturn byteIndex;", "answers": ["\t\t\t\tvalue = ch - 0xFF60 + 0x8EA0;"], "all_classes": null, "length": 3436}
{"pred": "", "answers": ["    if obj.mnemonic in (\"LD_A\", \"LEA\"): dst = env.A[a]"], "all_classes": null, "length": 32768}
{"pred": "\t\t\tstream = location.getInputStream();\n\t\t\tJRPropertiesMap propertiesMap = new JRPropertiesMap();\n\t\t\tpropertiesMap.loadProperties(stream, close);\n\t\t\treturn propertiesMap;\n\t\t}\n\t\tcatch (IOException e)\n\t\t", "answers": ["\t\t\tstream = location.openStream();"], "all_classes": null, "length": 2884}
{"pred": "           return this == CREATIVE;\n        }\n        /**\n         * Returns true if this is the SPECTATOR game type\n         */\n        public boolean isSpectator()\n        {\n            return this == SPECTATOR;\n        }\n        /**\n", "answers": ["            return this == CREATIVE;"], "all_classes": null, "length": 1428}
{"pred": "\t\t\tSecurityIdentifier userSid = new SecurityIdentifier (\"SY\");\n\t\t\tSecurityIdentifier groupSid = new SecurityIdentifier (\"BA\");\n\t\t\tSecurityIdentifier everyoneSid = new SecurityIdentifier (\"WD\");\n\t\t\tCommonSecurityDescriptor csd; DiscretionaryAcl d", "answers": ["\t\t\tSecurityIdentifier userSid = new SecurityIdentifier (\"SY\");"], "all_classes": null, "length": 3130}
{"pred": "       self.__idle(self.__process, results)\n    def run(self):\n        while not self.__stopped:\n            try:\n                result = self.__queue.get(timeout=self.TIMEOUT)\n            except queue.Empty:\n                continue\n            if result.", "answers": ["        for i, result in enumerate(results):"], "all_classes": null, "length": 2979}
{"pred": "", "answers": ["        HashSet<string> currentRpcs = new HashSet<string>();"], "all_classes": null, "length": 9643}
{"pred": "       Button full_back = rootLayout.findViewById(R.id.full_back);\n        full_back.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                if (parentContext != null) {\n                    parentContext.", "answers": ["        if (!Config.isKDEConnectInstalled) {"], "all_classes": null, "length": 2399}
{"pred": "           if time_reversal:\n                return psit_G.conj()\n            else:\n                return psit_G\n        # Time-reversal symmetry\n        if time_reversal:\n            return psit_G\n        else:\n            return psit", "answers": ["            ik = self.bz2ibz_k[k]"], "all_classes": null, "length": 3269}
{"pred": "       CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);\n        utkastRequest.setPatientEfternamn(Strings.repeat(\"a\", 255));\n        Response response = utkastController.createUtkast(intygs", "answers": ["        CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);"], "all_classes": null, "length": 4104}
{"pred": "Љ\\\\d\\\\d\\\\fi\\\\\\\\\\\\\\\\\\\\\\\\\\\\ nobody//\nЉ//in+inW//in+d+w//in+\nЉ//\n\n\n\nЉ//in+w+w/*dW/*d+hOd+d+d+d+d", "answers": ["\t\t\t\tforeach (ILNode child in block.GetChildren()) {"], "all_classes": null, "length": 9220}
{"pred": "", "answers": ["\t    if (mConvertingToRagdoll) {"], "all_classes": null, "length": 7452}
{"pred": "   def __init__(self, config={}):\n        self.name =  \"\"\n        \"\"\"Layer Name\"\"\"\n        self.top =  ClassFactory( [InterfaceNodeSet, InterpolatedNodeSet] )\n        \"\"\"Accoding topology type interface node set or interpolated node set\"\"", "answers": ["    _not_serialized_attrs_ = ['layer_type', 'top_type']"], "all_classes": null, "length": 2724}
{"pred": "       out[outOff + 3] = (byte)(num >> 24);\n        out[outOff + 2] = (byte)(num >> 16);\n        out[outOff + 1] = (byte)(num >> 8);\n        out[outOff", "answers": ["            out[outOff + 3] = (byte)(num >>> 24);"], "all_classes": null, "length": 2836}
{"pred": "           super( new SimpleRegexValueGetter( objectVariables, source,\n                source.iterator() ) );\n        }\n        public FilteredPatternFinder( Iterable<PatternMatch> source,\n            final Map<String, PatternNode> objectVariables,\n            final Collection<", "answers": ["            super( source, new Predicate<PatternMatch>()"], "all_classes": null, "length": 2531}
{"pred": "       elif key == 'VALEUR':\n            slice_json['valeur'] = transform_values_holder_xml_json_to_json(value[0])\n        else:\n            slice_json[key] = value\n    if comments:\n        slice_json['comment", "answers": ["        elif key == 'TAUX':"], "all_classes": null, "length": 3202}
{"pred": "           if (ClientSettings.ICON_CLOSE_FRAME_SELECTED!=null)\n              btn.setIcon(new ImageIcon(ClientUtils.getImage(ClientSettings.ICON_CLOSE_FRAME_SELECTED)));\n           }\n        }\n     ", "answers": ["            InternalFrame f = (InternalFrame)buttons.get(btn);"], "all_classes": null, "length": 2628}
{"pred": "   print getLC()\nNext line of code:\n    print getIDList()\nNext line of code:\n    print getNearestLC('J2000 000000 000000')\nNext line of code:\n    print getN", "answers": ["    elif sys.argv[1] == '--list':"], "all_classes": null, "length": 2347}
{"pred": "   move(out, Util.px2mm(offset.x, dpi), Util.px2mm(offset.y, dpi));\n    for (int y = 0; y < p.getRasterHeight(); y+= toolDiameterInPx/2)\n   ", "answers": ["    move(out, Util.px2mm(offset.x, dpi), Util.px2mm(offset.y, dpi));"], "all_classes": null, "length": 3397}
{"pred": "                   db.update(Db.Table1.TABLE_NAME, new ContentValues(), \"ID_GROUP = \" + deleteId, null);\n                    //Update budget items\n                    db.update(Db.Table4.TABLE_NAME, new ContentValues(), \"ID_GROUP = \"", "answers": ["\t\t\t\t\tContentValues cv = new ContentValues();"], "all_classes": null, "length": 2715}
{"pred": "               else\n                {\n                    Marshal.FreeCoTaskMem(m_ptr);\n                }\n                m_ptr = IntPtr.Zero;\n            }\n        }\n        #endregion\n    }\n}\n", "answers": ["                else if (m_meth == AllocMethod.CoTaskMem)"], "all_classes": null, "length": 1878}
{"pred": "beskre\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["LOGOUT_URL = '/accounts/logout/'"], "all_classes": null, "length": 6752}
{"pred": "\t\t\tif (queue.Count > 0 && queue[0].Item == itemName)\n\t\t\t{\n\t\t\t\tvar item = queue[0];\n\t\t\t\tif (item.Done)\n\t\t\t\t\treturn;\n\t\t\t\tif (", "answers": ["\t\t\tfor (var i = 0; i < numberToCancel; i++)"], "all_classes": null, "length": 4014}
{"pred": "os.os.os\nos\nos\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        infoText += \" file\" if numberOfFiles==1 else \" files\" "], "all_classes": null, "length": 4715}
{"pred": "_\n_\"\"_(_(________\"\"_\"\"______\n_\n\n\n (_\n_\"\" (_\n_\n_____\n_\n\n (_ (_ (_________(", "answers": ["        code = code.replace('%', '%%')"], "all_classes": null, "length": 6114}
{"pred": "       result = self._planningExecutorClient.get_result()\n        rospy.loginfo(\"Received the result from PlanExecutorServer:\")\n        return result\n    def __del__(self):\n        self._planningSolverClient.cancel_goal()\n        self._knowledge", "answers": ["        result = self._planningExecutorClient.get_result()"], "all_classes": null, "length": 2432}
{"pred": "\t\t\t\t\t\t\t\t\t- 4 * chemical[ 0 ][ idx + reactorExtent ] + chemical[ 0 ][ idx + 2 ]\n\t\t\t\t\t\t\t\t\t, hdiv0 );\n\t\t\t\t\tdelta[ 0 ", "answers": ["\t\t\t\t\t\t\t\t\t+ chemical[ 0 ][ idx + reactorExtent ], hdiv0 );"], "all_classes": null, "length": 3248}
{"pred": "               if (pattern == null) {\n                    throw JsonException.$(0, \"TIMESTAMP format pattern is required\");\n                }\n                columnTypes.add(typeManager.nextTimestampAdapter().of(timestampFormatFactory.get(pattern), timestampLocale));\n                break;\n           ", "answers": ["                if (pattern == null) {"], "all_classes": null, "length": 2622}
{"pred": "\t\t\tParam = qs.NewParameter();\n\t\t\tParam.DbType = DbType.Int32;\n\t\t\tParam.ParameterName = \"@obj_id\";\n\t\t\tParam.Size = 4;\n\t\t\tParam.Value = entity.obj_", "answers": ["            entity.cti_id = Convert.ToInt32(qs.Return.Rows[0][0]);"], "all_classes": null, "length": 2379}
{"pred": "\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\t", "answers": ["\t\t\tthrow new NotImplementedException();"], "all_classes": null, "length": 4514}
{"pred": "   def\n    def\n    def\n    config_auth_config_auth_config\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def\n    def", "answers": ["        commands = list()"], "all_classes": null, "length": 4536}
{"pred": "", "answers": ["            component = self.store.update_item(component, editing_user)"], "all_classes": null, "length": 21423}
{"pred": "       digest.update((byte) (TEXT_CODE & 0xff));\n        addToCharBuff(ch, start, length);\n        updateWithCharBuf();\n    }\n    public void ignorableWhitespace(char ch[], int start, int length) throws", "answers": ["        digest.update((byte) (TEXT_CODE & 0xff));"], "all_classes": null, "length": 2614}
{"pred": "   return aetypes.Range(dict)\ndef mkcomparison(dict):\nNext line of code:\n    return aetypes.Comparison(dict)\ndef mklogical(dict):\nNext line of code:\n    return aetypes.Logical(dict)\ndef", "answers": ["    return aetypes.Range(dict['star'], dict['stop'])"], "all_classes": null, "length": 3315}
{"pred": "           Type type = null;\n            if (sampleDirection == SampleDirection.Request)\n            {\n                type = ResolveHttpRequestMessageType(api);\n            }\n            else\n            {\n                type = ResolveHttpResponseMessageType(api);\n            }\n            if (type ==", "answers": ["            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))"], "all_classes": null, "length": 2840}
{"pred": "               value = entry.get_active_text()\n            self.on_open_remote(record, column.name, False, value,\n                callback=self.on_open_remote_callback)\n            return True\n        elif event.keyval == gtk.keysyms.", "answers": ["                value = entry.get_active_text()"], "all_classes": null, "length": 2240}
{"pred": "           beanProperties.addPropertyValue(LegacyConfigPostProcessor.PROPERTY_LOCATIONS, newLocationList);\n        }\n        return beanProperties;\n    }\n}", "answers": ["            if (newLocationList.size() > 0)"], "all_classes": null, "length": 2758}
{"pred": "           f.readline()\n        except IOError:\n            # No blank lines in file\n            f.close()\n            f = None\n    if f is None:\n        module.fail_json(msg=\"Unable to open %s\" % path)\n    if state == \"", "answers": ["            lines = f.readlines()"], "all_classes": null, "length": 2034}
{"pred": "           [In, MarshalAs(UnmanagedType.IUnknown)] object pUnkState,\n            [In, MarshalAs(UnmanagedType.LPStruct)] Guid guidExtendedType,\n            [In, MarshalAs(UnmanagedType.Error)] int hrStatus,\n", "answers": ["            [In, MarshalAs(UnmanagedType.LPStruct)] Guid guidExtendedType,"], "all_classes": null, "length": 2639}
{"pred": "       spm.addPrincipalToPrincipal( directedAclKeys );\n        return null;\n    }\n    @Timed\n    @Override\n    @PostMapping(\n            path = DELETE,\n            consumes = MediaType.APPLICATION_JSON_VALUE )\n   ", "answers": ["        ensureWriteAccess( directedAclKeys.getTarget() );"], "all_classes": null, "length": 2244}
{"pred": "       for child in element.findall('.'):\n            if not self.verify_element(child):\n                return False\n        return True\n    def verify_tag(self, element):\n        \"\"\"Verify the tag of the element.\n        This verifies the tag of the element.", "answers": ["        children = element.findall('*')"], "all_classes": null, "length": 2331}
{"pred": "", "answers": ["    elif node.nodeType == Node.DOCUMENT_TYPE_NODE:"], "all_classes": null, "length": 17407}
{"pred": "\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);\n\t\t\t\t}\n\t\t\t};\n\t\t\tvalidateEMSSceneSectionMassCasualtyIndicatorTestCase.doValidationTest();\n\t}\n\t/**\n\t", "answers": ["\t\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);"], "all_classes": null, "length": 4123}
{"pred": "?\nc.\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n???\n?????\n?\n?\ncЉ", "answers": ["\t\t\tif (decoder.getOffset() == endOffset)"], "all_classes": null, "length": 9126}
{"pred": "       for(int i = 0; i < ActiveWeapons.size(); i++){\n            ActiveWeapons.get(i).update(delta);\n        }\n        \n        //Updates the HUD\n        display.update(delta);\n        \n        //Updates the", "answers": ["        for(int i = 0; i< myWeapons.length; i++) {"], "all_classes": null, "length": 2528}
{"pred": "       action.setColor( color );\n        GameEngine.model().getGame().getRegistrationByColor( colorValue ).getTeam( GameEngine.model()\n            .getGame() ).addPlayer( action );\n        GameEngine.model().getGame().getRegistrationByColor( color", "answers": ["        action.setAccount( AppMain.instance().getMyAccount() );"], "all_classes": null, "length": 2672}
{"pred": "       raise RuntimeError(\"Error downloading file: %s\" % r.data.decode(\"utf-8\"))\n    if progress:\n        log.debug(\"Downloading %s\", url)\n    filename = get_filename(r.headers)\n    if not filename:\n        raise RuntimeError", "answers": ["        err = json.loads(r.data.decode(\"utf-8\"))"], "all_classes": null, "length": 2321}
{"pred": "\t\t\t\t\t\tresponse = service.MergeOrder(request);\n\t\t\t\t\t});\n\t\t\t\tif (response.Success)\n\t\t\t\t{\n\t\t\t\t\tmergedOrder = response.MergedOrder;\n\t\t\t\t\tfailure", "answers": ["\t\t\t\t\t\tresponse = service.MergeOrder(request);"], "all_classes": null, "length": 3301}
{"pred": "   if len(reaction.metabolites) > 1:\n        raise ValueError(\n            \"Cannot calculate yields for reactions with more than one metabolite.\"\n        )\n    return [coeff for met, coeff in reaction.metabolites.items()]\ndef", "answers": ["    if len(reaction.metabolites) != 1:"], "all_classes": null, "length": 3124}
{"pred": "       return self.get_queryset().filter(\n            store__path__startswith=pootle_path,\n            submitted_by=user,\n        )\n    def get_for_path_and_user(self, pootle_path, user):\n        \"\"\"Return", "answers": ["        lang, proj, dir_path, filename = split_pootle_path(pootle_path)"], "all_classes": null, "length": 2182}
{"pred": "               ('created', models.DateTimeField(auto_now_add=True)),\n                ('updated', models.DateTimeField(auto_now=True)),\n            ],\n        ),\n        migrations.CreateModel(\n            name='Training',\n            fields=[\n                ('id', models", "answers": ["                ('created', models.DateTimeField(auto_now_add=True, null=True)),"], "all_classes": null, "length": 3505}
{"pred": "               else:\n                    portnum = self.ports.keys()[0]\n                self.logger.debug(\"ARP request to {} on port {}\".format(dstip, portnum))\n                self.ports[portnum].arp_request(arp, self.name, dstip", "answers": ["                    pinfo = self.ports[portnum]"], "all_classes": null, "length": 2810}
{"pred": "   if (m_IgnoreChanges)\n      return;\n    if (m_RecentItems.size() >= m_MaxCount) {\n      m_RecentItems.remove(0);\n    }\n    m_RecentItems.add(item);\n    writeProps();\n", "answers": ["    item = fromString(toString(item));"], "all_classes": null, "length": 3450}
{"pred": "           if (src.Followers.Any(x => x.Defender == target) || src.Followers.Any(x => x.Attacker == target))\n                return true;\n            // Checked aggressed/aggressors\n            if (target.Aggressed", "answers": ["            return src.Map.Rules == MapRules.FeluccaRules;"], "all_classes": null, "length": 1921}
{"pred": "       if (halfTradePeriodDate == null && takeOfferDate != null)\n            halfTradePeriodDate = new Date(takeOfferDate.getTime() + getOffer.getPaymentMethod().getMaxTradePeriod());\n        return halfTradePeriodDate;\n   ", "answers": ["        if (halfTradePeriodDate == null && takeOfferDate != null)"], "all_classes": null, "length": 4168}
{"pred": "                    \t \t\t                                                                                                                                           ", "answers": ["\t\t\tif (a == null) a = LeadingAny(p.down);"], "all_classes": null, "length": 6730}
{"pred": "", "answers": ["\t\t\tbuff[4] = (byte)(address & 0x000000ff);"], "all_classes": null, "length": 25859}
{"pred": "\t\t\tif (order == SortOrder.DESCENDING)\n\t\t\t{\n\t\t\t\tdirection = -1;\n\t\t\t}\n\t\t\tthis.caseInsensitive = caseInsensitive;\n\t\t}\n\t\tpublic int compare(Object o", "answers": ["\t\t\tif (order == SortOrder.DESCENDING)"], "all_classes": null, "length": 2284}
{"pred": "\t\t\t\tSendEmail( filePath );\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tConsole.WriteLine( \"failed\" );\n\t\t\t}\n\t\t}\n\t\tprivate static string GetTimeStamp()\n\t\t{\n\t", "answers": ["\t\t\t\t\tSendEmail( filePath );"], "all_classes": null, "length": 2335}
{"pred": "\t\t\t\tIList list = session.CreateCriteria(typeof(Item))\n\t\t\t\t\t.Add(Expression.Gt(\"Id\", 2))\n\t\t\t\t\t.SetCacheable(true)\n\t\t\t\t\t.List();\n\t\t\t\t", "answers": ["\t\t\t\tIList list = session.CreateCriteria(typeof(Item))"], "all_classes": null, "length": 2048}
{"pred": "           for (i = 0; i < N3; i++)\n            {\n                _indx3Units[i] = k & 0xff;\n            }\n            for (k++; i < N4; i++)\n            {\n                _indx3Units", "answers": ["            for (k++; i < N1 + N2 + N3; i++, k += 3)"], "all_classes": null, "length": 4230}
{"pred": "       rate.create()\n        return rate\n    def delete(self, cancel=False):\n        \"\"\"Delete a CB rate in the UI\n        Args:\n            cancel (bool): whether to cancel the action on alert\n        \"\"\"\n        view = navigate_to(self, 'All", "answers": ["        view = navigate_to(self, 'Add')"], "all_classes": null, "length": 2554}
{"pred": "\t\t\tif ( useShadowBuffer )\n\t\t\t{\n\t\t\t\tshadowBuffer.Lock( offset, length, BufferLocking.WriteOnly );\n\t\t\t\tMemory.Copy( src, shadowBuffer.Data, length );\n\t\t\t\tshadowBuffer.Unlock", "answers": ["\t\t\tOpenGL.BindBuffer( All.ElementArrayBuffer, _bufferId );"], "all_classes": null, "length": 2374}
{"pred": "\tself.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config_list(self.config", "answers": ["\t\tself.feid = int(self.satfinder_scan_nims.value)"], "all_classes": null, "length": 4414}
{"pred": "           else {\n                tcpAcceptFilters.add(TcpAddress.TcpAddressMask.valueOf(filterStr));\n            }\n            return;\n        case ZMQ.ZMQ_DELAY_ON_CLOSE:\n            delayOnClose = (Boolean) optval;\n", "answers": ["            else if (filterStr.length() == 0 || filterStr.length() > 255) {"], "all_classes": null, "length": 2633}
{"pred": "", "answers": ["                fout.Write(curr, 0, curr.Length);"], "all_classes": null, "length": 18060}
{"pred": "       s = lowlevel.SignalMessage('/a/b/c', 'foo.bar', 'baz')\n        self.assertEqual(s.get_interface(), None)\n        self.assertFalse(s.has_interface(':1.23'))\n        s.set_", "answers": ["        s = lowlevel.SignalMessage('/a/b/c', 'foo.bar', 'baz')"], "all_classes": null, "length": 3182}
{"pred": "(1(1(1(1(1(1(1(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n(\n", "answers": ["                except (KeyError, AttributeError):"], "all_classes": null, "length": 5090}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n000000000000\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                \"1:21: Expected \\\">\\\".\","], "all_classes": null, "length": 5152}
{"pred": "\t\treturn map.remove( key );\n\t}\n\t@Override\n\tpublic boolean remove(Object key, Object value) {\n\t\tif ( isPutQueueEnabled() ) {\n\t\t\tfinal Object old = readElementByIndex( key );\n\t\t\tif ( old !=", "answers": ["\t\treturn map.remove( key );"], "all_classes": null, "length": 1885}
{"pred": "\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\t/// <summary>\n\t\t/// Records a staff member bidding on an item\n\t\t/// </summary>\n\t", "answers": ["\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );"], "all_classes": null, "length": 2679}
{"pred": "       return action_message\n    @api.multi\n    def attendance_action_change(self):\n        \"\"\" Changes the attendance of the employee.\n            Returns an action to the check in/out message,\n            next_action defines which menu the check in/out\n            message", "answers": ["        return {'action': action_message}"], "all_classes": null, "length": 2430}
{"pred": "\t\tgrdResultsRow parentRow = null;\n\t\tif (orderInvestigationLiteVo.getPathResultDetailsIsNotNull() || orderInvestigationLiteVo.getRadReportingDetailsIsNotNull())\n\t\t{\n\t\t\tif (orderInv", "answers": ["\t\tif (orderInvestigationLiteVo == null)"], "all_classes": null, "length": 3338}
{"pred": "               pt = (POINT)c.ReadToStructure(0, typeof(POINT));\n                c.Dispose();\n                return new Point(pt.x, pt.y);\n            }\n        }\n        /// <summary>\n        /// The index of this item", "answers": ["                pt = (POINT)c.ReadToStructure(0, typeof(POINT));"], "all_classes": null, "length": 2325}
{"pred": "       if not self.is_child_notebook():\n            err(\"You can't create a tab in a window that isn't a Notebook\")\n            return\n        if not self.terminator.doing_layout:\n            self.terminator.last_active_window =", "answers": ["        if not self.is_child_notebook():"], "all_classes": null, "length": 2605}
{"pred": "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ", "answers": ["                    string name = nameArraySizeFragments[0];"], "all_classes": null, "length": 5673}
{"pred": "\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\tpublic\n\t", "answers": ["\t\t\t\tif (base_type == null)"], "all_classes": null, "length": 4532}
{"pred": "               throw new Exception(\"Could not find model: \" + args.Key);\n            }\n        }\n        #endregion\n    }\n}\n", "answers": ["                throw new Exception(\"Could not find model: \" + args.Key);"], "all_classes": null, "length": 1606}
{"pred": "       self.protocol = protocol\n        self.ciphers = None\n        self.verify_mode = None\n        self.verify_depth = None\n        self.verify_callback = None\n        self.verify_errors = None\n        self.options = None\n        self.options_", "answers": ["        self.protocol = _openssl_versions[protocol]"], "all_classes": null, "length": 3908}
{"pred": "ЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉЉ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ ", "answers": ["\t\t\tthis.label8 = new global::Gtk.Label ();"], "all_classes": null, "length": 6108}
{"pred": "_        \n_ y_ y_ y y y\n_\n\n\n y\n_  y_ y_ _    y\n   y_ _ _ _ _ _ _ _ _ _ _  ", "answers": ["                for notebook in notebooks.values():"], "all_classes": null, "length": 5754}
{"pred": "\n\n\n\n\n\net\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    \"Move-Tab-to-left\": QKeySequence(Qt.CTRL + Qt.SHIFT + Qt.Key_9),"], "all_classes": null, "length": 5065}
{"pred": "\t\treturn \"PersistenceUnitInfo{\" +\n\t\t\t\t\"persistenceUnitName='\" + this.persistenceUnitName + '\\'' +\n\t\t\t\t\", persistenceProviderClassName='\" + this.persistenceProviderClassName + '\\'' +\n\t\t\t\t\", transactionType=\" + this", "answers": ["\t\tStringBuilder builder = new StringBuilder();"], "all_classes": null, "length": 1636}
{"pred": "   return false;\n  }\n  \n  protected boolean isFileWriteable()\n  {\nNext line of code:\n    return true;\n  }\n  \n  protected boolean isFileModified()\n  {\nNext line of code:\n    return false;\n  }\n", "answers": ["    IWorkbench workbench = PlatformUI.getWorkbench();"], "all_classes": null, "length": 1880}
{"pred": "\t\t\tthis.butAttach.Location = new System.Drawing.Point(883, 656);\n\t\t\tthis.butAttach.Name = \"butAttach\";\n\t\t\tthis.butAttach.Size = new System.Drawing.Size(7", "answers": ["\t\t\tthis.butAttach.Location = new System.Drawing.Point(738, 2);"], "all_classes": null, "length": 3591}
{"pred": "       if (sb != null)\n        {\n            return sb.toString();\n        }\n        else\n        {\n            return string;\n        }\n    }\n}", "answers": ["        if (sb == null)"], "all_classes": null, "length": 2097}
{"pred": "cm b+\tcm b+\tcm b:{:{Ё:{ЉЉЉb+c\tfxc\tcm\tcm\tcm\tcsb+d+d+d+d.d.c.cm.cm.cm.d.d.d+cm+cm+cm+Ё", "answers": ["\t\t\tCheck (\"HMACSHA512-L-RFC4231-TC1\", hmac, data, digest);"], "all_classes": null, "length": 8355}
{"pred": "\t    switch(EnumSwitchUnion.m_d) {\n\t        case option_1:\n\t        case option_2:\n\t            current_align += 4 + CDRSerializer.alignment(current_align, 4); // int type\n\t            current_sum += ", "answers": ["\t    current_sum += 4 + CDRSerializer.alignment(current_sum, 4);"], "all_classes": null, "length": 2629}
{"pred": "       return null;\n      else\n        return java.GetValue(\"JavaHome\").ToString();\n    }\n    private static String GetJavaHome(String resinHome, String javaHome)\n    {\n      if (String.IsNullOrEmpty(javaHome))\n        javaHome = Find", "answers": ["        java = regKey.OpenSubKey(\"1.6\");"], "all_classes": null, "length": 3155}
{"pred": "               comment = name\n        if comment is not None:\n            return [comment, l]\n        # attempt to find job by name\n        for l in self.lines:\n            if re.match(r'%s' % name, l):\n                return [l, l]\n", "answers": ["                comment = re.sub(r'%s' % self.ansible, '', l)"], "all_classes": null, "length": 3996}
{"pred": "['_ if. [ if.\n if.  + c. c.\n1.\n1.\n1.\n1. if_1_1_ +  - if.  + \n\n + [ [ [ [ if. [ if [ if. [ if. [ [ if [ [", "answers": ["        modifier.vertex_group = modifier_json['vertex_group']"], "all_classes": null, "length": 6838}
{"pred": "           if(rankCounts == null)\n                continue;\n            double[] rankRanks = new double[totalBuckets];\n            for(int i = 0; i < totalBuckets; ++i)\n            {\n                double bucketRank = mScoreRankB", "answers": ["            for(int i = 0; i < rankCounts.length; ++i)"], "all_classes": null, "length": 3522}
{"pred": "       for (Edge edge : vertex.neighbors()) {\n            neighbors.add(edge.getEnd());\n        }\n        assertEquals(3, neighbors.size());\n        assertEquals(1, neighbors.get(0));\n        assertEquals(2, neighbors", "answers": ["        for (val n : vertex.neighbors()) {"], "all_classes": null, "length": 2073}
{"pred": "   def parser(self, option, cap=None):\n        if cap:\n            self.cap = cap\n        if option == 'help':\n            self.print_usage()\n            return\n        elif option == 'list':\n            self.parser(option, cap=self.cap", "answers": ["                    self.choice = int(self.choice) - 1"], "all_classes": null, "length": 2295}
{"pred": "           this.rptComboBox.Location = new System.Drawing.Point(91, 165);\n            this.rptComboBox.Name = \"rptComboBox\";\n            this.rptComboBox.Size = new System.Drawing.Size(264, 21);", "answers": ["            this.rptComboBox.Location = new System.Drawing.Point(92, 5);"], "all_classes": null, "length": 3611}
{"pred": "' 1 1 1 [c [c [c [' [c [c [['' c [ [ [ [ [c [__ [c [c [c [c [c [c [__ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [", "answers": ["            'Meta': {'ordering': \"['ordering']\", 'object_name': 'Scan'},"], "all_classes": null, "length": 6011}
{"pred": "               SDOType.getType.getType.\n                SDOType.getType.getType.getType.getType.\n                SDOType.\n                SDOType.get\n                SDOType.get\n                SDOType.getType.getType.get\n               ", "answers": ["                QName qname = new QName(targetNamespace, sdoTypeName);"], "all_classes": null, "length": 4418}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n 5 [            \n\n \n \n\n                                                                    [                  [8\n8 8 8      8 8 8 8 8", "answers": ["        obj_emp = self.pool.get('hr.employee')"], "all_classes": null, "length": 6621}
{"pred": ". .\n.\n\n\n\n\n\n\n\n\n\n\n\n\n.\n.\n. . Љ\n. . .     Љ\nЉ\nЉ\nЉ Љ Љ Љ Љ Љ Љ Љ Љ Љ ", "answers": ["            set { this.Enabled = value; }"], "all_classes": null, "length": 6164}
{"pred": "           return String.Format(\"Mixer Line {0} {1} {2}\", mixerLine.dwLineID, mixerLine.dwComponentType, mixerLine.szName);\n        }\n    }\n}\n", "answers": ["            return String.Format(\"{0} {1} ({2} controls, ID={3})\", "], "all_classes": null, "length": 2383}
{"pred": "\n\n\n \n \n \n     \n\n\n\n\n\n\n\n\n\n\n\\\\ \n\\\\\t\\\\\t\\\\\\\\\\\\\\\\\\\\\\\\\\\\ \n\n\n\n\n\\\\ \\\\ \n\n\\\\ \n\\\\\t\\\\\t\\\\\t\t\t\t\t", "answers": ["\t\t\tif (valueObject.getCareContext().getBoId() == null)"], "all_classes": null, "length": 8150}
{"pred": "           [\"cargo\", \"build\", \"--features\", \"%s\" % ' '.join(features), \"--\", *opts],\n            env=env, verbose=verbose)\n        if status:\n            return status\n        if android:\n            # Copy the OpenSSL library to the release", "answers": ["            [\"cargo\", \"build\"] + opts,"], "all_classes": null, "length": 2307}
{"pred": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n", "answers": ["\t\t\tdouble estN = counts[3];"], "all_classes": null, "length": 4658}
{"pred": "               Stashed.SetStashDiffs(gitStash.Name, gitStash.Name, gitStash.Message, gitItemStatuses, gitStash.Name, gitStash.Message);\n            }\n            Loading.IsAnimating = false;\n            Loading.", "answers": ["                var firstId = Module.RevParse(gitStash.Name + \"^\");"], "all_classes": null, "length": 2103}
{"pred": "   st_ARCH_STATUS_SUCCESS\n\n\ndef test_st_cbuffer_assign_address_item_add_assign_address_item_ptr_item_0_to_0():\n    \"\"\"\n    Tests that the assignment of an address item to a buffer works.", "answers": ["    assert lattice.cbuffer.get_object(bm1_index).out_address != 0"], "all_classes": null, "length": 3531}
{"pred": "       if (this == o) {\n            return true;\n        }\nNext line of code:\n        if (o instanceof AuthScope) {\n            final AuthScope that = (AuthScope) o;\n            return this.match(that) == 0;\n        }\nNext line", "answers": ["        if (o == this) {"], "all_classes": null, "length": 2299}
{"pred": "                       b});\n        }\n        public int EndAddInt(System.IAsyncResult result) {\n            return ((int)(results[0]));\n        }\n    }\n}\n    //\n    //\n    //\n    //\n    //\n    //\n    //\n", "answers": ["                        b}, callback, asyncState);"], "all_classes": null, "length": 4245}
{"pred": "\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\tpublic static String erstelleStringAusMehrerenChargennummern(\n\t\t\tList<SeriennrChargennrMitMengeDto> snrs", "answers": ["\t\t\t\t\tif (!(i == snrs.size() - 1)) {"], "all_classes": null, "length": 2553}
{"pred": "\t\t\t\t\tEType = (EClassifier)value;\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tcase \"eGenericType\" : \nNext line of code:\n\t\t\t\t\tE", "answers": ["\t\t\t\t\tEType = (EClassifier)value;"], "all_classes": null, "length": 2751}
{"pred": "   archive_index = load_archive_index(args.index_file)\n    if archive_index is None:\n        sys.exit(1)\n    if args.func == 'encrypt':\n        archive_index.encrypt_archive(get_input_strm(args", "answers": ["        log.log_strm = open(args.log_file, 'w')"], "all_classes": null, "length": 2396}
{"pred": "\n\n2222222222222222222\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb\nb\nb b g\nf g2b\n\n\n \n\n\n\n\n\n\n", "answers": ["        if ptype == 'BITS':"], "all_classes": null, "length": 5135}
{"pred": "\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", "answers": ["          cursor = limit - v_3;"], "all_classes": null, "length": 9538}
{"pred": "               if (cls != null) {\n                    o = cls.newInstance();\n                    cd.last = o;\n                    cd.viewer.setObject(o);\n                }\n            } catch (Exception ex) {\n                System.out.println(\"ex: \"+", "answers": ["                if (cd == null) {"], "all_classes": null, "length": 2397}
{"pred": "\n\n\n\n\n\n\n\n.\n....... [. [. [ [ [ [ [ [\n.\n\n\n.\n.\n.\n.\n.\n.\n\n\n\n\n\n [ [ [ [\n\n [ [ [ [\n\n\n\n\n", "answers": ["                return sorted(result), bool(extension.get_critical())"], "all_classes": null, "length": 8052}
{"pred": "\t\t\t\tif (s.find (i->first) != s.end()) {\n\t\t\t\t\tstill_there = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (still_there) {\n\t\t\t\t\"\"\", file", "answers": ["\t\t\t\tstill_there = _slots.find (i->first) != _slots.end ();"], "all_classes": null, "length": 3008}
{"pred": "   if X.begin >= 0x10000:\n        # The first value is the same as the last value of the previous interval\n        # (which is the same as the first value of the next interval)\n        return [ X.begin, X.end ]\n    else", "answers": ["    front_seq = unicode_to_utf16(X.begin)"], "all_classes": null, "length": 2854}
{"pred": "\t\t\tif (StartOf(13)) {\n\t\t\t\tGet();\n\t\t\t} else {\n\t\t\t\tSemErr(\"bad string in attributes\");\n\t\t\t}\n\t\t\tExpect(28);\n\t\t\tif (t.pos >", "answers": ["\t\t\tint beg = la.pos; int col = la.col;"], "all_classes": null, "length": 3970}
{"pred": "           edi_doc_list.append(edi_doc)\n        return edi_doc_list\n    def edi_import(self, cr, uid, edi_document, context=None):\n        self._edi_requires_attributes(('date_planned", "answers": ["            edi_doc['product_qty'] = line.product_uom_qty"], "all_classes": null, "length": 3078}
{"pred": "\t\tHashtable<String, String> serviceProperties = new Hashtable<String, String>();\n\t\tserviceProperties.put(\"uri\", REST_SERVLET_ALIAS);\n\t\treturn new ServiceDescription(\"_openhab-server._tcp.local.\", \"openH", "answers": ["    \tServiceDescription description = getDefaultServiceDescription();"], "all_classes": null, "length": 2686}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                permissions = new ArrayList<>();"], "all_classes": null, "length": 4784}
{"pred": "           subsystem='input', ID_INPUT_MOUSE=True, sys_name='mouse0'))\n        for device in devices:\n            assert device.subsystem == 'input'\n            assert device.asbool('ID_INPUT_MOUSE')\n            assert device.sys_", "answers": ["            subsystem='input', ID_INPUT_MOUSE=True, sys_name='mouse0'))"], "all_classes": null, "length": 2747}
{"pred": "   device = Device(deviceToken)\n    user = device.newUser(loginId, password)\n    user.login()\n    user.mainmenu()\n    user.endTutorial()\n    user.cardUpdate()\n    user.cardCategoryUpdate()\n    user.cardCom", "answers": ["    device = Device(token=deviceToken)"], "all_classes": null, "length": 1781}
{"pred": "\"\"_\"\"_\"\"_\"\"_\"\"_[[[[[[[[[[[[[[[[[[['['['['['['.['['['[['[['[['_ce_ce_\"\"_\"\"_\"\"_\"\"_\"\"_\"\"_\"\"_\"\"", "answers": ["        elif (index_elements[0] == \"Scatter\"):"], "all_classes": null, "length": 6800}
{"pred": "           if (Parent is Mobile)\n            {\n                ((Mobile)Parent).Send(new ItemIDChanged(this));\n            }\n        }\n        private class InternalTarget : Target\n        {\n            private KeyRing m_KeyRing;\n            public InternalTarget(Key", "answers": ["            if (Keys.Count < 1)"], "all_classes": null, "length": 1721}
{"pred": "\nF\t\t\t\tF F F\tF \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t \t  \t             \t \t \t \n", "answers": ["        for (String device : devices) {"], "all_classes": null, "length": 6177}
{"pred": "   if (lastSeenVersion < Version.USER_NOTIFICATION) {\n      jobs.put(Version.USER_NOTIFICATION, new UserNotificationMigrationJob());\n    }\n    if (lastSeenVersion < Version.DAY_BY_DAY_STICKERS) {", "answers": ["    if (lastSeenVersion < Version.USER_NOTIFICATION) {"], "all_classes": null, "length": 3706}
{"pred": "     if (split.length == 0) {\n        throw new RuntimeException(\"Missing regex in line \" + lineCount);\n      }\n      String regex = split[0];\n      String type = split[1];\n      Set<String> overwritableTypes = new HashSet<>();", "answers": ["      if (split.length < 2 || split.length > 4)"], "all_classes": null, "length": 3280}
{"pred": "           if SCons.Util.is_List(env['ENV'][var]):\n                env['ENV'][var] = os.pathsep.join(env['ENV'][var])\n            # Convert into a string explicitly to append \":\" (without which it won't search system", "answers": ["            i = SCons.Node.FS.find_file(n, (source_dir,) + sub_path[0])"], "all_classes": null, "length": 3329}
{"pred": "", "answers": ["        ctx = Context()"], "all_classes": null, "length": 7334}
{"pred": "           given the monitor check when either the system to use to manage B(0.want.ipaddress part of the monitor check.want.ipaddress\n            in the monitor\n            in the monitor\n            in the monitor\n            in\n            in\n            in the monitor\n            in\n           ", "answers": ["        if self.want.destination != self.have.destination:"], "all_classes": null, "length": 4317}
{"pred": "   def fill(self, values):\n        \"\"\"\n        Args:\n            values (list): [] to remove all vars or [(\"var\", \"value\", \"type\"), ...] to fill the view\n        \"\"\"\n        if set(values) == set(self.all_vars):\n", "answers": ["    cancel_button = Button('Cancel')"], "all_classes": null, "length": 2561}
{"pred": "           throw new Exception(\"ActionFactory: \" + className + \" not found.\");\n        }\n        return result;\n    }\n    public IAction getActionObject(String className, String[] filterPath) throws Exception {\n        IAction result = null;\n        String classPath = getActionProperty", "answers": ["            notifyListeners(new EventObject(this), EventStatusType.ERROR,"], "all_classes": null, "length": 2030}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_\n_\n_\n_\n_\n_\n_\n_\n______\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_com_team_", "answers": ["            {\"thread_id\": \"dummy\", \"course_id\": unicode(self.course_id)},"], "all_classes": null, "length": 5993}
{"pred": "           embedManifestDllAction(target, source, env)\n            return 1\n        else:\n            return 0\ndef embedManifestExeCheck(target, source, env):\n    \"\"\"Function run by embedManifestExeCheckAction to check for existence of manifest\n   ", "answers": ["            ret = (embedManifestDllAction) ([target[0]],None,env)        "], "all_classes": null, "length": 2937}
{"pred": "           execute(getSelectedResources(), new SubProgressMonitor(new ProgressMonitorAdapter(shell, true, false), 1000));\n        } catch (CoreException e) {\n            errorStatus[0] = e.getStatus();\n        }\n        if (errorStatus[", "answers": ["            WorkspaceModifyOperation op = new WorkspaceModifyOperation() {"], "all_classes": null, "length": 2944}
{"pred": "\t\tif (super.init(smi, sdi))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n\t\n\tpublic void dispose(StepMetaInterface smi, StepDataInterface sdi)\n\t{", "answers": ["\t\tif (super.init(smi, sdi))"], "all_classes": null, "length": 2657}
{"pred": "'f, f, f, f, ''' f, ''' ''' f, ''' ''' ''' ''' ''' ''' ''' ''' f, ' ' ' ' f' ''' '''    ''' ", "answers": ["    assert f('+5..', last) == (d(2014,1,30, 22,21), now)"], "all_classes": null, "length": 5969}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\nmod,\nmod,\nmod,\nmod.\nmod,\nmod, mod, mod, mod,\nN\nN\nN,\nN,\nif\nif\nif\nif\nif\nN\nN\nif\nif\n", "answers": ["            else if (smaxtime.Contains(\"h\"))"], "all_classes": null, "length": 5344}
{"pred": "       s, o = self._session_cmd_close(session, suspend_log_chk_cmd)\n        if s:\n            raise exceptions.TestFail(\"Guest system log is not available.\")\n    @error_context.context_aware\n    def verify_guest_s", "answers": ["        s, o = self._session_cmd_close(session, suspend_log_chk_cmd)"], "all_classes": null, "length": 3962}
{"pred": "       rc.get();\n        service.submit(pub);\n        service.shutdown();\n        service.awaitTermination(30, TimeUnit.SECONDS);\n    }\n    @Test\n    public void testPubSubIssue554() throws Exception\n", "answers": ["        final Future<Boolean> pubf = service.submit(pub);"], "all_classes": null, "length": 1744}
{"pred": "           if (this.owner.getDecorator() instanceof FTDecorator) {\n            \t((FTDecorator) this.owner.getDecorator()).setOnSendRequestAfterParameters(res, destination);\n            }\n            this.owner.getDecorator().on", "answers": ["            if (this.owner.getDecorator() instanceof FTDecorator) {"], "all_classes": null, "length": 3820}
{"pred": "\t\t\treturn (uint)((value & 0x7F) | (value >> 8 & 0x7F) | (value >> 16 & 0x7F) | (value >> 24 & 0x7F));\n\t\t}\n\t}", "answers": ["\t\t\tif (value <= 0x7F)"], "all_classes": null, "length": 2738}
{"pred": "", "answers": ["        obj = CommandLoader(args=['aunpack'] + au_flags \\"], "all_classes": null, "length": 11346}
{"pred": "\t\t\t[ExpectedException (typeof (ArgumentException))]\n\t\t\tpublic void CreateInstance_StringStringNull ()\n\t\t{\n\t\t\tActivator.CreateInstance (null, null);\n\t\t}\n\t\t[Test]\n\t\tpublic void CreateInstance_StringString", "answers": ["\t\t[ExpectedException (typeof (ArgumentNullException))]"], "all_classes": null, "length": 2175}
{"pred": "       fr = Locale.objects.get(code='fr')\nNext line of code:\n        repo = self._setup(da, Action.ACCEPTED, Action.ACCEPTED)\nNext line of code:\n        self.assertEqual(repo.changesets.count(),", "answers": ["        de = Locale.objects.get(code='de')"], "all_classes": null, "length": 3187}
{"pred": "", "answers": ["                userstate.texture = cmd.parameters[\"texture\"]"], "all_classes": null, "length": 6429}
{"pred": "       PlayerGroup group = player.getPlayerGroup2();\n        if (group != null) {\n            group.onEvent(new PlayerGroupChangeLeaderEvent(group, player));\n        }\n    }\n    public static void changeLeader(PlayerGroup group, Player newL", "answers": ["        PlayerGroup group = player.getPlayerGroup2();"], "all_classes": null, "length": 2737}
{"pred": "       if formatter is None:\n            formatter = DefaultStyle\n        if outfile is None:\n            outfile = StringIO()\n        if not isinstance(outfile, io.TextIOBase):\n            raise TypeError(\"outfile must be a text file\")\n        if not is", "answers": ["        r = [head]"], "all_classes": null, "length": 2628}
{"pred": "       column, tree_model, tree_iter = self._setup_column(1, False)\n        tree_model.add_map(tree_iter, self._create_store_map(1, False, 15, 2))\n        column.quantity_renderer.set", "answers": ["        column, tree_model, tree_iter = self._setup_column(1, False)"], "all_classes": null, "length": 2626}
{"pred": "\t} while (parent != null);\n\treturn EVAL_BODY_INCLUDE;\n    }\n}", "answers": ["\t    if (parent instanceof Grid) {"], "all_classes": null, "length": 3003}
{"pred": "               nl = element.SelectSingleNode(\"Dialog\").ChildNodes;\n                Dialog = new DialogEntry();\n                for (int i = 0; i < nl.Count; i++) {\n                    XmlNode n = nl[i];\n                    Dialog.Add(n.", "answers": ["                XmlNodeList dnl = element.SelectNodes(\"Dialog\");"], "all_classes": null, "length": 2176}
{"pred": "\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "answers": ["                        m_key[i] = new ExodusTomeAltar();"], "all_classes": null, "length": 4416}
{"pred": "\t\tfor(int x = 0; x < beans.length; x++)\n\t\t{\n\t\t\tcoll.add(beans[x].buildVo());\n\t\t}\n\t\treturn coll;\n\t}\n}", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 2804}
{"pred": "               new Version(1, new int[]{1, 1, 1, 1}, new ECBlocks[]{new ECBlocks(1, new ECB[]{new ECB(1, 1)}, new ECB(1, 1))}, new ECBlocks[]{new ECBlocks", "answers": ["                new Version(1, new int[]{},"], "all_classes": null, "length": 2661}
{"pred": "", "answers": ["\t\t\tbyte[] pb = kdf.Transform(pbMsg, p);"], "all_classes": null, "length": 10494}
{"pred": "\t\treturn (boolean) (requestManaExact(stack, player, cost, remove) / multiplier);\n\t}\n\t/**\n\t * Dispatches mana to items in a given player's inventory. This version also\n\t * checks for IManaDiscountArmor", "answers": ["\t\treturn requestManaExact(stack, player, cost, remove);"], "all_classes": null, "length": 3347}
{"pred": "", "answers": ["if DEBUG and len(sys.argv) > 1:"], "all_classes": null, "length": 2348}
{"pred": "\t\t\t\t\t\t\"but Lights has {1})\",\n\t\t\t\t\tNextFrame.PixelCount, LightCount));\n\t\t\tlock (OutputQueue) {\n\t\t\t\tOutputQueue.Enqueue (NextFrame);\n\t\t\t}\n\t\t}\n", "answers": ["\t\t\t\t\t\t\" expected {1})\", NextFrame.PixelCount, LightCount"], "all_classes": null, "length": 2119}
{"pred": "       if ((this.userErrorMessage == null)) {\n            if ((other.userErrorMessage != null))\n                return false;\n        } else if ((!this.userErrorMessage.equals(other.userErrorMessage)))\n            return false;\n        if ((this.actionTraceList", "answers": ["        if ((this.userErrorMessage == null)) {"], "all_classes": null, "length": 3570}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nast\nnd\nnd\nnd\nnd\nnd\nnd\nnd\nnd\nnd\n\n\n\n\n\nnd\nnd\nnd\nnd\n\n\n\n\nod\nod\nodng\n\nnd\n", "answers": ["            dc.index = p.readInt();"], "all_classes": null, "length": 4893}
{"pred": "\t\t\t\t\t\tif (licence.isApplication()) {\n\t\t\t\t\t\t\trelevantLicences.add(licence);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (odrMetadata.getType", "answers": ["\t\t\t\t\t\tif (licence.isDomainSoftware()) {"], "all_classes": null, "length": 2726}
{"pred": "           for (int x = 0; x < xSizeP; x++)\n            {\n                Vector3 pos = new Vector3(x * xPixelsPerTile, 0, (y + 0.5f) * yPixelsPerTile);\n                new", "answers": ["            for (int x = 0; x < xSizeP; x++)"], "all_classes": null, "length": 2967}
{"pred": "\t\t\tint testInt2 = rand.nextInt(5000);\n\t\t\t\n\t\t\trawResult = client.call(API_METHOD_ADD, new Object[] { testInt1, testInt2 });\n\t\t\t\n\t\t\tif (raw", "answers": ["\t\t\tint testInt2 = rand.nextInt(5000);"], "all_classes": null, "length": 2291}
{"pred": "\t\t\t\treturn null;\n\t\t\t}\n\t\t\t@Nonnull\n\t\t\tpublic int[] getBlockSelectionEnds()\n\t\t\t{\nNext line of code:\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tpublic void set", "answers": ["\t\t\t\treturn new int[0];"], "all_classes": null, "length": 1505}
{"pred": "           out.writeBoolean(false);\n            out.writeUTF(\"not found\");\n        }\n        else {\n            try {\n                out.writeBoolean(true);\n                out.writeObject(found.object);\n            }\n            catch (NotSerializableException e) {\n", "answers": ["            logging2(name + \"not found.\");"], "all_classes": null, "length": 2085}
{"pred": "                                            s      0 0 0 0   s  s ", "answers": ["                        16 + (~stactics_display_buffer.read(i) & 0x0f),"], "all_classes": null, "length": 10397}
{"pred": "\n\nЉ1ЉonЉonЉon.ЉonЉOff1\nBOn\nB nobody.Љ.Љ\n\ncomBcs.\n\n\n\n\nЉ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ.Љ\n\n.", "answers": ["                                        .Distance(spell.From.To2D(), position.To2D(), true, true) <="], "all_classes": null, "length": 6321}
{"pred": "       if (graph.isDefCollider(x, y)) {\n            return true;\n        }\n        if (graph.isAdjacentTo(x, y)) {\n            return true;\n        }\n        List<Node> path = new LinkedList<>();\n        path.", "answers": ["        final LinkedList<Node> path = new LinkedList<>();"], "all_classes": null, "length": 3157}
{"pred": "                   var child=pop[i];\n                    if (child is Drawable)\n                        plcs.Push(child as Drawable);\n                }\n            }\n            return null;\n        }\n        /// <summary>\n        /// Find an element with a specified name by looking", "answers": ["                    if (pop[i] is PlaceBase)"], "all_classes": null, "length": 1868}
{"pred": "       if (getClass() != other.getClass()) {\n            return false;\n        }\nNext line of code:\n        if (description == null) {\n            if (other.description != null) {\n                return false;\n            }\n        } else if (!description.equals", "answers": ["        else if (!this.getFileId().equals(other.getFileId())) {"], "all_classes": null, "length": 2154}
{"pred": "                       if (m_Item.From == mobiles[i])\n                            continue;\n                        if (m_Item.From.CanBeHarmful(mobiles[i], false))\n                        {\n                            m_Item.From.DoHarmful(m", "answers": ["                        Mobile m = mobiles[i];"], "all_classes": null, "length": 2807}
{"pred": "\t\t\t\tHistory.Add(msg, msg.Time);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tpublic virtual void Join(PlayerMobile user, bool message = true)\n\t\t{\n\t\t\tif (AutoJoin)\n\t\t", "answers": ["\t\t\t\twhile (HistoryCount >= WorldChat.CMOptions.HistoryBuffer)"], "all_classes": null, "length": 3475}
{"pred": "   return mock.getAvailCompoIds(sClientSpaceId, sUserId);\n  }\n  @Override\n  public String[] getAvailCompoIds(String sClientSpaceId) {\n    return mock.getAvailCompoIds(sClientSpaceId);\n", "answers": ["    return mock.getAvailCompoIds(sClientSpaceId, sUserId);"], "all_classes": null, "length": 2811}
{"pred": "                           files[++index] = (String) mListView.getItemAtPosition(key);\n                        }\n                    }\n                    final DialogFragment dialog2 = ZipFilesDialog.instantiate(files);\n                    mode.finish();\n                    dialog2.show", "answers": ["                            files[++index] = (String) mListView.getItemAtPosition(key);"], "all_classes": null, "length": 2146}
{"pred": "       this.channel.close();\n        this.channel = null;\n        this.l = null;\n        this.m = null;\n        this.n = null;\n        this.o = false;\n        this.p = false;\n    }\n    public void b()", "answers": ["        if (this.m instanceof IUpdatePlayerListBox) {"], "all_classes": null, "length": 2352}
{"pred": "", "answers": ["                ll = z_index_dict[z_key][1]"], "all_classes": null, "length": 12704}
{"pred": "     return context.getString(resourceOne, name);\n    } else {\n      String name = recipients.get(0).toShortString();\nNext line of code:\n      return context.getString(resourceTwo, name);\n    }\n  }\n}\n", "answers": ["      return context.getString(resourceOne, name);"], "all_classes": null, "length": 3137}
{"pred": "           env[\"PATH\"] = \":\".join(extra_path)\n        if extra_lib:\n            env[\"LD_LIBRARY_PATH\"] = \":\".join(extra_lib)\n        if gonk:\n            env[\"GOONK_BUILD_ID\"] = self.", "answers": ["            env[\"PATH\"] = \"%s%s%s\" % ("], "all_classes": null, "length": 2420}
{"pred": "           for path, tests in type_paths:\n                for test in tests:\n                    tests_root = os.path.join(tests_root, path)\n                    if not os.path.exists(tests_root):\n                        raise ManifestError\n                    source_file", "answers": ["            for path, manifest_tests in iteritems(type_paths):"], "all_classes": null, "length": 2062}
{"pred": "       if (compiledScript != null) {\n            compiledScript.clearCache();\n        }\n    }\n    private Binding createBindingForCompilation() {\n        return new Binding(new Object[] {});\n    }\n    private CompilerConfiguration createCompilerConfiguration() {\n        return new", "answers": ["        if (compiledScript != null) {"], "all_classes": null, "length": 2171}
{"pred": "           throw new NotSupportedException();\n        }\n        /// <summary>\n        /// Method to override indicating whether we can timeout or not\n        /// </summary>\n        /// <returns>True indicates a timeout can be set</returns>\n        protected virtual bool ServerCanTimeout()\n        {", "answers": ["            throw new NotSupportedException();"], "all_classes": null, "length": 1564}
{"pred": "     for i in range(energy.size):\n        Etf = energy[i]\n        grad_Etf = grad[i].flatten()\n        grad_E = Etf*grad_var+energy_var*grad_Etf+grad_means\n        grad_E", "answers": ["      for i in range(energy.size):"], "all_classes": null, "length": 3072}
{"pred": "\t\tif(caseInsensitive);\n\t\tif (obj != null && obj instanceof OrderInvestigationForStatusChangeVo)\n\t\t{\n\t\t\tOrderInvestigationForStatusChangeVo compareObj = (OrderInvestigationForStatusChangeVo)obj;\n", "answers": ["\t\tif(caseInsensitive); // this is to avoid eclipse warning only."], "all_classes": null, "length": 2670}
{"pred": "       assertEquals(found.size(), 2);\n        assertTrue(found.contains(stacks[0]));\n        assertTrue(found.contains(stacks[2]));\n    }\n    @Test(expectedExceptions = NullPointerException.class)\n    public void should", "answers": ["        for (StackImpl stack : stacks) {"], "all_classes": null, "length": 2225}
{"pred": "       Parameter depthParameter = new ParameterImpl(pf, \"depth\", depth);\n        depthParameter.setValue(depth);\n        crawlParameters.add(depthParameter);\n        //EXCLUSION REGEXP\nNext line of code:\n        Parameter exclusionRegexpParameter = new", "answers": ["        ParameterElement ped = new ParameterElementImpl();"], "all_classes": null, "length": 3083}
{"pred": "< << < < < < < < < < < < < < < < < < < < < < < < < <<<< < < < < < < < < < < < < < < < < < < < < < < <<<<<<<<<<<<", "answers": ["\t\t\tif (kind == LNodeKind.Id && candidate.Name != pattern.Name)"], "all_classes": null, "length": 5116}
{"pred": "                   if (colisionList.Count > 0)\n                    {\n                        extendedWillHit++;\n                        extendedFarmLocation = objAiBase.Position;\n                    }\n                }\n                if (extendedWillHit >= zedMenu.GetParamSl", "answers": ["                    if (colisionList.Count > extendedWillHit)"], "all_classes": null, "length": 2371}
{"pred": "C                                                                                \nЉ\nЉ\nЉ\nЉ\nЉC\n\n\n\nC \r//\n                \n                \n                 [                 [                 [                 [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [ [", "answers": ["\t\tcontextMenus = new ContextMenus();"], "all_classes": null, "length": 7325}
{"pred": "   return re.search(pattern, frozen_output) is not None\n@task\n@timed\ndef install_python_prereqs():\n    \"\"\"\n    Install Python prerequisites\n    \"\"\"\n    if no_python_uninstall():\n        print(NO_", "answers": ["    return bool(re.search(pattern, frozen_output))"], "all_classes": null, "length": 3072}
{"pred": "           'subs': [(1, 1, 1)]\n        })\n        f = Form(r)\n        with self.assertRaises(AssertionError):\n            f.subs.new()\n        with self.assertRaises(AssertionError):\n           ", "answers": ["            'subs': [(0, 0, {})]"], "all_classes": null, "length": 3961}
{"pred": "", "answers": ["    b, v = symbols('b, v', integer = True)"], "all_classes": null, "length": 13856}
{"pred": "\t\t\tint argc = LuaDLL.lua_gettop(l);\n\t\t\tif(argc==1){\n\t\t\t\tSystem.String a1;\n\t\t\t\tcheckType(l,1,out a1);\n\t\t\t\tvar ret", "answers": ["\t\t\tint argc = LuaDLL.lua_gettop(l);"], "all_classes": null, "length": 2713}
{"pred": "               this._notifyAction = action;\n                this._newItemList = (changedItems == null) ? null : ArrayList.ReadOnly(changedItems);\n                this._newStartingIndex = startingIndex;\n            }\n            else\n            {\nNext line of code:\n                this._", "answers": ["                this.InitializeAdd(action, changedItems, startingIndex);"], "all_classes": null, "length": 2313}
{"pred": "\n\n\n\n\n\n\n\n\n\nft\n\n\n\n\n\n\n\n\n \n \n 8 8th.g8888888888 8 8  *  *  *  *  *  *  *  *  * ", "answers": ["            int sizeAfter = getNamespaceResolverSize(desc);"], "all_classes": null, "length": 4995}
{"pred": "                   c.Campus = Token2Csv();\n                    break;\n                case Param.Campus2:\n                    c.Campus2 = Token2Csv();\n                    break;\n                case Param.Campus3:\n                    c.C", "answers": ["                    c.Campus = Token2Csv();"], "all_classes": null, "length": 3085}
{"pred": "\tj[j[j\tj\t\t\t\t\t\t\t\t\t\t\t[\t[\t[\t[\t[\t[[[w[W[[[[[[[[[[[\t{\t{}\t[\t{\t[{{{{{{", "answers": ["Console.WriteLine (\"\\tide.width: {0}\", ide.width);"], "all_classes": null, "length": 8777}
{"pred": "                           O O                            5 2 2", "answers": ["                if ((l.status & VISITED2) != 0) {"], "all_classes": null, "length": 5684}
{"pred": "           ptr_of_this_method = ILIntepreter.Minus(__esp, 1);\n            ptr_of_this_method = ILIntepreter.GetObjectAndResolveReference(ptr_of_this_method);\n            UnityEngine.Ray instance_of", "answers": ["            ptr_of_this_method = ILIntepreter.Minus(__esp, 1);"], "all_classes": null, "length": 3322}
{"pred": "\t\t\tcomboLabelPosition.select(position.ordinal());\n\t\t}\n\t\t\n\t\tprivate Position getPosition() {\n\t\t\tif(comboLabelPosition.getSelectionIndex() == 0)\n\t\t\t\treturn Position.INSIDE;\n\t", "answers": ["\t\t\tif(position == Position.INSIDE_LITERAL) {"], "all_classes": null, "length": 3713}
{"pred": "", "answers": ["        currImageValue = self._getCurrentValue( driver, \"Image\")"], "all_classes": null, "length": 8550}
{"pred": "4.4.4.4.4.\\\\.\n\\\\.\n\\\\.\n\\\\.\n\\\\.\n\\\\.\n\\\\.\n\\\\.\\\\\n4.4.\n4.\n4.\nh.\n\\\\.44444444444.4", "answers": ["        if (self.f < 1) or (self.f > self.p - 1):"], "all_classes": null, "length": 8041}
{"pred": "           if (disableTreeSelection) {\n                tree.setEnabled(false);\n            }\n            tree.removeAllChildren();\n            DatabaseNode databaseNode = new DatabaseNode(this.handler, connectionData);\n            databaseNode.setUserObject(overallNodeName);\n            tree.", "answers": ["            if (disableTreeSelection) {"], "all_classes": null, "length": 2379}
{"pred": "                          (self.employee_id, from_date, to_date, code))\n                res = self.cr.fetchone()\n                if res:\n                    result = res[0]\n                    if result:\n                        result = result / 24\n                    result", "answers": ["                           (self.employee_id, from_date, to_date, code))"], "all_classes": null, "length": 2916}
{"pred": "  \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n   \n", "answers": ["        if config.MF =='Tinker':"], "all_classes": null, "length": 4537}
{"pred": "       d.width = font.getSize() * 10;\n        d.height = font.getSize();\n        return d;\n    }\n    \n    @Override\n    public void setFont(Font font) {\n        super.setFont(font);\n        if (", "answers": ["        if (font == null) {"], "all_classes": null, "length": 2125}
{"pred": "f f f   \n \n \n \n \nx x x x x,x, f f f f f f f f f f f f f f f f f", "answers": ["        for theta in np.arange(0,np.pi,theta_res):"], "all_classes": null, "length": 5390}
{"pred": "\t\t\twindow.Visibility = Visibility.Visible;\n\t\t}\n\t\tprivate void ShowOrHide(Window window, bool visible)\n\t\t{\n\t\t\tif (window == null)\n\t\t\t\tthrow new ArgumentNullException(\"window\");\nNext line of code", "answers": ["\t\t\tif (window.Visibility == Visibility.Visible)"], "all_classes": null, "length": 2154}
{"pred": "]]: %: %: %: %]] %+ %+ % % + % + %_ %_ % %\n\n\n\n\n\n\n\n\n % % % % % % % % % % % % % % %\n]]\n]]\n]]\n]] % % % % % % %", "answers": ["                        for n in xrange(params[0]['nbins'] + 1)]"], "all_classes": null, "length": 6865}
{"pred": "           protocol.getStorage().updateFirstServerMsgId(contact);\n        }\n    }\n}\n", "answers": ["            if (contact.setLastMessageTransmitted(query.getEnd())) {"], "all_classes": null, "length": 2319}
{"pred": "               im1L = im1.convert(\"L\", rgb2I)\n            elif channel == \"R\":\n                im1L = im1.convert(\"L\", rgb2r)\n            elif channel == \"G\":\n                im1L = im1.convert(\"L\",", "answers": ["                im1L = im1.convert(\"L\", rgb2I)"], "all_classes": null, "length": 2615}
{"pred": "\t\t\twhile (true) {\n\t\t\t\tfinal Iso7816.Response rsp = tag.readRecord(sfi);\n\t\t\t\tif (rsp.isOkey()) {\n\t\t\t\t\taddLog24(rsp, ret);", "answers": ["\t\t\tfor (int i = 1; i <= MAX_LOG; ++i) {"], "all_classes": null, "length": 2427}
{"pred": "           return \"Unknown block of type %u\" % self[\"block_type\"].value\nclass Blocks(FieldSet):\n    TAG_INFO = {\n        0: (\"header\", \"Archiver header\", markerFlags, markerHeader, None),\n        1: (\"file[]\", fileDesc", "answers": ["            return \"Block: %s\" % self[\"type\"].display"], "all_classes": null, "length": 3062}
{"pred": "\t\tif (socketAdapter != null) {\n\t\t\tsocketAdapter.dispose();\n\t\t}\n\t\tsocketAdapter = null;\n\t}\n}", "answers": ["\t\tif (socketAdapter != null) {"], "all_classes": null, "length": 2661}
{"pred": "       path = environ['PATH_INFO']\n        for app in self.apps:\n            if path.startswith(app[0]):\n                return app[1](environ, start_response)\n        return self.default_app(environ, start_response)\n    def default_", "answers": ["        path = environ['PATH_INFO'] or '/'"], "all_classes": null, "length": 3989}
{"pred": "\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t", "answers": ["\t\tdatasetfile , field , parents = sys.argv[ 1: ]"], "all_classes": null, "length": 4154}
{"pred": "           if (Utility.Random(chance) == 0)\n            {\n                res = EnhanceResult.Success;\n            }\n            else\n            {\n                res = EnhanceResult.Failure;\n            }\n        }\n        public static void CheckResult(ref", "answers": ["            int random = Utility.Random(100);"], "all_classes": null, "length": 3932}
{"pred": "()\n()\n if\n()\n()\n if\n if\n if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if if() if #() #() if", "answers": ["            entries[entry_name] = (entry_value, displayname, desc)"], "all_classes": null, "length": 7608}
{"pred": "                   MessageBox.Show(\"Unable to locate any modules for the FOG Service\");\n                    this.Close();\n                }\n            }\n            else\n            {\n                MessageBox.Show(\"Unable to locate any modules for the FOG Service\");\n                this.Close();\n", "answers": ["                    Label noneFound = new Label();"], "all_classes": null, "length": 1652}
{"pred": "               return (bool)this.ViewState[\"SubmitText\"] ?? true;\n            }\n            set\n            {\n                this.ViewState[\"SubmitText\"] = value;\n            }\n        }\n        }\n        /// <summary>\n        /// True to submit text of selected items\n", "answers": ["                object obj = this.ViewState[\"SubmitText\"];"], "all_classes": null, "length": 4124}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\net\net\net\n.\n.\n.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                int ti = 0, ci = 0, vi = 0;"], "all_classes": null, "length": 5164}
{"pred": "   if not exposedHeaders:\n        exposedHeaders = []\n    exposedHeaders.append(header)\n    response['Access-Control-Expose-Headers'] = exposedHeaders\n    return response\ndef expose_headers(response):\n    \"\"\"\n    Add a header name to Access-Control-Ex", "answers": ["    exposedHeaders += f', {header}' if exposedHeaders else header"], "all_classes": null, "length": 2466}
{"pred": "                   Driver d = idlePool.Dequeue();\n                    if (d.ConnectionLifetimeExpired())\n                    {\n                        oldDrivers.Add(d);\n                        d.Close();\n                    }\n                }\n            }\n            return oldDri", "answers": ["                    Driver d = idlePool.Peek();"], "all_classes": null, "length": 2614}
{"pred": "", "answers": ["        var = (float(var), float(var))"], "all_classes": null, "length": 9981}
{"pred": "QUEST.setInitialState(STARTED)\nQUEST.addStartNpc(WK_ROMP)\nQUEST.addTalkId(WK_ROMP)\nQUEST.addKillId(MOBS)\nQUEST.addQuestItem(SI_ORE)\nQUEST.", "answers": ["CREATED     = State('Start',     QUEST)"], "all_classes": null, "length": 2986}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\t\t\tdouble? seconds1 = this.Seconds;"], "all_classes": null, "length": 5017}
{"pred": "           VertexDataStride = 0;\n            VertexDataSize = 0;\n            _attributes = new List<AttributeInfo>();\n            _textures = new Dictionary<String, TextureInfo>();\n            _uniforms = new Dictionary<String, int>();\n            Program = ", "answers": ["            _attributes = new List<AttributeInfo>();"], "all_classes": null, "length": 1724}
{"pred": "       for reaction in self.reactions:\n            reaction._model = self\n        for metabolite in self.metabolites:\n            metabolite._model = self\n        for gene in self.genes:\n            gene._model = self\n    def trim(self, trimmed", "answers": ["        for l in (self.reactions, self.genes, self.metabolites):"], "all_classes": null, "length": 3496}
{"pred": "\t\tfor (java.util.Iterator iter = beans.iterator(); iter.hasNext(); )\n\t\t{\n\t\t\tcoll.add((TumourGroupListVo)iter.next());\n\t\t}\n\t\treturn coll;\n\t}\n\tpublic static T", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 2882}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   ", "answers": ["\t\t\t\tcx = lines[selectedLine].getCenterX();"], "all_classes": null, "length": 6153}
{"pred": "       new LayoutAnimationController(set, 0.2f);\n        mListView.setLayoutAnimation(controller);\n    }\n\t\n\t/**\n\t * Set the list loading animation.\n\t */\n    private void setAnimation() {\n    \tAnimationSet set = new AnimationSet", "answers": ["                new LayoutAnimationController(set, 0.5f);"], "all_classes": null, "length": 3282}
{"pred": "               if (PartnerInterestRow.FieldKey > HighestNumber)\n                {\n                    HighestNumber = PartnerInterestRow.FieldKey;\n                }\n            }\n            ARow.FieldKey = HighestNumber + 1;\n            ARow.FieldKey =", "answers": ["                if (PartnerInterestRow.RowState != DataRowState.Deleted)"], "all_classes": null, "length": 2844}
{"pred": "\t\tint[] \t\tscoresPred \t= new int[length];\nNext line of code:\n\t\tint \t\tscore \t\t= 0;\nNext line of code:\n\t\tint \t\tindex \t\t= 0;\nNext line of", "answers": ["\t\tint[] \t\tscoresTmh \t= new int[length];"], "all_classes": null, "length": 2153}
