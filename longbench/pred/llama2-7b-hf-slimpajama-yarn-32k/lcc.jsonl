{"pred": "\t\t\t\tParticipant p = (Participant)m_Participants[i];\n\t\t\t\tfor ( int j = 0; j < p.Players.Length; ++j )\n\t\t\t\t{\n\t\t\t\t\tDuelPlayer pl =", "answers": ["\t\t\t\tParticipant p = (Participant)m_Participants[i];"], "all_classes": null, "length": 18062}
{"pred": "\t\t\tZ_.add_edge(e_v, e_u, **data.copy())\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\t\tZ_.add_edge(e_u, e_v, **data.copy())"], "all_classes": null, "length": 3999}
{"pred": "       # Open the test file for reading\n        a = Sndfile(ofilename, 'r')\n        nframes = a.nframes\n        buffsize = 1024\n        buffsize = min(nframes, buffsize)\n        # First, read some frames,", "answers": ["        rfd, fd, cfilename   = open_tmp_file('rwseektest.wav')"], "all_classes": null, "length": 2827}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            if e.text == language:"], "all_classes": null, "length": 2476}
{"pred": "\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;\n\t\t\t\t\twriter.addAttribute(\"name\", styleValue.getName());\n\t\t\t\t\twriter.addAttribute(\"value\", styleValue.getValue());\n\t\t\t\t}\n\t\t\t", "answers": ["\t\t\t\t\tOLStyleValue styleValue = (OLStyleValue) value;"], "all_classes": null, "length": 3175}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        longest = max(self.answers)"], "all_classes": null, "length": 5308}
{"pred": "                   mob.Prompt = new SR_NewRunePrompt(RuneAcc, mob.Location, mob.Map);\n                    Send(mob, SR_Utilities.FetchInfo(mob.Account));\n                    break;\n                case 3:\n                    mob", "answers": ["                    mob.Target = new SR_NewRuneTarget(RuneAcc);"], "all_classes": null, "length": 3281}
{"pred": "           for (X509Certificate cert : chain) {\n                cert.print(s);\n            }\n        }\n    }\n}\n/*\n * ServerKeyExchange ... SERVER --> CLIENT\n *\n * The server sends its public key to the client, so that the", "answers": ["            for (int i = 0; i < chain.length; i++)"], "all_classes": null, "length": 4534}
{"pred": "           sp = new JESpace (name, path);\n            spaceRegistrar.put (name, sp);\n        }\n        return sp;\n    }\n    public synchronized static JESpace getSpace (String name)\n    {\n        JESpace sp = (JES", "answers": ["            sp = new JESpace(name, path);"], "all_classes": null, "length": 2986}
{"pred": "\t\t\t\t\tpos = btnEnergizeAll.bottom();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (item.quantity() == 1) {\n\t\t\t\tRedButton btnInfo = new RedButton(Messages.get(this, \"info", "answers": ["\t\t\t\t\tpos = btnEnergizeAll.bottom();"], "all_classes": null, "length": 2702}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        length = int(environ['CONTENT_LENGTH'])"], "all_classes": null, "length": 5546}
{"pred": "   def __reply_status(self, status):\n        self.base.show_update_box_for_reply(self.account_id, status)\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as", "answers": ["        mark = \"setRepeated('%s');\" % status_id"], "all_classes": null, "length": 3348}
{"pred": "   def action_copy_from_sftp_to_ftp(self, login, password, status_id, params, session):\n        try:\n            self.logger.info(\"FM starting subprocess worker copy_from_sftp_to_ftp %s %s\", pprint.", "answers": ["            return {\"error\": False}"], "all_classes": null, "length": 4566}
{"pred": "\t\t\tZoneIdentityPermission z = (ZoneIdentityPermission) a.Union (b);\n\t\t\tAssert.IsTrue (Same (a, z), \"Trusted+Untrusted\");\n\t\t\tAssert.IsFalse (Object.ReferenceEquals (a, z), \"!Reference", "answers": ["\t\t\tIPermission result = a.Union (b);"], "all_classes": null, "length": 2697}
{"pred": "   trust_managers = _get_ca_certs_trust_manager(ca_certs).getTrustManagers()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        certs = []"], "all_classes": null, "length": 2759}
{"pred": "       DomainInfo domainInfo = manager.getDomainInfo(domain);\n        request.setAttribute(\"domainInfo\", domainInfo);\n    }\n    /**\n     * Finds the forward for the domain administration page.\n     *\n     * @param mapping The action mapping\n     * @param domain The", "answers": ["        User user = getUser(request);"], "all_classes": null, "length": 2620}
{"pred": "       self.__datastream_transport = await self.__datastream_protocol.wait()\n        self.__datastream_protocol = self.__datastream_transport.get_pipe_protocol()\n        self.__datastream_fd = self.__datastream_protocol.get_", "answers": ["            self.__tmp_dir, 'datastream.%s.pipe' % uuid.uuid4().hex)"], "all_classes": null, "length": 4660}
{"pred": "\t\t\t\tif (option1) {\n\t\t\t\t\tjumpID = (int) store.GetValue (iter, columnBool2);\n\t\t\t\t\tif (jumpID == 0) {\n\t\t\t\t\t\tjumpID = 1;", "answers": ["\t\t\t\tif(! option1) {"], "all_classes": null, "length": 3436}
{"pred": "       String[] argValues =\n            getArgValues(application, request, defaultMessages, locale, args);\n\n\n        if (args == null) {\n            return null;\n        }\n        String[] argValues = new String[args.length];\n        for (int i = ", "answers": ["        if ((args == null) || (args.length == 0)) {"], "all_classes": null, "length": 4037}
{"pred": "\t\t\t\tfirms = loadFromFile();\n\t\t\t}\n\t\t}), TIMED(new ConfigFile<UUID, TimedData>()\n\t\t{\n\t\t\t@Override\n\t\t\tpublic TimedData create(UUID id, ConfigurationSection conf)\n", "answers": ["\t\t\t\tfirms = loadFromFile();"], "all_classes": null, "length": 2137}
{"pred": "\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {\n\t\t\t@Override\n\t\t\tprotected void createFieldEditors() {\n\t\t\t\taddField(new BooleanFieldEditor(SHOW_MINI_MODE_DIALOG,\n\t\t\t", "answers": ["\t\tPreferencePage generalPage = new FieldEditorPreferencePage() {"], "all_classes": null, "length": 4046}
{"pred": "               m_Owner.Caster.SendAsciiMessage(\"Target selected\");\n            }\n        }\n        private class InternalTarget : Target\n        {\n            private ArchProtectionSpell m_Owner;\n            public InternalTarget(ArchProtectionSpell owner)\n               ", "answers": ["                if (m_Owner.SpellTarget == null)"], "all_classes": null, "length": 1946}
{"pred": "   def _finalize_loaded(self, states):\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for state, dict_ in states.items():"], "all_classes": null, "length": 11313}
{"pred": "\t\tfor(IField field : fields) { \n\t\t\tfinal String name = field.getName().toString();\n\t\t\tList<IField> named = name2Field.get(name);\n\t\t\tif (named==null) { \n\t\t\t\tnamed =", "answers": ["\t\tfor(IField field : fields) { "], "all_classes": null, "length": 5645}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    like ``r'/foo/?'`` in conjunction with using the decorator."], "all_classes": null, "length": 17277}
{"pred": "\t\t\tbase.Render (writer);\n\t\t}\n\t}\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as a parameter. I want to get the value of that variable in the function. How can I do that", "answers": ["\t\t\tif ((Controls.Count == 0) && (initialIndex != -1)) "], "all_classes": null, "length": 2343}
{"pred": "   args = parser.parse_args()\n    wigle_downloader = WigleDownloader(args.user, args.password, args.coordfile, args.outpath)\n    wigle_downloader.run()\n Q: How to get the value of", "answers": ["    args = parser.parse_args()"], "all_classes": null, "length": 3605}
{"pred": "               if (mod >= 156 && mod <= 159)\n                {\n                    if (i.SkillBonuses.GetBonus(1) > 0)\n                    {\n                        foreach (SkillName sk in Imbuing.Possible", "answers": ["                if (mod >= 156 && mod <= 160)"], "all_classes": null, "length": 7335}
{"pred": "   if build == 'aurora':\n        builds = android_builds(build, platforms)\n    else:\n        builds = platforms\n    # Build the download links\n    download_link = make_download_link(\n        product=platforms[0]['os'],\n        build=", "answers": ["        for plat_os in ['Windows', 'Linux', 'Linux 64', 'OS X']:"], "all_classes": null, "length": 2437}
{"pred": "\t\tif (projectID==null && issueTypeID==null) {\n\t\t\tstateBeansList = StatusBL.loadAll();\n\t\t} else {\n\t\t\tstateBeansList = StatusBL.loadAllowedByProjectTypesAndIssueTypes(projectID,", "answers": ["\t\tif (projectID==null || issueTypeID==null) {"], "all_classes": null, "length": 3886}
{"pred": "           foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {\n                if (argumentSyntax.Parent is MemberAccessExpressionSyntax) {\n                    var memberAccessExpression = (MemberAccessExpressionSyntax)argumentSyntax.Parent;\n                    var member = memberAccessExpression.Name;\n                    var argument", "answers": ["            foreach (ArgumentSyntax argumentSyntax in argumentSyntaxs) {"], "all_classes": null, "length": 3021}
{"pred": "       split_test = self._update_partition_id(0)\n        # Verify that child verticals have been set to match the groups\n        self.assertEqual(2, len(split_test.children))\n        vertical_0 = self.get_item_from_modul", "answers": ["        split_test = self._update_partition_id(0)"], "all_classes": null, "length": 11033}
{"pred": "           if (cff) {\n                PdfIndirectReference fontDescriptor = new PdfIndirectReference(fontDescriptor);\n                PdfDictionary cidFontType2 = GetCIDFontType2(fontDescriptor, subsetPrefix, metrics);\n                PdfDictionary fontBaseType = GetFont", "answers": ["            foreach (object o in longTag.Values) {"], "all_classes": null, "length": 3745}
{"pred": "\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);\n\t\t\t\t\t\tcgn.depth++;\n\t\t\t\t\t\tif (cgn.depth > maxDepth) maxDepth = cgn.depth;\n\t\t\t\t\t\t", "answers": ["\t\t\t\t\t\tGraphNode cgn = graphNodes.get(cell);"], "all_classes": null, "length": 3790}
{"pred": "       task = new ListenableFutureTask<>(callable);\n        return task;\n      }\n    }\n    private Bitmap loadPage() throws IOException {\n      Util.assertMainThread();\n      if (model.getSprite() == null) {\n        return null;\n     ", "answers": ["        task = new ListenableFutureTask<>(callable);"], "all_classes": null, "length": 2264}
{"pred": "               else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {\n                    final String down = cmdHistory.goDown();\n                    if (!msgTF.getText().equals(down)) {\n                        msgTF.setText(down);\n                    }\n", "answers": ["                else if (ke.getKeyCode() == KeyEvent.VK_DOWN) {"], "all_classes": null, "length": 3037}
{"pred": "   prerequisite = NavigateToSibling('EditTags')\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\nI tried this:\n", "answers": ["    prerequisite = NavigateToSibling('Details')"], "all_classes": null, "length": 2002}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\tfor (IJRecognitionListener listener : recognitionListeners) {"], "all_classes": null, "length": 2296}
{"pred": "               base.Render(writer);\n            }\n        }\n    }\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that", "answers": ["                ScriptManager sm = ScriptManager.GetCurrent(Page);"], "all_classes": null, "length": 1839}
{"pred": "\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");\n\t\tdamage = compound.getInteger(\"Damage\");\n\t\t\n\t\tfire = compound.getInteger(\"Fire\");\n\t\tblast = compound.getInteger(\"", "answers": ["\t\tdamageCooldown = compound.getInteger(\"DamageCooldown\");"], "all_classes": null, "length": 2348}
{"pred": "       return \"Effect{\" +\n            \"probability=\" + probability +\n            \", scopes=\" + scopes +\n            '}';\n    }\n    /**\n     * {@inheritDoc}\n     */\n    @Override\n    public boolean equals(Object obj) {\n        if", "answers": ["        StringBuilder sb = new StringBuilder(32);"], "all_classes": null, "length": 1743}
{"pred": "   i = store.handle_indicators_create(t, {\n        'indicator': 'example.com',\n        'group': 'private',\n        'provider': 'example.com',\n        'tags': ['test'],\n        'itype': 'fqdn',", "answers": ["    i = store.handle_indicators_create(t, {"], "all_classes": null, "length": 2640}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        p = Person.objects.get(name=\"owner\")"], "all_classes": null, "length": 3702}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    interact(self._plot_line, x_name=widget_x, y_name=widget_y)"], "all_classes": null, "length": 5925}
{"pred": "               if (rootFolder.IsNullOrWhiteSpace())\n                {\n                    throw new ArgumentNullException(\"rootFolder\");\n                }\n                if (rootFolder.IsNullOrWhiteSpace())\n                {\n                    throw new ArgumentNullException(\"rootFolder\");\n                }\n                if", "answers": ["                if (!ShouldIgnoreChange(path, ignored))"], "all_classes": null, "length": 1938}
{"pred": "\t\treturn read(key, computed);\n\t}\n\t@Override\n\tpublic E compute(K key, BiFunction<? super K, ? super E, ? extends E> remappingFunction) {\n\t\tI computed = internalMap.compute(key, transform(remappingFunction));\n", "answers": ["\t\treturn read(key, computed);"], "all_classes": null, "length": 2178}
{"pred": "   if viewtype.lower() == 'listview':\n        objcommentslist = pdt.getDiscussionFor(uid).getReplies()\n        if len(objcommentslist) > 0:\n            for eachobj in objcommentslist:\n                reply = pdt.getDis", "answers": ["        cat = getToolByName(self.context, 'uid_catalog')"], "all_classes": null, "length": 6155}
{"pred": "\t\t\tset { m_ID = (ushort)value; }\n\t\t}\n\t\tpublic byte m_X;\n\t\tpublic byte m_Y;\n\t\tpublic byte m_Z;\n\t\tpublic byte m_Hue;\n\t\tpublic byte m_", "answers": ["\t\t\tset { m_ID = (ushort)value; }"], "all_classes": null, "length": 4809}
{"pred": "                   //m_log.DebugFormat(\"[FreeSwitchVoice][PARCELVOICE]: region \\\"{0}\\\": Parcel \\\"{1}\\\" ({2}): avatar \\\"{3}\\\": voice enabled for parcel\",\n                    //                      scene.RegionInfo.", "answers": ["                    channelUri = ChannelUri(scene, land);"], "all_classes": null, "length": 5417}
{"pred": "\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(IsNew){\n\t\t\t\tPayPeriods.Add(PayPeriodCur);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tPayPeriods.Update(PayPeriodCur);\n\t\t", "answers": ["\t\t\t\tMsgBox.Show(this,\"Please fix data entry errors first.\");"], "all_classes": null, "length": 3095}
{"pred": "   # Convert averaging/integrating period to timedeltas.\n    column_headings['Av or Int period'] = _calc_integration_period(\n        column_headings['Time Av or Int'])\n    # Skip the line after the column headings.\n    next(", "answers": ["        lat, lon = _build_lat_lon_for_NAME_timeseries(column_headings)"], "all_classes": null, "length": 7813}
{"pred": "   return authz.is_authorized('group_member_create', context, data_dict)\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\n", "answers": ["    group_id = data_dict['id']"], "all_classes": null, "length": 2343}
{"pred": "\t\t\t\tint outcome = example.getValue(predictionAttribute);\n\t\t\t\tint partitionId = outcomes[parentIndex];\n\t\t\t\t// assigning child node\n\t\t\t\texample.setValue(predictionAttribute, outcome);\n\t\t\t\texample.setValue", "answers": ["\t\t\t\tString label = example.getValueAsString(predictionAttribute);"], "all_classes": null, "length": 2067}
{"pred": "           return new[] { new SearchResults() { Action = Action.Search, ErrorCode = ErrorCode.InvalidOperation } };\n        }\n        /// <summary>\n        /// Performs a search for an array of segments.\n        /// </summary>\n        /// <param name=\"settings\">The", "answers": ["            var searchResultsArray = new SearchResults[segments.Length];"], "all_classes": null, "length": 2850}
{"pred": "           codePoint = ch - '\\uDC00';\n            if (codePoint < 0x10000) {\n               return _asciiSet[codePoint] ? offset : -1;\n            }\n         }\n         if (codePoint < 0x10", "answers": ["            char low = string.charAt(offset++);"], "all_classes": null, "length": 17640}
{"pred": "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t", "answers": ["        if (GenericValidator.isBlankOrNull(studyFormName)) {"], "all_classes": null, "length": 3482}
{"pred": "\t\t\t\t\tSendOrderTo(newConn, \"ServerError\", message);\n\t\t\t\t\tDropClient(newConn);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (handshake.Mod != ModData.Manifest", "answers": ["\t\t\t\t\tSendOrderTo(newConn, \"AuthenticationError\", message);"], "all_classes": null, "length": 3044}
{"pred": "\t\tif(beans != null)\n\t\t{\n\t\t\tfor(int i = 0; i < beans.length; i++)\n\t\t\t{\n\t\t\t\tcoll.add(((ims.core.vo.beans.CatsReferralPendingE", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 3668}
{"pred": "\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\nfunction get_value(var_name) {\n    // get", "answers": ["elif prnum == 'advanced':"], "all_classes": null, "length": 2558}
{"pred": "           int [] ret = new int[A.Dimensions.NumberOfDimensions]; \n            A.GetValueSeq(seqindex,ref ret); \n            return ret; \n        }\n        /// <summary>\n        /// convert sequential index into subscript indices\n        /// </", "answers": ["            int [] ret = new int[A.Dimensions.NumberOfDimensions]; "], "all_classes": null, "length": 3198}
{"pred": " plotName = pD[ 'plotName' ]\n  del( pD[ 'plotName' ] )\n  #Get plotname\n  if not 'plot' in pD:\n    return S_ERROR( \"Missing plot!\" )\n  plot = pD[ 'plot", "answers": ["  reportName = pD[ 'plotName' ]"], "all_classes": null, "length": 3275}
{"pred": "\t\t\tif (playerPower.HasEnoughPower(playerResources.GetPower(player)))\n\t\t\t{\n\t\t\t\tvar newProductionBuildings = new List<string>();\n\t\t\t\tforeach (var building in Info.BuildingQueues)\n\t\t\t", "answers": ["\t\t\tforeach (var rp in world.ActorsWithTrait<RallyPoint>())"], "all_classes": null, "length": 2754}
{"pred": "       m_currentPlan = plan;\n        return plan.getPlan();\n    }\n    public List<AbstractPlanNode> compile(String sql, int paramCount, String joinOrder, Object partitionParameter, boolean inferSP, boolean lockInSP, DeterminismMode detMode)\n   ", "answers": ["        List<PlanNodeList> nodeLists = new ArrayList<PlanNodeList>();"], "all_classes": null, "length": 2385}
{"pred": "\t\t\tthis.comboBox1.Size = new System.Drawing.Size(200, 21);\n\t\t\tthis.comboBox1.TabIndex = 0;\n\t\t\tthis.comboBox1.SelectedIndexChanged += new System.EventHandler(this.", "answers": ["\t\t\tthis.comboBox1.Size = new System.Drawing.Size(224, 21);"], "all_classes": null, "length": 3464}
{"pred": "\t\t\tdcb.BaudRate = baud_rate;\n\t\t\tdcb.Parity = (SerialParity)parity;\n\t\t\tdcb.DataBits = data_bits;\n\t\t\tdcb.StopBits = bits;\n\t\t", "answers": ["\t\t\tdcb.SetValues (baud_rate, parity, data_bits, bits, hs);"], "all_classes": null, "length": 3438}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        page = self.get_page(self.user.get_profile().get_url(),"], "all_classes": null, "length": 4222}
{"pred": "   args = parser.parse_args()\n    _keep_tempdir = args.keep_tempdir\n    if _keep_tempdir:\n        print \"Keeping tempdir\"\n    else:\n        print \"Removing tempdir\"\n    #print \"args is\", args\n", "answers": ["    options, args = parser.parse_known_args()"], "all_classes": null, "length": 2213}
{"pred": "\t\tif len(self.newAPList) > 0:\n\t\t\tif self.newAPList[0][0] == self.oldlist[ap][0]:\n\t\t\t\tif self.newAPList[0][1] == self.oldlist[ap][", "answers": ["\t\t\tcurrentListEntry = self[\"list\"].getCurrent()"], "all_classes": null, "length": 5106}
{"pred": "               return new Rectangle(x * (width - fontX), y * (height - fontY), fontX, fontY);\n            }\n        }\n        \n        /** Gets the maximum area that the barcode and the text, if\n        * any, will occupy. The lower", "answers": ["                int len = fCode.Length + 2;"], "all_classes": null, "length": 3383}
{"pred": "   return ArrayUtils.toPrimitive(results);\n  }\n  /**\n   * Loads a comma-separated list of strings from Properties.  Commas may be quoted if needed, e.g.:\n   *    property1 = value1,value2,\"a quoted value\",'", "answers": ["    if (results == null) {"], "all_classes": null, "length": 2028}
{"pred": "       y_points = np.arange(-90.0, +90.0, 10.0)\n        x_points, y_points = np.meshgrid(x_points, y_points)\n        sample_points = [\n            (\"longitude\",", "answers": ["        y_points = np.arange(-89.12, +90.0, 42.847)"], "all_classes": null, "length": 3644}
{"pred": "           if (currPacket == null)\n            {\n                return;\n            }\n            Clipboard.SetText(currPacket.ToText());\n        }\n        private void toolStripButtonConvertToBytes_Click(object sender, EventArgs e)\n        {\n            Log", "answers": ["            if (currPacket != null)"], "all_classes": null, "length": 1741}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    elif color == 'yellow':"], "all_classes": null, "length": 4852}
{"pred": "       }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            set { _numValues = value; }"], "all_classes": null, "length": 1713}
{"pred": "           this.treeView1.Nodes.AddRange(new System.Windows.Forms.TreeNode[] {\n            treeNode1,\n            treeNode28,\n            treeNode63});\n            this.treeView1.SelectedImageIndex = 0;\n            this.treeView", "answers": ["            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);"], "all_classes": null, "length": 6931}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        elif hasattr( original, 'originalFunction' ):"], "all_classes": null, "length": 2243}
{"pred": "           header.write(emptyStreams.toByteArray());\n            header.write(NID.kEnd);\n        }\n    }\n    private void writeFileEmptyFiles(final DataOutput header) throws IOException {\n        boolean hasEmptyFiles = false;\n        for (final SevenZ", "answers": ["            final DataOutputStream out = new DataOutputStream(baos);"], "all_classes": null, "length": 4894}
{"pred": "                   if (System.currentTimeMillis() - start > rampDelay)\n                        inRamp = !inRamp;\n                }\n                else\n                {\n                    if (System.currentTimeMillis() - start > rampDelay)\n                        inRamp", "answers": ["                    for (int i = 0; i < ticker.length; i++)"], "all_classes": null, "length": 2066}
{"pred": "           var item = Subject.GetItems().Single();\n            item.CanBeRemoved.Should().BeTrue();\n            item.CanMoveFiles.Should().BeTrue();\n\n\n            item.CanBeRemoved.Should().BeTrue();\n            item.CanMoveFiles.Should", "answers": ["            var item = Subject.GetItems().Single();"], "all_classes": null, "length": 4277}
{"pred": "               if (_diff > 0)\n                {\n                    await RecycleItems(session, cancellationToken, pinap, ItemId.ItemPinapBerry);\n                }\n                if (_diff > 0)\n                {\n                    await RecycleItems(session, can", "answers": ["                if (_diff > 0)"], "all_classes": null, "length": 3744}
{"pred": "   f.writelines(['F) ', str(c.LN), '\t\t# Sersic index for the', \\\n                      ' object\\n'])\n    f.writelines(['G) ', str(c.UMag), '\t\t# Object magnitude', \\\n                     ", "answers": ["                      'relative to data\\n'])"], "all_classes": null, "length": 7096}
{"pred": "                   i += ((b & 0x08) << 2);\n                    i += ((b & 0x04) << 5);\n                    i &= 0xFF;\n                    break;\n                case 0x08:\n                    /* D", "answers": ["                    i += ((b & 0x08) << 2);"], "all_classes": null, "length": 3713}
{"pred": "       return u\"{0}/{1}/{2}/{3}/{4}\".format(\n            self._course_dict['org'],\n            self._course_dict['number'],\n            self._course_dict['run'],\n            self._course_dict['display_name'],", "answers": ["        course_key = CourseKey.from_string(self._course_key)"], "all_classes": null, "length": 2290}
{"pred": "\t\tfor(String s : splitNumber) {\n\t\t\tif(s.equals(\"\")) continue;\n\t\t\tchance *= 10;\n\t\t\tchance += s.charAt(0) - '0';\n\t\t}\n\t\treturn (int", "answers": ["\t\tint min = -1;"], "all_classes": null, "length": 3030}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        types = ['cert', 'key']"], "all_classes": null, "length": 1954}
{"pred": "           this.lblPrivacy.AutoSize = true;\n            this.lblPrivacy.Location = new System.Drawing.Point(21, 9);\n            this.lblPrivacy.Name = \"lblPrivacy\";\n            this.lblPrivacy.Size", "answers": ["            this.lblPrivacy.Location = new System.Drawing.Point(6, 26);"], "all_classes": null, "length": 6488}
{"pred": "       self.archive.add_string(content=\"\\n\".join(self.policy.get_msg()),\n                                dest='version.txt')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for i in zip(self.loaded_plugins):"], "all_classes": null, "length": 11416}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    getRoomFullName.produce = lambda s: s.getRoom()"], "all_classes": null, "length": 2754}
{"pred": "                           parent.alertError(parent, \"Error importing message: \" + e.getMessage());\n                            return false;\n                        }\n                        return true;\n                    }\n                };\n                result = messageBrowser.importMessages(fileTextField.getText(), messageWriter);\n            }", "answers": ["                            throw new MessageWriterException(e);"], "all_classes": null, "length": 2115}
{"pred": "\t\t       \t\t\tlayer = ((Scriptable) value).intValue();\n\t\t       \t\t}\n\t\t    \t}\n    \t\t}\n    \t\treturn layer;\n    \t} catch (Exception e) {\n    \t\tthrow e;\n    \t}\n", "answers": ["\t\t       \t\t\tlayer = ScriptRuntime.toInt32(value);"], "all_classes": null, "length": 2210}
{"pred": "       if (currentSession != null && !currentSession.equals(Session.getActiveSession())) {\n            userInfoSession = currentSession;\n            user = userInfoSession.getUser();\n            if (user != null) {\n                userProfilePic = user.getProperty(GraphUser", "answers": ["        if (currentSession != null && currentSession.isOpened()) {"], "all_classes": null, "length": 2779}
{"pred": "\t\tfor (Emotion emotion : emotions) {\n\t\t\tsum += emotion.strength;\n\t\t}\n\t\tfor (Emotion emotion : emotions) {\n\t\t\temotion.strength = (int) (sum / emotions.length);", "answers": ["\t\tfor(Emotion emotion : emotions)"], "all_classes": null, "length": 2237}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    'property1': 2, 'property2': 3}"], "all_classes": null, "length": 5892}
{"pred": "   phi2Rad = (mu + (3*e1/2-27*e1*e1*e1/32)*sin(2*mu) \n               + (21*e1*e1/16-55*e1*e1*", "answers": ["    N1 = a/sqrt(1-eccSquared*sin(phi1Rad)*sin(phi1Rad))"], "all_classes": null, "length": 3650}
{"pred": "       form = ReportUserForm(request.POST)\n        if form.is_valid():\n            form.save()\n            messages.success(request, \"Reported user successfully!\")\n            return HttpResponseRedirect(reverse('profile'))\n    else:\n        form = ReportUserForm()", "answers": ["        form = ReportUserForm(request.POST)"], "all_classes": null, "length": 2643}
{"pred": "   @property\n    def page_title(self):\n        \"\"\"The HTML page title.\"\"\"\n        return \"Add series\"\n    @action(\"Add\", name='add')\n    def add_action(self, action, data):\n        self.updateContextFromData(data)\n", "answers": ["    field_names = ['name', 'summary', 'branch', 'releasefileglob']"], "all_classes": null, "length": 14702}
{"pred": "\t\t\t\tform.RightToLeft = RightToLeft.No;\n\t\t\t\tform.RightToLeftLayout = false;\n\t\t\t}\n\t\t}\n#endif\n\t\tpublic void ApplyTo(Form form, bool bForce)\n\t\t{\n", "answers": ["\t\t\t\ttry { RtlApplyToControls(form.Controls); }"], "all_classes": null, "length": 1838}
{"pred": "               temp >>= 8;\n            }\n        }\n        return arr;\n    }\n    /**\n     * @param arr\n     * @param offset\n     * @throws NullPointerException\n     * @throws IndexOutOfBoundsException\n     */\n    public void write", "answers": ["                temp >>= 8;"], "all_classes": null, "length": 1952}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                if flag == 'exclude_tags':"], "all_classes": null, "length": 3511}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                return new object[0];"], "all_classes": null, "length": 1286}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        0x06: 'EOBD (Europe) ',"], "all_classes": null, "length": 2883}
{"pred": "\t\tbus.add_signal_receiver(on_name_owner_changed,\n\t\t                        'NameOwnerChanged',\n\t\t                        'org.freedesktop.DBus')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\tloop = gobject.MainLoop()"], "all_classes": null, "length": 6739}
{"pred": "               this.AddRes(index, typeof(BlackPearl), 1044353, 1, 1044253);\n                this.AddRes(index, typeof(PrismItem), 1073466, 1, ", "answers": ["                this.AddRes(index, typeof(BlackPearl), 1044353, 1, 1044253);"], "all_classes": null, "length": 6398}
{"pred": "   def pop(self, exc=None):\n        \"\"\"Pops the request context and unbinds it by doing that.  This will\n        also trigger the execution of functions registered by the\n        :meth:`~flask.Flask.teardown_request` decorator.\n", "answers": ["        app_ctx = self._implicit_app_ctx_stack.pop()"], "all_classes": null, "length": 3178}
{"pred": "   return _pubsub_consumer(session, cluster_id, query_wrapper)\n# ################################################################################################################################\ndef _pubsub_subscription(session, cluster_id, needs_columns=False):\n    return session.query(\n        PubSub", "answers": ["    response = _pubsub_consumer(session, cluster_id, query_wrapper)"], "all_classes": null, "length": 12780}
{"pred": "           if (resourceEntityForRelease != null) {\n                result.add(resourceEntityForRelease);\n            }\n        }\n        return result;\n    }\n    public Set<ResourceEntity> getProvidedRelatedResourcesByResourceType(ResourceEntity resource, DefaultResourceTypeDefinition default", "answers": ["            if (resourceEntityForRelease != null) {"], "all_classes": null, "length": 3387}
{"pred": "   # Compute angles\n    phi = np.arctan(dx / (src_radius + det_radius))\n    theta = phi * 2\n    # Compute lower and upper bound\n    source_to_line_distance = src_radius + src_radius * np", "answers": ["        dx = ray_trafo.range.meshgrid[1]"], "all_classes": null, "length": 2886}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            logger.log(u\"Proxified REGEX: \" + regx, logger.DEBUG)"], "all_classes": null, "length": 5041}
{"pred": "\t\t\treturn type.ToString (fmt) + \" \" + unit.ToString (fmt);\n\t\t}\n\t\tpublic override string ToString ()\n\t\t{\n\t\t\treturn ToString (Thread.CurrentThread.CurrentCulture);\n\t\t}\n\t\t\n\t\tpublic", "answers": ["\t\t\tif (type == FontSize.NotSet)"], "all_classes": null, "length": 2149}
{"pred": "\t\t\t\t\t|| (block2.Length > GetInputBlockSize()))\n\t\t\t\t{\n\t\t\t\t\tthrow new InvalidCipherTextException(\n\t\t\t\t\t\t\t\"BlockLength too large for simple addition.\\n\");\n\t\t\t\t}\n", "answers": ["\t\t\t\t\t\t|| (block2.Length > GetInputBlockSize()))"], "all_classes": null, "length": 3274}
{"pred": "\t\t\tvar outer = (JObject)obj.Properties[0].Value;\n\t\t\tAssert.That(outer.Properties[0].Key, Is.EqualTo(\"The outermost value\"));\n\t\t\tAssert.That(outer.Properties[0].Value.Type, Is.", "answers": ["\t\t\tobj = (JObject)obj.Properties[0].Value;"], "all_classes": null, "length": 3553}
{"pred": "               for (int w = 0; w < width; w++) {\n                    edges.add(T2.create(getVertexTopic(w, h, getTopicMap(), getOptionsValues()), getVertexTopic(w + width, h, getTopicMap(), getOptions", "answers": ["                for (int w = 0; w < width; w++) {"], "all_classes": null, "length": 3758}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    i1 = iso.get_default()"], "all_classes": null, "length": 4789}
{"pred": "       final File f1 = new File(args[0]);\n        final File f2 = new File(args[1]);\n        final AbstractTripleStore db1 = new LocalTripleStore(f1);\n        final AbstractTripleStore db2 = new LocalTripleStore(f2", "answers": ["        if (args.length < 2 || args.length > 3) {"], "all_classes": null, "length": 3666}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    {u'Timestamp': datetime.datetime(2015, 12, 31, 21, 29, 47,"], "all_classes": null, "length": 3406}
{"pred": "\t\t\treturn performInstallation();\n\t\t}\n\t\treturn false;\n\t}\n\t/**\n\t * This should download and install Yarta.\n\t * \n\t * When the function returns true Yarta will be installed.\n\t * \n\t * @return true/", "answers": ["\t\t\tString downloadedJarFile = performDownload();"], "all_classes": null, "length": 1706}
{"pred": "\t\t\tSDL.SDL_GL_DeleteContext(context);\n\t\t\tOpenGL.Dispose();\n\t\t\tOpenGL.CheckGLError();\n\t\t\tSDL.SDL_DestroyWindow(window.Window);\n\t\t\tSDL.SD", "answers": ["\t\t\tif (context != IntPtr.Zero)"], "all_classes": null, "length": 2579}
{"pred": "(projected onto the *y* axis).\n        :rtype: numpy.ndarray or None\n        \"\"\"\n        return self._project_cov_mat(\n            self.x_data_cov_mat_inverse, self.y_data_cov_mat_inverse,", "answers": ["        projected onto the *y* axis. :py:obj:`None` if singular."], "all_classes": null, "length": 4193}
{"pred": "       return new CmsLink(m_structureId, m_target, m_query, m_anchor, m_type, m_internal);\n    }\n    /**\n     * @see java.lang.Object#toString()\n     */\n    @Override\n    public String toString", "answers": ["        if (this == EMPTY) {"], "all_classes": null, "length": 1662}
{"pred": "               } else {\n                  accountIdAccountMap.put(walrusObject.getOwnerId(), owningAccount);\n                }\n              } catch (AuthException e) { // In case the account is deleted, transfer the ownership to eucalyptus admin\n                LOG.warn(\"Account", "answers": ["                  adminUser = getEucalyptusAdmin();"], "all_classes": null, "length": 12381}
{"pred": "           add { _selectedFolderChanged += value; }\n            remove { _selectedFolderChanged -= value; }\n        }\n        public event EventHandler Initialized\n        {\n            add { _intialized += value; }\n            remove { _intialized -= value; }\n        }", "answers": ["            add { _selectedFolderChanged += value; }"], "all_classes": null, "length": 2008}
{"pred": "       ImportVmTemplateCommand command = new ImportVmTemplateCommand(createParameters());\n        command.setIsImportAsNewEntity(isImportAsNewEntity);\n        command.setParameters(createParameters());\n        CanDoActionTestUtils.runAndAssertCanDoActionSuccess(command,\n", "answers": ["        ImportVmTemplateParameters parameters = createParameters();"], "all_classes": null, "length": 3572}
{"pred": "\t\t\tw10.XOptions = ((global::Gtk.AttachOptions)(4));\n\t\t\tw10.YOptions = ((global::Gtk.AttachOptions)(4));\n\t\t\t// Container child table1.Gtk.Table+TableChild\n\t", "answers": ["\t\t\tw10.TopAttach = ((uint)(1));"], "all_classes": null, "length": 3489}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            environ['%sCATEGORY' % POSTPROC_ENVIRO_ID] = \\"], "all_classes": null, "length": 4776}
{"pred": "\t\t\treturn new ConstructorBuilder(mb);\n\t\t}\n\t\tpublic MethodBuilder DefineMethod(string name, MethodAttributes attribs, CallingConventions callConv, Type[] parameterTypes, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers)\n", "answers": ["\t\t\treturn new ConstructorBuilder(mb);"], "all_classes": null, "length": 2988}
{"pred": "     return (Builder) new Builder().MergeFrom(prototype);\n    }\n    \n    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]\n    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom", "answers": ["      return (Builder) new Builder().MergeFrom(prototype);"], "all_classes": null, "length": 8141}
{"pred": "               vertices[x] = getVertex(i, x);\n            }\n        }\n    }\n    /**\n     * Stores in the <code>vertices</code> array the vertex values of quad\n     * <code>i</code>. If <code>i</code>", "answers": ["                    vertices[x] = new Vector3f();"], "all_classes": null, "length": 2493}
{"pred": "       result.addAll(CmsStringUtil.splitAsList(showDateData, ';'));\n        return result;\n    }\n    /**\n     * Returns the page type to show.<p>\n     * \n     * @return the page type to show\n     */\n    public", "answers": ["        if (CmsStringUtil.isNotEmptyOrWhitespaceOnly(showDateData)) {"], "all_classes": null, "length": 5129}
{"pred": "\t\t\twhile (true)\n\t\t\t{\n\t\t\t\tyield return new WaitForSeconds (0.1f);\n\t\t\t\tif (inputField.text.Length == 0)\n\t\t\t\t{\n\t\t\t\t\ttextRect.sizeDelta", "answers": ["\t\t\tyield return new WaitForEndOfFrame();"], "all_classes": null, "length": 2466}
{"pred": "       base.OnSizeChanged(e);\n      }\n      else\n      {\n        base.OnSizeChanged(e);\n      }\n    }\n    //--------------------------------------------------------------------------------\n    protected override void OnClick(EventArgs e)\n    {\n      base.OnClick(e", "answers": ["        int h = GetBestHeight();"], "all_classes": null, "length": 2298}
{"pred": "                   lastUser = r[\"CreatedBy\"].ToString();\n                }\n                else\n                {\n                    continue;\n                }\n                if (!Users.Contains(lastUser))\n                {\n                    Users.Add(lastUser);\n                }\n            }\n            foreach (string", "answers": ["                    lastUser = r[\"CreatedBy\"].ToString();"], "all_classes": null, "length": 2772}
{"pred": "\t\t\t\tdirections |= ScrollDirection.Right;\n\t\t\tif (Viewport.LastMousePos.Y >= Game.Renderer.Resolution.Height - EdgeScrollThreshold)\n\t\t\t\tdirections |= ScrollDirection.Down;\n\t\t\treturn directions;\n", "answers": ["\t\t\t\tdirections |= ScrollDirection.Right;"], "all_classes": null, "length": 2308}
{"pred": "           if (CriteriaCodesUsed.Count > 1)\n            {\n                VerificationResult = new TScreenVerificationResult(new TVerificationResult(this, ErrorCodes.GetErrorInfo(\n                    PetraErrorCodes.ERR_DISCOUNT_CANNOT", "answers": ["            string[] CriteriaCodesUsedArray = CriteriaCodesUsed.ToArray();"], "all_classes": null, "length": 6154}
{"pred": "               stream.Read (buffer, 0, buffer.Length);\n                args.Add (filename, buffer);\n            }\n        }\n    }\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I", "answers": ["                stream.Read (buffer, 0, buffer.Length);"], "all_classes": null, "length": 1747}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        return not any(self._reqs.values())"], "all_classes": null, "length": 2061}
{"pred": "\t\t\tget { return Enabled && CopyCustom; }\n\t\t}\n\t\tpublic bool CopyCustomEnabled\n\t\t{\n\t\t\tget { return Enabled && CopyCustom; }\n\t\t}\n\t\tpublic bool CustomRange\n\t\t{\n\t\t\tget {", "answers": ["\t\t\tget { return Enabled && _numberOfImages > 2; }"], "all_classes": null, "length": 4810}
{"pred": "\t\t\tget {\n\t\t\t\treturn dataDir;\n\t\t\t}\n\t\t}\n\t\tpublic string CacheDirectory {\nNext line of code:\n\t\t\tget {\n\t\t\t\treturn cacheDir;\n\t\t\t}\n\t\t}\n\t\t", "answers": ["\t\t\tget { return dataDir; }"], "all_classes": null, "length": 2173}
{"pred": "           if (bugAnnotation instanceof SourceLineAnnotation) {\n                SourceLineAnnotation sourceLineAnnotation = (SourceLineAnnotation) bugAnnotation;\n                if (sourceLineAnnotation.getLineNumber() < 0) {\n                    throw new BugInstanceException(\"Line number of \" + bugInstance + \" is", "answers": ["            if (bugAnnotation instanceof PackageMemberAnnotation) {"], "all_classes": null, "length": 1968}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t[TypeAlias( \"Server.Items.Pizza\" )]"], "all_classes": null, "length": 5691}
{"pred": "                       if (eFarm.MinionsHit >= 2)\n                        {\n                            E.Cast(eFarm.Position);\n                        }\n                    }\n                }\n            }\n        }\n        private void JungleClear()\n        {\n            if", "answers": ["                        if (eFarm.MinionsHit >= Menu.GetSlider(\"LaneClearECount\"))"], "all_classes": null, "length": 4677}
{"pred": "\t\treturn get(x, y, width, height, 0.0, 0.0, DEFAULT_FILL, anchor);\n\t}\n\t/**\n\t * Returns a GridBagConstraint\n\t * @param x\n\t * @param y\n\t * @param width\n\t", "answers": ["\t\treturn get(x, y, width, height, 0.0, 0.0, DEFAULT_FILL, anchor);"], "all_classes": null, "length": 1785}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        filexml = self._retr_file(filename)"], "all_classes": null, "length": 2623}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        value = {'a': 'Awesome title', 'b': 'sub title', 'k': 'form'}"], "all_classes": null, "length": 2570}
{"pred": "                   new object[] {\"E1\", 10L});\n                env.UndeployAll();\n                // widen to short\n                stmtTextCreate = namedWindow\n                    ? \"create window MyInfraW#keepall as (f1 long, f2 short)\"\n", "answers": ["                    new[] {new object[] {10L, \"E1\"}});"], "all_classes": null, "length": 8087}
{"pred": "\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\nI tried this:\nfunction get_value(var_name)\n{\n    return var", "answers": ["        c = self.copy()"], "all_classes": null, "length": 7100}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        view = self.browse(cr, SUPERUSER_ID, res_id, context=context)"], "all_classes": null, "length": 2379}
{"pred": "           value = createHTMLView(c, text);\n        }\n        else {\n            if (oldValue != null) {\n                oldValue.dispose();\n            }\n            c.removeClientProperty(BasicHTML.propertyKey);\n        }\n        if (value != null)", "answers": ["            value = BasicHTML.createHTMLView(c, text);"], "all_classes": null, "length": 2177}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    s = create(filename, content)"], "all_classes": null, "length": 2973}
{"pred": "\t\t\t\tmapping.sqlloader = new HbmSqlLoader();\n\t\t\t}\n\t\t\tmapping.sqlloader.namedquery = namedQueryReference;\n\t\t}\n\t\tpublic void Loader(string namedQueryReference, string namedQueryParameter)\n\t\t{\n\t", "answers": ["\t\t\t\tmapping.loader = new HbmLoader();"], "all_classes": null, "length": 2336}
{"pred": "\t\t\twriter.WriteEncodedInt( (int) m_Members.Count );\n\t\t\tfor ( int i = 0; i < m_Members.Count; ++i )\n\t\t\t{\n\t\t\t\tm_Members[i].Serialize(", "answers": ["\t\t\twriter.WriteEncodedInt( (int) m_Members.Count );"], "all_classes": null, "length": 2464}
{"pred": "       invocationQueue.removeFirst();\n    }\n    private void pushInvocation(MethodInvocation methodInvocation) {\n        invocationQueue.addFirst(methodInvocation);\n    }\n    private boolean contains(Graph graph) {\n        return graphQueue.contains(graph);\n    }\n   ", "answers": ["        assert graphQueue.size() <= maxGraphs;"], "all_classes": null, "length": 7167}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                self.args['pytest'] = \"py.test {}\".format(pytest)"], "all_classes": null, "length": 4339}
{"pred": "               if (value == null) {\n                    continue;\n                }\n                if (value instanceof ValuePhiNode) {\n                    ValuePhiNode phi = (ValuePhiNode) value;\n                    if (phi.stamp().isConstant() && phi.stamp().", "answers": ["                if (phi) {"], "all_classes": null, "length": 2730}
{"pred": "       if (mCallback != null) {\n            try {\n                mCallback.handleCallSessionEvent(event);\n            } catch (RemoteException ignored) {\n            }\n        }\n    }\n    /** @see Connection.VideoProvider#onSetCamera */\n    public void onSet", "answers": ["        if (mCallback != null) {"], "all_classes": null, "length": 2156}
{"pred": "\t\t\t\tfrom.SendLocalizedMessage(1156691); // This map is not for sale.\n\t\t\t}\n\t\t}\n\t\t\n\t\tpublic override void Serialize(GenericWriter writer)\n\t\t{\n\t\t\tbase.Serialize", "answers": ["\t\t\t\tGump g = new Gump(0, 0);"], "all_classes": null, "length": 3189}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["] + models)"], "all_classes": null, "length": 2130}
{"pred": "   def remove_user(self, username, domain):\n        user = '%s@%s' % (username, domain)\n        log.debug('Remove user: %s', user)\n        data = self.module.get(user)\n        if data is None:\n            raise", "answers": ["        user = '%s@%s' % (username, domain)"], "all_classes": null, "length": 2217}
{"pred": "         - *fpath*: string, full or relative path to the file.\n        \"\"\"\n        _BaseFile.save(self, fpath, 'to_binary')\n    def percent_translated(self):\n        \"\"\"\n        Convenience method that return the percentage of translated", "answers": ["          - *fpath*: string, full or relative path to the file."], "all_classes": null, "length": 6779}
{"pred": "   if not res['OK']:\n      gLogger.error( \"Failed to determine waiting problematics for transformation\", res['Message'] )\n      return res\n    else:\n      if len( res['Value'] ) == 0:\n        res = self.transClient.setTrans", "answers": ["    if not res['OK']:"], "all_classes": null, "length": 2450}
{"pred": "\t\t\tif(uri.getPath().startsWith(PLUGINS_PREFIX))\n\t\t\t\treturn uri.getPath().substring(PLUGINS_PREFIX.length());\n\t\t\telse\n\t\t\t\treturn uri.getPath();\n\t\t}", "answers": ["\t\t\tString path = uri.getPath();"], "all_classes": null, "length": 5620}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        gsp = yield self.setupGerritStatusPush(reviewCB=sampleReviewCB,"], "all_classes": null, "length": 3913}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    self.category = atom.Category()"], "all_classes": null, "length": 3144}
{"pred": "           Map<String, AnnotationMirror> r2) {\n            Map<String, AnnotationMirror> r = new HashMap<String, AnnotationMirror>();\n            r.putAll(r1);\n            r.putAll(r2);\n            return r", "answers": ["                Map<String, AnnotationMirror> r2) {"], "all_classes": null, "length": 7353}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        col = split.column()"], "all_classes": null, "length": 8535}
{"pred": "           if (_engine.Memory.Map.Cartridge.MapperNo == 16)\n            {\n                var map16 = (Mapper16) _engine.Memory.Map.CurrentMapper;\n                mapper16_timer_irq_Latch_16 = map1", "answers": ["            if (_engine.Memory.Map.Cartridge.MapperNo == 16)"], "all_classes": null, "length": 6419}
{"pred": "           JMenuItem jMenuItem = new JMenuItem(sTDocUrl);\n            jMenuItem.addActionListener(oActionListener);\n            _jMnuRoot.add(jMenuItem);\n        }\n        private JMenuItem getInspectMenuItem(String _sTitle){\n            JMenuItem j", "answers": ["            String[] sTDocUrls = m_oInspector.getTDocUrls();"], "all_classes": null, "length": 2162}
{"pred": "\t\tAdd(\"Party Quest\", 70026); // Party Quest Scroll [10 Blue Bears]\nNext line of code:\n\t\tAdd(\"Party Quest\", 70027); // Party Quest Scroll [10 Green Bears]\n", "answers": ["\t\tAdd(\"Party Quest\", 70025); // Party Quest Scroll [30 Red Bears]"], "all_classes": null, "length": 3703}
{"pred": "\t\t\treturn Frame.H;\n\t\t}\n\t\tpublic int SizeWidthToFit ()\n\t\t{\n\t\t\treturn SizeWidthToFitWithMin (0);\n\t\t}\n\t\tpublic int SizeWidthToFitWithMin (int min)\n\t", "answers": ["\t\t\tMeasure (0, 0);"], "all_classes": null, "length": 2779}
{"pred": "\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\nfunction get_value(var_name) {\n    return var", "answers": ["        return '%s -> %s' % (self.announcement, self.tweet_id)"], "all_classes": null, "length": 3061}
{"pred": "# lexers.append('php', PhpLexer())\n# Enable highlighting for PHP code not between <?php ... ?>\n# lexers.append('php', PhpLexer(mimetype='text/x-php'))\n# Enable highlighting for PHP code not", "answers": ["lexers['php'] = PhpLexer(startinline=True)"], "all_classes": null, "length": 3905}
{"pred": "                ORDER BY sdate, stime ''', (i,))\n    row_count = len(cursor.fetchall())\n    print \"nos rows is: \", row_count \n    cursor.execute('''SELECT sdate, stime, edate, etime, duration, src_", "answers": ["                 ORDER BY sdate, stime ''', (i,))"], "all_classes": null, "length": 3516}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        last_snapshot = timestamp_to_rethinkdb(timestamp)"], "all_classes": null, "length": 3490}
{"pred": "\t\t\t\tMsg(\"I'm not sure what you mean by that.<br/>I'm not a bad guy, am I?<br/>I'm just a shepherd.<br/>I'm not a bad guy, am I?<br/>I'm just", "answers": ["\t\t\t\tMsg(\"Welcome to the real world...\");"], "all_classes": null, "length": 5210}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\tname\t- aname/ename/gname"], "all_classes": null, "length": 6568}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.start = time.time()"], "all_classes": null, "length": 2600}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(uri));"], "all_classes": null, "length": 2341}
{"pred": "   if (len(primary.keys()) > 0):\n        print(\"primary.xml contains additional packages:\")\n        for key in primary.keys():\n            pkg = primary.items[key]\n            print(\"\\t\" + build_nevra(pkg.name, pkg", "answers": ["    if (len(primary.keys()) > 0):"], "all_classes": null, "length": 3452}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            build_ext = self.get_finalized_command('build_ext')"], "all_classes": null, "length": 2238}
{"pred": "\t\t\t\tfor (int j = 0; j < lazyPropertyNames.Length; j++)\n\t\t\t\t{\n\t\t\t\t\tobject propValue = lazyPropertyTypes[j].NullSafeGet(disassembledValues, lazyPropertyColumnAliases[j],", "answers": ["\t\t\tfor (int j = 0; j < lazyPropertyNames.Length; j++)"], "all_classes": null, "length": 13127}
{"pred": "       '-o', 'logfile=' + log_name,\n        '-o', 'logfile_maxsize=1000000000',\n        '-o', 'logfile_maxlines=1000000000',\n        '-o',", "answers": ["        '-l', 'h_vmem=%dM' % request['job_max_vmem'],"], "all_classes": null, "length": 3898}
{"pred": "           ViewBag.ModelId = new int?(id);\n            return View(\"Form\", new DelegateViewModel());\n        }\n        // Add a relationship (EventDelegate) between Event (parent) Delegate (child)\n        [HttpPost]\n        //[RolesRequired(\"Admin\",\"Save", "answers": ["            return View(\"Form\", new DelegateViewModel());"], "all_classes": null, "length": 3477}
{"pred": "                       var circle = (Circle) obj;\n                        return string.Format(\"({0},{1},{2},{3})\", circle.X, circle.Y, circle.Width, circle.Height);\n                    }\n                    if (obj is Vector2)\n                    {\n", "answers": ["                        var circle = (Circle) obj;"], "all_classes": null, "length": 2651}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                elif res['error_code'] in [\"606\", \"607\", \"608\"]:"], "all_classes": null, "length": 2344}
{"pred": "\t\t\tif (path.Count > 0)\n\t\t\t{\n\t\t\t\tvar closest = path[0];\n\t\t\t\tif (closest.HasValue)\n\t\t\t\t\treturn closest;\n\t\t\t}\n\t\t\treturn null;\n", "answers": ["\t\t\tif (path.Count > 0)"], "all_classes": null, "length": 2596}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                       self.logger.error(\"%s failed\" % service_name)"], "all_classes": null, "length": 2964}
{"pred": "       return Event.newBuilder();\n    }\n    @Override\n    public void sendEvent(Event e) {\n        seqNo.set(seqNo.get() + 1);\n        Event.Builder eventb = newEvent().setSeverity(e.getSeverity()).", "answers": ["        long t = getMissionTime();"], "all_classes": null, "length": 1721}
{"pred": "           while (true)\n            {\n                if (context.NumberStatistics != 0)\n                {\n                    if (context.NumberStatistics == 1)\n                    {\n                        goto Loop;\n                    }\n                    if (context.NumberStatistics ==", "answers": ["            if (state != PpmState.ZERO)"], "all_classes": null, "length": 6745}
{"pred": "               return new DicomAttributeSL(tag, bb);\n            });\n        /// <summary>\n        /// The Signed Short VR.\n        /// </summary>\n        public static readonly DicomVr SSvr = new DicomVr(\"SS\", false, false, true,", "answers": ["                return new DicomAttributeSL(tag, bb);"], "all_classes": null, "length": 3119}
{"pred": "\t\t\tsessionValuesArray.Add(tFull[3]);\n\t\t}\n\t\tstring [] sessionValues = new String[sessionValuesArray.Count];\n\t\tsessionValues = sessionValuesArray.ToArray(sessionValues);\n\t\t\n\t\tstring [] tests = findTestTypes", "answers": ["\t\t\tint sessionID = Convert.ToInt32(tFull[3]);"], "all_classes": null, "length": 7477}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        o = self.file(b'abcdefghij')"], "all_classes": null, "length": 4721}
{"pred": " <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>\n    <td><?cs var:sdk.win64_bundle_checksum ?></td>\n  </tr>\n  <tr>\n    <td>Mac OS X (", "answers": ["    <td><?cs var:sdk.win64_bundle_bytes ?> bytes</td>"], "all_classes": null, "length": 2064}
{"pred": "   plt.plot(cr['combined'][app][VC]['durations'],\n             cr['combined'][app][VC]['stats'][stat],\n             label='%s, %s, individual %ss' %\n             (app, test, stat))\n    plt.", "answers": ["    ymin = csi_95[0]"], "all_classes": null, "length": 2290}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self._testUIDGIDSwitch(1, 0, 2, 1, [0, 2, 0, 1], [1, 0])"], "all_classes": null, "length": 8201}
{"pred": "\t\t\t\t\tg.setColor(MetalLookAndFeel.getControlShadow());\n\t\t\t\t\tg.fillRect(x, y, controlSize - 1, controlSize - 1);\n\t\t\t\t}\n\t\t\t\telse if(b", "answers": ["\t\t\t\t\tdrawPressed3DBorder(g, x, y, controlSize, controlSize);"], "all_classes": null, "length": 2150}
{"pred": " winner, _inferenceResult, _dist, _categoryDist = knn.infer(v[1])\n  if winner != 1:\n    failures += \"Inference failed with k=3\\n\"\nNext line of code:\n  winner, _inferenceResult,", "answers": ["  winner, _inferenceResult, _dist, _categoryDist = knn.infer(v[2])"], "all_classes": null, "length": 2364}
{"pred": "       final int index = (offset - headerSize()) / kind.width.numberOfBytes;\n        mirror.writeElement(kind, index, value);\n    }\n    @HOSTED_ONLY\n    public void writeHeaderValue(ObjectMirror mirror, int offset, Value value)", "answers": ["        final int index = (offset - headerSize()) / elementSize();"], "all_classes": null, "length": 2076}
{"pred": "           if (relativePath == null || relativePath.Length == 0) {\n                return null;\n            }\n            // if the relative path is a directory, then we need to resolve it\n            // as a folder\n            if (Directory.Exists(relativePath)) {\n                return Resol", "answers": ["            if (!String.IsNullOrEmpty(relativePath)) {"], "all_classes": null, "length": 2491}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    return string.format(*args, **kwargs)"], "all_classes": null, "length": 2461}
{"pred": "       n = m + i16 - 2;\n        i27 = i26 + i16 - 1;\n        i29 = i28 + i16 - 1;\n        i25 = 1;\n        if ((paramInt1 != ", "answers": ["        if ((i != i7 ? 0 : 1) != 0) {"], "all_classes": null, "length": 4230}
{"pred": "\t\t\t\tstr += \"  \" + s.name + \"\\n\";\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\t\n\t\tpublic State GetStateByName( string name ) {\n\t\t\tfor( int i=0 ;i < states", "answers": ["\t\t\t\tstr += s.ToString() + \"\\n\";"], "all_classes": null, "length": 3670}
{"pred": "               });\n            #endregion Lucian\n            #region Lux\n            Spells.Add(\n                new SpellData\n                {\n                    ChampionName = \"Lux\",\n                    SpellName = \"LuxQ\",\n                    Slot = SpellSlot.Q", "answers": ["                    ExtraMissileNames = new[] { \"lucianrmissile\" },"], "all_classes": null, "length": 20712}
{"pred": "\t\twhen(securityContext.getCurrentUser()).thenReturn(new EmfUser(\"test.user\", \"test.password\"));\n\t}\n\tprotected void mockCodeListService() {\n\t\twhen(codeListService.getCodeList(anyString())).thenReturn(codeListPers", "answers": ["\t\tEmfUser user = new EmfUser(\"admin@test.tenant\");"], "all_classes": null, "length": 2484}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        context = testlib.TestContext()"], "all_classes": null, "length": 2691}
{"pred": "\t\t\tif (propertiesName == null)\n\t\t\t\tthrow new ArgumentNullException(\"propertiesName\");\n\t\t\tif (configDirectory == null)\n\t\t\t\tthrow new ArgumentNullException(\"configDirectory\");\n\t\t\tif (dataDirectory == null)\n\t\t\t", "answers": ["\t\t\tif (configDirectory == null)"], "all_classes": null, "length": 2249}
{"pred": "\t\tinternal abstract void AddToConstraintCollection (ConstraintCollection collection);\n\t\tinternal abstract void RemoveFromConstraintCollection (ConstraintCollection collection);\n\t\tinternal abstract void AddToConstraintCollection (ConstraintCollection collection, DataRow row);\n\t\tinternal abstract void RemoveFromConstraintCollection (ConstraintCollection collection, Data", "answers": ["\t\tinternal abstract bool IsColumnContained (DataColumn column);"], "all_classes": null, "length": 1877}
{"pred": "       self.verticalLayout_2.addWidget(self.horizontalLayout)\n        self.verticalLayout_2.addWidget(self.verticalLayout_2)\n        self.verticalLayout_2.addWidget(self.verticalLayout_2)\n        self.verticalLayout_2.add", "answers": ["        self.button_box = QtWidgets.QDialogButtonBox(Dialog)"], "all_classes": null, "length": 4790}
{"pred": "               TextView status = (TextView) findViewById( R.id.wx_status );\n                status.setText( R.string.no_taf_available );\n                return false;\n\n\n            }\n            Cursor awos = result[ 1 ];\n            if ( awos == null", "answers": ["                TextView tv =(TextView) findViewById( R.id.status_msg );"], "all_classes": null, "length": 3010}
{"pred": "\t\t\t\tstring continents = \"from Continent\";\n\t\t\t\tint results = s.CreateQuery(continents).List().Count;\n\t\t\t\tQueryStatistics continentStats = stats.GetQueryStatistics(continents);\n\t\t\t\tAssert.Is", "answers": ["\t\t\t\tvar r = s.CreateCriteria<Country>().List();"], "all_classes": null, "length": 2631}
{"pred": "               uiByteValue |= p[iBufferIndex];\n                uiCRCITTSum = (uiCRCITTSum >> 8) ^ (uint)(((ulong)uiByteValue) ^ (ulong)((ulong)uiByteValue >> 8));\n            }", "answers": ["                for (int iBitIndex = 0; iBitIndex < 8; iBitIndex++)"], "all_classes": null, "length": 3086}
{"pred": "\t\treturn 1;\n\t}\n\tpublic void setShootingSpeed(int speed) {\n\t\tentityData.set(MODE, speed);\n\t}\n\tpublic void setShootingSpeed(float speed) {\n\t\tentityData.set(MODE, (int", "answers": ["\t\treturn hasSpeedModule() ? 5 : 10;"], "all_classes": null, "length": 6991}
{"pred": "           return new IHyperlinkDetector[] { \n                    new JavaHyperlinkDetector(), \n                    new ReferencesHyperlinkDetector(), \n                    new JavaHyperlinkDetector(), \n                    new JavaHyperlinkDetector(), \n                    new", "answers": ["            return new IHyperlinkDetector[0];"], "all_classes": null, "length": 3327}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.aspectWidget = Object3DAspect(self)"], "all_classes": null, "length": 4977}
{"pred": "\t\t\t\t\t\tm_Mobile.SendGump( new PropertiesGump( m_Mobile, m_Object, m_Stack, m_List, m_Page ) );\n\t\t\t\t\t}\n\t\t\t\tcase 3: // Set location\n\t\t\t\t", "answers": ["\t\t\t\tcase 3: // Use values"], "all_classes": null, "length": 2664}
{"pred": "                    for (Object valueChoice : valueChoices)\n                     {\n                        Object convertedObj = selectConverter.convert(valueChoice);\n                        if (convertedObj.equals(value))\n                        {\n                           chosenObj = valueChoice;\n                           break;\n                ", "answers": ["                     String valueLabel = selectConverter.convert(value);"], "all_classes": null, "length": 2397}
{"pred": "\t\t\tif (i!=j)\n\t\t\t\tsb.append(\"\"+i+\"->\"+j+\" \\t\"+fractionWithAmount[i][j][0]+\"\\t\"+totalWithAmount[i][j][0]+\"\\t\"+fractionWithAmount[i][j][", "answers": ["\t\t\t\tif (i!=j) {"], "all_classes": null, "length": 5140}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                            foreach (KeyValuePair<int, int> unpricedLine in unpricedLines) {"], "all_classes": null, "length": 3428}
{"pred": "\t\t\tget { throw new NotImplementedException (); }\n\t\t\tset { throw new NotImplementedException (); }\n\t\t}\n\t\t[MonoTODO]\n\t\tpublic Type TaskResultType {\n\t\t\tget { throw new NotImplementedException", "answers": ["\t\t\tget { throw new NotImplementedException (); }"], "all_classes": null, "length": 1811}
{"pred": "       final Database mockDatabase = EasyMock.createMock(Database.class);\n        final Subject mockCurrentSubject = EasyMock.createMock(Subject.class);\n        //expect(mockSecurityManager.getDatabase()).andReturn(mockDatabase).times(3);\n        //expect(", "answers": ["        final Subject mockUser = EasyMock.createMock(Subject.class);"], "all_classes": null, "length": 5710}
{"pred": "\t\t\treturn new Vector2 (v.X / viewport.Width, v.Y / viewport.Height);\n\t\t}\n\t\tpublic static Vector2 RelativeTo (this Vector2 v, Vector2 viewport)\n\t\t{\n\t\t\treturn new Vector2 (", "answers": ["\t\t\tVector2 max = viewport.ToVector2 ();"], "all_classes": null, "length": 2722}
{"pred": "class endpoint_stats_entry(XDRStruct):\n    __slots__ = ['timestamp', 'packets', 'bytes']\n    def __init__(self, timestamp=None, packets=None, bytes=None):\n        self.timestamp = timestamp\n        self.packets = packets\n", "answers": ["__all__ = ['endpoint_key', 'endpoint_value', 'endpoint_stats']"], "all_classes": null, "length": 1647}
{"pred": "\t\t\t\t\tRemoveClient(i, m_workerSocketList, disconnect_client);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        /// <summary>\n        /// sends a message to a specific client\n        /// </summary>\n        /// <param name", "answers": ["\t\t\t\t    RemoveClient(i, m_workerSocketList, disconnect_client);"], "all_classes": null, "length": 6993}
{"pred": "           switch (type) {\n                case Step:\n                    logDataSet(list);\n                    break;\n                case Activity:\n                    logDataSet(list);\n                    break;\n            }\n        }\n    }\n    @Override\n    public void onError(int request", "answers": ["            for(Bucket bucket : list) {"], "all_classes": null, "length": 3379}
{"pred": " if bind_count:\n    for i in xrange(bind_count):\n      PrintLongLine('                                  %s%d%s' %\n                     (parent_class, i, bind_types[i]))\n  else:\n    PrintLongLine('                                 ", "answers": ["  if bind_count > 0 or exec_count > 0:"], "all_classes": null, "length": 3709}
{"pred": "   \"\"\"\n    response = HttpResponse(mimetype='application/json')\n    response['Content-Disposition'] = (\n        u'attachment; filename=\"{0}.json\"'.format(filename)\n    )\n    writer = json.writer(response)\n    for item in", "answers": ["    Returns a range query in JSON (full-calendar) format."], "all_classes": null, "length": 1893}
{"pred": "                       new VarNode(\"score\"), null/* c */,\n                        Scope.DEFAULT_CONTEXTS));\n                whereClause.addChild(serviceGraphPattern);\n            }\n        }\n        final ASTSearchOptimizer optimizer = new ASTSearchOptimizer", "answers": ["                        new VarNode(\"score\"), null/* c */,"], "all_classes": null, "length": 2611}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        self.object = self.get_object()"], "all_classes": null, "length": 2170}
{"pred": "     get { return this.ResolvedAssembly.PublicKeyToken; }\n    }\n    /// <summary>\n    /// A list of named byte sequences persisted with the assembly reference and used during execution, typically via .NET Framework helper classes.\n    /// </summary>\n    public IEnumerable<I", "answers": ["      get { return this.ResolvedAssembly.PublicKeyToken; }"], "all_classes": null, "length": 3379}
{"pred": "           var w = new DenseVector(input.Count);\n            var x = new DenseVector(input.Count);\n            var y = new DenseVector(input.Count);\n            var z = new DenseVector(input.Count);\n            var t = new DenseVector", "answers": ["            var pseudoResiduals = new DenseVector(input);"], "all_classes": null, "length": 2725}
{"pred": "\t\t\tApfloat median = sortedNumbers[left];\n\t\t\treturn new Apfloat[] {median};\n\t\t} else {\n\t\t\tApfloat median = sortedNumbers[left];\n\t\t\tApfloat median2 = sortedNumbers[right];\n\t\t\tApfloat", "answers": ["\t\t\treturn new Apfloat[] {sortedNumbers[left]};"], "all_classes": null, "length": 2548}
{"pred": "   for edge in edges_in:\n        parent[edge.child] = edge.parent\n        v = edge.parent\n        while v != -1:\n            if sample_count[v, j] > 0:\n                L[v] = j\n                A[focal", "answers": ["                sample_count[v] -= sample_count[edge.child]"], "all_classes": null, "length": 8307}
{"pred": "       if 'properties' in mapping_json:\n            for prop in mapping_json['properties']:\n                if prop['name'] == 'ocean-unique-id':\n                    result['ocean-unique-id'] = prop['type']\n                elif prop['name'] == '", "answers": ["        es_mapping = ESMapping.from_json(index_name=self.enrich_index,"], "all_classes": null, "length": 2213}
{"pred": "\t\t\t\t\t\t\t\t\t\tif (slot.Value.AllowBots)\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\torderManager.IssueOrder(Order.Command(\"slot add \" + slot.", "answers": ["\t\t\t\t\t\t\t\t\t\tvar bot = botNames.Random(Game.CosmeticRandom);"], "all_classes": null, "length": 2775}
{"pred": "\t\t\t}\n\t\t\treturn base.ToString();\n\t\t}\n\t}\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How", "answers": ["\t\t\t\treturn base.ToString() + \"\\n\" + _rootCause;"], "all_classes": null, "length": 2106}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        pad_low_and_high = struct.pack('!BB', pad_high, pad_low)"], "all_classes": null, "length": 2403}
{"pred": "           if (cluster.BoundaryCurve.IsEmpty)\n                return;\nNext line of code:\n            if (cluster.BoundaryCurve.IsEmpty)\n                return;\nNext line of code:\n            if (cluster.BoundaryCurve.IsEmpty)\n                return", "answers": ["            foreach (var child in cluster.Clusters.Concat(cluster.Nodes)) {"], "all_classes": null, "length": 2665}
{"pred": "\tm_maxSlopeCosine = cos(m_maxSlopeRadians);\n}\ndouble btKinematicCharacterController::getMaxSlope()\n{\n\treturn m_maxSlopeRadians;\n}\ndouble btKinematicCharacter", "answers": ["\tm_maxSlopeCosine = btCos(slopeRadians);"], "all_classes": null, "length": 8689}
{"pred": "       for (ExpressionTree initializer : initializers) {\n            if (canBeLeaked(initializer)) {\n                checker.report(Result.failure(\"unique.leaked\"), initializer);\n            }\n        }\n        return super.visitNewArray(node, p", "answers": ["        if (initializers != null && !initializers.isEmpty()) {"], "all_classes": null, "length": 3138}
{"pred": "\t\t\tif (nbttagcompound != null)\n\t\t\t{\n\t\t\t\tNBTTagCompound nbttagcompound1 = nbttagcompound.getCompoundTag(\"display\");\n\t\t\t\tif (nbttagcompound1 !=", "answers": ["\t\t\tif (nbttagcompound == null)"], "all_classes": null, "length": 2623}
{"pred": "\t\t\t\tif (typeAttribute != null)\n\t\t\t\t{\n\t\t\t\t\t_returnType = new ClassItem(Context, this, typeAttribute.Value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/// <summary>\n\t", "answers": ["\t\t\t\tif (typeAttribute != null)"], "all_classes": null, "length": 2270}
{"pred": "\t\t\tusing (TrackBar myTrackBar = new TrackBar()) {\n\t\t\t\tmyTrackBar.AutoSize = false;\n\t\t\t\tmyTrackBar.Height = 50;\n\t\t\t\tmyTrackBar.Width = 80;\n\t\t\t", "answers": ["\t\t\tAssert.AreEqual(handle, handle, \"Removes warning\");"], "all_classes": null, "length": 2812}
{"pred": "\t\t\tdoReturn(Collections.singleton(annotationType)).when(lookup).findAll();\n\t\t\tCollection<? extends ImmutableClassType> result = instrumentation.addInstrumentationPoints(agentConfiguration, Collections.singleton(instrumentationApplier));\n\t\t\t//", "answers": ["\t\t\tInterfaceType interfaceType = new InterfaceType(\"\");"], "all_classes": null, "length": 4275}
{"pred": "\t\tif (this.isImplicit != other.isImplicit)\n\t\t\treturn false;\n\t\tif (this.postdominators == null) {\n\t\t\tif (other.postdominators != null)\n\t\t\t\treturn false;\n\t\t} else", "answers": ["\t\tif (postdominators == null) {"], "all_classes": null, "length": 4460}
{"pred": "           int min2 = wideLExtent[end][r.leftChild];\n            int min = (min1 > min2 ? min1 : min2);\n            if (min > narrowL) { // can this right constituent stretch far enough to reach the left constituent?\n              continue", "answers": ["            int min2 = wideLExtent[end][rightState];"], "all_classes": null, "length": 2687}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                'rsync', '-rLKpts', '--delete-excluded', '--inplace',"], "all_classes": null, "length": 9292}
{"pred": "\t\t\tvar state = process.GetOrCreateData<ProcessState>();\n\t\t\tstate.IgnoreThreadsChangedEvent = false;\n\t\t\tprocess.IsRunningChanged -= DbgProcess_IsRunningChanged;\n\t\t\tprocess.DelayedIsRunningChanged -= DbgProcess_", "answers": ["\t\t\tprocess.IsRunningChanged -= DbgProcess_IsRunningChanged;"], "all_classes": null, "length": 4494}
{"pred": "\t\twriter.attribute( null, \"b\", String.valueOf( b ) );\n\t\twriter.endTag( null, name );\n\t}\n\t/**\n\t * Writes a parameter with a texture.\n\t *\n\t * @param   name    Name of the parameter.\n", "answers": ["\t\twriter.attribute( null, \"b\", String.valueOf( b ) );"], "all_classes": null, "length": 7284}
{"pred": "\t\tif ( (proxyThat == null) || (this.getClass() != proxyThat.getClass()) ) {\n\t\t\treturn false;\n\t\t}\nNext line of code:\n\t\tfinal Contact that = (Contact) proxyThat;\n\t\tif ( !this.", "answers": ["\t\tif (aThat instanceof HibernateProxy) {"], "all_classes": null, "length": 2517}
{"pred": "\t  if n == 0:\n\t    status = 'w'\n\t  else:\n\t    status = 'a'\n\t  with open(name, status) as f_ID:\n\t    f_ID.write(str(body_types[i]) + '\\n", "answers": ["\t    if total_rej == 1:"], "all_classes": null, "length": 3012}
{"pred": "   if cdata is None:\n        return\n    if cdata[0] == 0:\n        return\n    if cdata[0] == -1:\n        return\n    if cdata[0] == 1:\n        return\n    if cdata[0] ==", "answers": ["        for pos, idx in enumerate(cdata):"], "all_classes": null, "length": 30551}
{"pred": "   self.fields['groups'].initial = self.user.groups.all()\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\nI tried this", "answers": ["        self.member_groups = self.user.get_member_groups(self.groups)"], "all_classes": null, "length": 2513}
{"pred": "   return wrap\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\nI tried this:\nfunction(var1)\n\nBut it doesn't work.", "answers": ["                    return fn(*arg, **kw)"], "all_classes": null, "length": 21356}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            show_str = u'<{tag_name} sources=\"{sources}\" />'.format("], "all_classes": null, "length": 2510}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                          for key, (old_value, new_value) in data_model_changes.items()]"], "all_classes": null, "length": 2820}
{"pred": "\t\t\telse if (Class != null && Method != null)\n\t\t\t{\n\t\t\t\tStaticCompiler.IssueMessage(Message.MapXmlError, \"not implemented: cannot use 'class' attribute with 'method' attribute for ldtoken\");\n\t\t\t\treturn", "answers": ["\t\t\telse if (Class != null && type == null)"], "all_classes": null, "length": 11313}
{"pred": "\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);\n\t\t\tthis.objYLabel.TabIndex = 17;\n\t\t\tthis.objYLabel.Text = \"Description...\";\n\t\t\t//", "answers": ["\t\t\tthis.objYLabel.Size = new System.Drawing.Size(200, 32);"], "all_classes": null, "length": 3098}
{"pred": "   def testMsgS6(self):\nNext line of code:\n    def testMsgS7(self):\nNext line of code:\n    def testMsgS8(self):\nNext line of code:\n    def testMsgS9(self):\nNext line of code:\n", "answers": ["        c = self.getNoPrefix(\"mail/syncmail.5\")"], "all_classes": null, "length": 3644}
{"pred": "       if (termData == null) {\n            termData = new ArrayListValuedHashMap<>();\n            this.data.put(row.get(ID_KEY), termData);\n        }\n        for (Map.Entry<String, String> datum : csvData.entrySet()) {", "answers": ["        if (termData == null) {"], "all_classes": null, "length": 2449}
{"pred": "\t\tif(isPassiveFlower()) {\n\t\t\tNBTTagCompound cmp = wand.getTagCompound();\n\t\t\tpassiveDecayTicks = cmp.getInteger(TAG_PASSIVE_DECAY_TICKS);\n\t\t}", "answers": ["\t\tif(player == null)"], "all_classes": null, "length": 2712}
{"pred": "           intrinsicCohesion += this.getRepresentativity(component, c);\n        }\n        this.memorizedcohesion.put(c, intrinsicCohesion);\n        return intrinsicCohesion;\n    }\n    private void birthCase3", "answers": ["            intrinsicCohesion += this.getRepresentativity(component, c);"], "all_classes": null, "length": 2064}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                                if not (docformat in flags[flagname][version]):"], "all_classes": null, "length": 3086}
{"pred": "\t\t\tcomputerMgmt.Dispose();\n\t\t\tcomputerMgmt=null;\n\t\t\t\n\t\t\t\n\t\t}\n\t\tprivate void startProcess()\n\t\t{\n\t\t\tstring computer =  tvComputerCluster.SelectedNode", "answers": ["\t\t\tArrayList comp = this.computerMgmt.getComputerCollection();"], "all_classes": null, "length": 14544}
{"pred": "   for (java.util.Date date : exceptionDates) {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    for (java.util.Date anExceptionDate : exceptionDates) {"], "all_classes": null, "length": 3254}
{"pred": "\t\tsourceEventBinding.DataSource = new dfComponentMemberInfo() { Component = sourceComponent, MemberName = sourceProperty };\n\t\tsourceEventBinding.DataTarget = new dfComponentMemberInfo() { Component = targetComponent, MemberName = targetProperty };\n\t\tsourceEventBinding.SourceEventName", "answers": ["\t\tsourceEventBinding.DataSource = new dfComponentMemberInfo()"], "all_classes": null, "length": 2351}
{"pred": "           ISwitchManager switchManager = (ISwitchManager) ServiceHelper.getInstance(ISwitchManager.class,\n                    containerName, this);\n            Map<String, String> spanConfig = new HashMap<String, String>();\n            spanConfig.put(\"json\", jsonData);", "answers": ["            Gson gson = new Gson();"], "all_classes": null, "length": 8378}
{"pred": "\t\t\t\tsuper(id, path, width, height);\n\t\t\t}\n\t\t}\n\t\tprivate Images()\n\t\t{\n\t\t\tCore = new CoreImages();\n\t\t}\n\t\tpublic final class CoreImages implements java.io.Serializable\n", "answers": ["\t\t\t\tsuper(id, path, width, height);"], "all_classes": null, "length": 25355}
{"pred": "       return rnd.nextInt(size);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        double value = (size - 1) * rnd.nextDouble();"], "all_classes": null, "length": 1678}
{"pred": "lam.replace_hierarchy(parent_uri, child_uri)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    la = LinkAnnotation()"], "all_classes": null, "length": 4583}
{"pred": "\n            buffer.Append(\"          .shrinktofit = \")\n                .Append(StringUtil.ToHexString(ShrinkToFit)).Append(\"\\n\");\n            buffer.Append(\"          .mergecells = \")\n                .Append(StringUtil.ToHexString", "answers": ["            buffer.Append(\"          .shrinktoft= \").Append(ShrinkToFit)"], "all_classes": null, "length": 8534}
{"pred": "\t\t\t\t// Half-width kana.\n\t\t\t\tvalue = (ch - 0xFF60) * 2;\n\t\t\t\tvalue = ((int) (extraToJis [value])) |\n\t\t\t\t\t\t(((int) (extra", "answers": ["\t\t\t\tvalue = ch - 0xFF60 + 0x8EA0;"], "all_classes": null, "length": 3436}
{"pred": "   src1 = env.A[b]\n    off10 = off1//off2\n    src2 = env.cst(off10.int(-1),10)\n    obj.operands = [src1, src2, dst]\n    obj.type =", "answers": ["    if obj.mnemonic in (\"LD_A\", \"LEA\"): dst = env.A[a]"], "all_classes": null, "length": 32768}
{"pred": "\t\t\tJRPropertiesMap propertiesMap = new JRPropertiesMap();\n\t\t\tpropertiesMap.loadProperties(location, close);\n\t\t\treturn propertiesMap;\n\t\t}\n\t\tcatch (IOException e)\n\t\t{\n\t\t\tthrow new RuntimeException(e", "answers": ["\t\t\tstream = location.openStream();"], "all_classes": null, "length": 2884}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            return this == CREATIVE;"], "all_classes": null, "length": 1428}
{"pred": "\t\t\tSecurityIdentifier userSid = new SecurityIdentifier (\"SY\");\n\t\t\tSecurityIdentifier groupSid = new SecurityIdentifier (\"BA\");\n\t\t\tSecurityIdentifier everyoneSid = new SecurityIdentifier (\"WD\");\n\t\t\tCommonSecurityDescriptor csd; DiscretionaryAcl d", "answers": ["\t\t\tSecurityIdentifier userSid = new SecurityIdentifier (\"SY\");"], "all_classes": null, "length": 3130}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for i, result in enumerate(results):"], "all_classes": null, "length": 2979}
{"pred": "       if (PhotonEditor.Current != null)\n        {\n            // get all RPCs from the server\n            List<string> rpcs = PhotonEditor.Current.GetRPCs();\n            // get all RPCs from the client\n            List<string>", "answers": ["        HashSet<string> currentRpcs = new HashSet<string>();"], "all_classes": null, "length": 9643}
{"pred": "       full_msg.setMovementMethod(CustomLinkMovementMethod.getInstance());\n\n\n        full_msg.setOnLongClickListener(new View.OnLongClickListener() {\n            @Override\n            public boolean onLongClick(View v) {\n                if (message.echo", "answers": ["        if (!Config.isKDEConnectInstalled) {"], "all_classes": null, "length": 2399}
{"pred": "           if time_reversal:\n                return psit_G.conj()\n            else:\n                return psit_G\n            # Time-reversal symmetry\n            else:\n                return psit_G.conj()\n            # Point group symmetry\n            else:", "answers": ["            ik = self.bz2ibz_k[k]"], "all_classes": null, "length": 3269}
{"pred": "       CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);\nNext line of code:\n        utkastRequest.setPatientEfternamn(Strings.repeat(\"a\", 255));\nNext line of code:\n        Response response = ut", "answers": ["        CreateUtkastRequest utkastRequest = buildRequest(intygsTyp);"], "all_classes": null, "length": 4104}
{"pred": "\t\t\t\tforeach (ILNode child in block.Body) {\n\t\t\t\t\tif (child is ILLabel) {\n\t\t\t\t\t\tflatBody.Add(child);\n\t\t\t\t\t} else if (child is ILBasicBlock) {\n\t\t", "answers": ["\t\t\t\tforeach (ILNode child in block.GetChildren()) {"], "all_classes": null, "length": 9220}
{"pred": "\t    if (IsRagdoll) {\n\t\treturn;\n\t    }\n\t    if (delay > 0f) {\n\t\t//wait for the delay to pass before setting the ragdoll\n\t\t//this is to prevent the ragdoll from being set before", "answers": ["\t    if (mConvertingToRagdoll) {"], "all_classes": null, "length": 7452}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    _not_serialized_attrs_ = ['layer_type', 'top_type']"], "all_classes": null, "length": 2724}
{"pred": "       out[outOff + 3] = (byte)(num >> 24);\n        out[outOff + 2] = (byte)(num >> 16);\n        out[outOff + 1] = (byte)(num >> 8);\n        out[outOff", "answers": ["            out[outOff + 3] = (byte)(num >>> 24);"], "all_classes": null, "length": 2836}
{"pred": "           super( new SimpleRegexValueGetter( objectVariables, source,\n                new FilterExpression[] {\n                    new FilterBinaryNode( new FilterBinaryNode.BinaryOperator(\n                        FilterBinaryNode.BinaryOperator.EQUAL,\n                        new FilterExpression[] {\n                ", "answers": ["            super( source, new Predicate<PatternMatch>()"], "all_classes": null, "length": 2531}
{"pred": "def transform_values_holder_xml_json_to_json(values_xml_json, format ='date'):\n    comments = []\n    values_json = collections.OrderedDict()\n    for key, value in values_xml_json.iteritems():\n        if key ==", "answers": ["        elif key == 'TAUX':"], "all_classes": null, "length": 3202}
{"pred": "           if (ClientSettings.ICON_ENABLE_FRAME!=null)\n              btn.setIcon(new ImageIcon(ClientUtils.getImage(ClientSettings.ICON_ENABLE_FRAME)));\n          } else {\n            if(!btn.isSelected())\n             ", "answers": ["            InternalFrame f = (InternalFrame)buttons.get(btn);"], "all_classes": null, "length": 2628}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    elif sys.argv[1] == '--list':"], "all_classes": null, "length": 2347}
{"pred": "   move(out, Util.px2mm(offset.x, dpi), Util.px2mm(offset.y, dpi));\n    for (int y = 0; y < p.getRasterHeight(); y+= toolDiameterInPx/2)\n   ", "answers": ["    move(out, Util.px2mm(offset.x, dpi), Util.px2mm(offset.y, dpi));"], "all_classes": null, "length": 3397}
{"pred": "                   db.update(Db.Table1.TABLE_NAME, new ContentValues(), Db.Table1.ID_GROUP + \" = \" + newId, null);\n                    //Update budget items\n                    db.update(Db.Table4.TABLE_NAME, new ContentValues(),", "answers": ["\t\t\t\t\tContentValues cv = new ContentValues();"], "all_classes": null, "length": 2715}
{"pred": "               else if (m_meth == AllocMethod.CoTaskMem)\n                {\n                    Marshal.FreeCoTaskMem(m_ptr);\n                }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                else if (m_meth == AllocMethod.CoTaskMem)"], "all_classes": null, "length": 1878}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["LOGOUT_URL = '/accounts/logout/'"], "all_classes": null, "length": 6752}
{"pred": "\t\t\tif (numberToCancel > 0)\n\t\t\t{\n\t\t\t\tvar item = queue.FirstOrDefault(pi => pi.Item == itemName);\n\t\t\t\tif (item != null)\n\t\t\t\t{\n\t\t\t\t\tif", "answers": ["\t\t\tfor (var i = 0; i < numberToCancel; i++)"], "all_classes": null, "length": 4014}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        infoText += \" file\" if numberOfFiles==1 else \" files\" "], "all_classes": null, "length": 4715}
{"pred": "   code = code.replace('%', '%%%')\n    # replace all $ by $$ to prevent errors by $ signs\nNext line of code:\n    code = code.replace('$', '$$$')\n    # replace all $ by $$ to prevent errors by $ signs\nNext line of code", "answers": ["        code = code.replace('%', '%%')"], "all_classes": null, "length": 6114}
{"pred": "       result = self._planningExecutorClient.get_result()\n        rospy.loginfo(\"Received the result from PlanExecutorServer!\")\n        return result\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument.", "answers": ["        result = self._planningExecutorClient.get_result()"], "all_classes": null, "length": 2432}
{"pred": "\t\t\t\t\t\t\t\t\t- 2 * chemical[ 0 ][ idx + reactorExtent ] + chemical[ 0 ][ idx + 2 ]\nNext line of code:\n\t\t\t\t\t\t\t\t\t- 2 * chemical[ 0 ][", "answers": ["\t\t\t\t\t\t\t\t\t+ chemical[ 0 ][ idx + reactorExtent ], hdiv0 );"], "all_classes": null, "length": 3248}
{"pred": "               if (pattern == null) {\n                    throw JsonException.$(0, \"TIMESTAMP format pattern is required\");\n                }\n                columnTypes.add(typeManager.nextTimestampAdapter().of(timestampFormatFactory.get(pattern), timestampLocale));\n                break;\n           ", "answers": ["                if (pattern == null) {"], "all_classes": null, "length": 2622}
{"pred": "\t\t\tParam = qs.NewParameter();\n\t\t\tParam.DbType = DbType.Int32;\n\t\t\tParam.ParameterName = \"@obj_id\";\n\t\t\tParam.Size = 4;\n\t\t\tParam.Value = entity.obj_", "answers": ["            entity.cti_id = Convert.ToInt32(qs.Return.Rows[0][0]);"], "all_classes": null, "length": 2379}
{"pred": "\t\t\tthrow new NotImplementedException();\n\t\t}\n\t\tpublic object Replace(object original, object target, object owner)\n\t\t{\n\t\t\tthrow new NotImplementedException();\n\t\t}\n\t\tpublic object ReturnedType\n\t\t{\n", "answers": ["\t\t\tthrow new NotImplementedException();"], "all_classes": null, "length": 4514}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        commands = list()"], "all_classes": null, "length": 4536}
{"pred": "   @ddt.data('draft', 'split')\n    def test_update_edit_info_ancestors(self, default_ms):\n        \"\"\"\n        Tests that edited_on, edited_by, subtree_edited_on, and subtree_edited", "answers": ["            component = self.store.update_item(component, editing_user)"], "all_classes": null, "length": 21423}
{"pred": "       digest.update((byte) (TEXT_CODE & 0xff));\n        addToCharBuff(ch, start, length);\n        updateWithCharBuf();\n    }\n    public void processingInstruction(String target, String data) throws SAXException {\n       ", "answers": ["        digest.update((byte) (TEXT_CODE & 0xff));"], "all_classes": null, "length": 2614}
{"pred": "   return aetypes.Range(dict)\ndef mkcomparison(dict):\n    return aetypes.Comparison(dict)\ndef mklogical(dict):\n    return aetypes.Logical(dict)\ndef mkintltext(script, language, data):\n", "answers": ["    return aetypes.Range(dict['star'], dict['stop'])"], "all_classes": null, "length": 3315}
{"pred": "           if (api == null)\n            {\n                throw new ArgumentNullException(\"api\");\n            }\n            if (controllerName == null)\n            {\n                throw new ArgumentNullException(\"controllerName\");\n            }\n            if (actionName == null)\n            {\n                throw", "answers": ["            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))"], "all_classes": null, "length": 2840}
{"pred": "   def _key_up(self, path, model, column):\n        model = self.get_model()\n        record = model.get_value(model.get_iter(path), 0)\n        if column.name == 'name':\n            model.move_cursor_", "answers": ["                value = entry.get_active_text()"], "all_classes": null, "length": 2240}
{"pred": "           beanProperties.addPropertyValue(LegacyConfigPostProcessor.PROPERTY_LOCATIONS, newLocationList);\n        }\n        return beanProperties;\n    }\n    /*\n     * (non-Javadoc)\n     * @see\n     * org.springframework.", "answers": ["            if (newLocationList.size() > 0)"], "all_classes": null, "length": 2758}
{"pred": "   f.readline()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            lines = f.readlines()"], "all_classes": null, "length": 2034}
{"pred": "           [In, MarshalAs(UnmanagedType.IUnknown)] object pUnkState,\n            [In, MarshalAs(UnmanagedType.LPStruct)] Guid guidExtendedType,\n            [In, MarshalAs(UnmanagedType.Error)] int hrStatus,\n", "answers": ["            [In, MarshalAs(UnmanagedType.LPStruct)] Guid guidExtendedType,"], "all_classes": null, "length": 2639}
{"pred": "       var sp = Principals.getCurrentSecurablePrincipal();\n        return spm.addPrincipalToPrincipal( sp, directedAclKeys );\n    }\n    @Timed\n    @Override\n    @PostMapping(\n            path = DELETE,\n            consumes", "answers": ["        ensureWriteAccess( directedAclKeys.getTarget() );"], "all_classes": null, "length": 2244}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        children = element.findall('*')"], "all_classes": null, "length": 2331}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    elif node.nodeType == Node.DOCUMENT_TYPE_NODE:"], "all_classes": null, "length": 17407}
{"pred": "\t\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);\n\t\t\t}\n\t\t};\n\t\tvalidateEMSSceneSectionMassCasualtyIndicatorTestCase.doValidationTest();\n\t}\n\t/**\n\t*\n", "answers": ["\t\t\t\t\t(EMSSceneSection) objectToTest, diagnostician, map);"], "all_classes": null, "length": 4123}
{"pred": "\t\t\tif (decoder.peekType(expectedType, endOffset)) {\n\t\t\t\tdecodeName(keyLocator.getKeyName(), new int[1], new int[1], decoder);\n\t\t\t\tif (keyLocator.getType() == Key", "answers": ["\t\t\tif (decoder.getOffset() == endOffset)"], "all_classes": null, "length": 9126}
{"pred": "       for(int i = 0; i < ActiveWeapons.size(); i++){\n            ActiveWeapons.get(i).update(delta);\n        }\n        \n        //updates the player's weapons\n        for(int i = 0; i < myWe", "answers": ["        for(int i = 0; i< myWeapons.length; i++) {"], "all_classes": null, "length": 2528}
{"pred": "       action.setColor( color );\n        GameEngine.model().getGame().getGame().getGame().addAction( action );\n        hide();\n      }\n    } );\n    hpanel.add( m_btnOk );\n    m_panel.add( hpanel );\n", "answers": ["        action.setAccount( AppMain.instance().getMyAccount() );"], "all_classes": null, "length": 2672}
{"pred": "   return r.data.decode('utf-8')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        err = json.loads(r.data.decode(\"utf-8\"))"], "all_classes": null, "length": 2321}
{"pred": "\t\t\t\t\t\tresponse = service.MergeOrder(request);\n\t\t\t\t\t});\n\t\t\t\tmergedOrder = response.MergedOrder;\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\tfailure", "answers": ["\t\t\t\t\t\tresponse = service.MergeOrder(request);"], "all_classes": null, "length": 3301}
{"pred": "   return _total_yield(\n        input_fluxes,\n        input_elements,\n        output_flux,\n        output_elements,\n    )\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as", "answers": ["    if len(reaction.metabolites) != 1:"], "all_classes": null, "length": 3124}
{"pred": "       return self.get_queryset(\n            pootle_path=pootle_path,\n            user=user,\n        )\n    def get_for_path_and_user(self, pootle_path, user):\n        \"\"\"Returns units that fall below", "answers": ["        lang, proj, dir_path, filename = split_pootle_path(pootle_path)"], "all_classes": null, "length": 2182}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                ('created', models.DateTimeField(auto_now_add=True, null=True)),"], "all_classes": null, "length": 3505}
{"pred": "\nclass OpenflowSwitch(Node):\n    __slots__ = ['dpid', 'pox_switch', 'controller_name', 'controller_links', 'ipdests', \n                 'interface_to_port_map', 'trafgen_ip', 'autoack', '", "answers": ["                    pinfo = self.ports[portnum]"], "all_classes": null, "length": 2810}
{"pred": "   if (m_IgnoreChanges)\n      return;\n    if (m_RecentItems.size() >= m_MaxCount)\n      removeRecentItem(m_RecentItems.get(0));\n    m_RecentItems.add(item);\n    writeProps();", "answers": ["    item = fromString(toString(item));"], "all_classes": null, "length": 3450}
{"pred": "           if (src.FelHate >= 100)\n                return false;\n            // Checked for aggressed/aggressors\n            if (src.Aggressed.Any(x => x.Defender == target) || src.Aggressors.Any(x", "answers": ["            return src.Map.Rules == MapRules.FeluccaRules;"], "all_classes": null, "length": 1921}
{"pred": "       if (halfTradePeriodDate == null && takeOfferDate != null)\n            halfTradePeriodDate = new Date(takeOfferDate.getTime() + getOffer().getPaymentMethod().getHalfTradePeriod());\n        return halfTradePeriodDate;\n", "answers": ["        if (halfTradePeriodDate == null && takeOfferDate != null)"], "all_classes": null, "length": 4168}
{"pred": "\t\t\tif (a == null) a = LeadingAny(p.down);\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tstatic void CompAnySets() {\n\t\tforeach (Symbol sym in Symbol.nonterminals) {\n\t\t\tsym", "answers": ["\t\t\tif (a == null) a = LeadingAny(p.down);"], "all_classes": null, "length": 6730}
{"pred": "\t\t\tbuff[4] = (byte)((address & 0x000000ff)  >>  0);\n\t\t\tWriteReport(buff);\n\t\t\t// signal the read data finished\n\t\t\tif(!mReadDone.WaitOne(10", "answers": ["\t\t\tbuff[4] = (byte)(address & 0x000000ff);"], "all_classes": null, "length": 25859}
{"pred": "\t\t\tif (order == SortOrder.DESCENDING)\n\t\t\t{\n\t\t\t\tdirection = -1;\n\t\t\t}\n\t\t}\n\t\tpublic int compare(Object o1, Object o2)\n\t\t{\n\t\t\tMsk", "answers": ["\t\t\tif (order == SortOrder.DESCENDING)"], "all_classes": null, "length": 2284}
{"pred": "\t\t\t\t\tSendEmail( filePath );\n\t\t\t\t}\n\t\t\t\tcatch\n\t\t\t\t{\n\t\t\t\t\tConsole.WriteLine( \"failed\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch\n\t\t\t{", "answers": ["\t\t\t\t\tSendEmail( filePath );"], "all_classes": null, "length": 2335}
{"pred": "\t\t\t\tIList list = session.CreateCriteria(typeof(Item))\n\t\t\t\t\t.Add(Expression.Gt(\"Id\", 2))\n\t\t\t\t\t.SetCacheable(true)\n\t\t\t\t\t.List();\n\t\t\t\t", "answers": ["\t\t\t\tIList list = session.CreateCriteria(typeof(Item))"], "all_classes": null, "length": 2048}
{"pred": "           for (k++; i < N1 + N2 + N3; i++, k += 3)\n            {\n                _indx2Units[i] = k & 0xff;\n            }\nNext line of code:\n            for (k++; i < N1", "answers": ["            for (k++; i < N1 + N2 + N3; i++, k += 3)"], "all_classes": null, "length": 4230}
{"pred": "       rate.create()\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\nfunction get_value(var_name)", "answers": ["        view = navigate_to(self, 'Add')"], "all_classes": null, "length": 2554}
{"pred": "\t\t\tif ( useShadowBuffer )\n\t\t\t{\n\t\t\t\tIntPtr destData = shadowBuffer.Lock( offset, length, BufferLocking.WriteOnly );\n\t\t\t\tMemory.Copy( src, destData, length );\n\t\t\t\tshadowBuffer", "answers": ["\t\t\tOpenGL.BindBuffer( All.ElementArrayBuffer, _bufferId );"], "all_classes": null, "length": 2374}
{"pred": "self.session.nav.playService(self.session.postScanService)\n\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I", "answers": ["\t\tself.feid = int(self.satfinder_scan_nims.value)"], "all_classes": null, "length": 4414}
{"pred": "           else {\n                TcpAddress.TcpAddressMask mask = new TcpAddress.TcpAddressMask(filterStr);\n                tcpAcceptFilters.add(mask);\n            }\n            return;\n        case ZMQ.ZMQ_DELAY_ON_CLOSE:", "answers": ["            else if (filterStr.length() == 0 || filterStr.length() > 255) {"], "all_classes": null, "length": 2633}
{"pred": "               // Write the decoded row to the output stream\n                for (int i = 0; i < bytesPerRow; i++) {\n                    fout.Write(curr[i]);\n                }\n                // Write the previous row to the output stream\n                for (int i = ", "answers": ["                fout.Write(curr, 0, curr.Length);"], "all_classes": null, "length": 18060}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        s = lowlevel.SignalMessage('/a/b/c', 'foo.bar', 'baz')"], "all_classes": null, "length": 3182}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                except (KeyError, AttributeError):"], "all_classes": null, "length": 5090}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                \"1:21: Expected \\\">\\\".\","], "all_classes": null, "length": 5152}
{"pred": "\t\treturn map.remove( key );\n\t}\n\t@Override\n\tpublic Object set(Object key, Object value) {\n\t\tif ( isPutQueueEnabled() ) {\n\t\t\tfinal Object old = readElementByIndex( key );\n\t\t\tif ( old !=", "answers": ["\t\treturn map.remove( key );"], "all_classes": null, "length": 1885}
{"pred": "\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );\n\t\t\t}\n\t\t\tcatch {}\n\t\t}\n\t\t/// <summary>\n\t\t/// Records a staff member buying an item\n\t\t/// </summary>\n\t\t///", "answers": ["\t\t\t\t\t( m.Account as Server.Accounting.Account ).Username );"], "all_classes": null, "length": 2679}
{"pred": "       return action_message\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\nI tried this:\nfunction get_value(var_name) {\n   ", "answers": ["        return {'action': action_message}"], "all_classes": null, "length": 2430}
{"pred": "\t\tgrdResultsRowCollection rows = form.grdResults().getRows();\n\t\tfor (int i = 0; i < rows.size(); i++)\n\t\t{\n\t\t\tgrdResultsRow row = rows.get(i);\n\t\t\tif (row", "answers": ["\t\tif (orderInvestigationLiteVo == null)"], "all_classes": null, "length": 3338}
{"pred": "               pt = (POINT)c.ReadToStructure(0, typeof(POINT));\n                c.Dispose();\n                return new Point(pt.x, pt.y);\n            }\n        }\n        /// <summary>\n        /// The index of this item", "answers": ["                pt = (POINT)c.ReadToStructure(0, typeof(POINT));"], "all_classes": null, "length": 2325}
{"pred": "       return(maker.make_tab(self, cwd, profile, debugtab))\n    def tab_new_from_terminal(self, terminal, debugtab=False, _param1=None, _param2=None):\n        \"\"\"Make a new tab from a terminal\"\"\"", "answers": ["        if not self.is_child_notebook():"], "all_classes": null, "length": 2605}
{"pred": "                   toReturn.Add( new StructTypeInfo( \"_\"+Guid.NewGuid().ToString( \"N\" ), managedType, marshalAttribute, arraySize ) );\n                }\n            }\n            return toReturn;\n        }\n        private static void ThrowIfNotSupported", "answers": ["                    string name = nameArraySizeFragments[0];"], "all_classes": null, "length": 5673}
{"pred": "\t\t\t\tif (base_type != null && base_type.IsTypeOf (\"System\", \"Enum\"))\n\t\t\t\t\treturn false;\n\t\t\t\treturn base_type != null && base_type.IsTypeOf (\"System\", \"ValueType\");\n\t\t\t", "answers": ["\t\t\t\tif (base_type == null)"], "all_classes": null, "length": 4532}
{"pred": "               throw new Exception(\"Could not find model: \" + args.Key);\n            }\n        }\n        #endregion\n    }\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get", "answers": ["                throw new Exception(\"Could not find model: \" + args.Key);"], "all_classes": null, "length": 1606}
{"pred": "   self.protocol = protocol\n    def get_options(self):\n        return self.protocol.get_options()\n    def set_options(self, options):\n        self.protocol.set_options(options)\n    def get_ciphers(self):\n        return self", "answers": ["        self.protocol = _openssl_versions[protocol]"], "all_classes": null, "length": 3908}
{"pred": "\t\t\tthis.hbox3.Add (this.label8);\n\t\t\tthis.hbox3.Add (this.checkbuttonWhiteSpaces);\n\t\t\tthis.hbox3.Add (this.scrolledwindowOriginal);\n\t\t\tthis.hbox3.Add (this", "answers": ["\t\t\tthis.label8 = new global::Gtk.Label ();"], "all_classes": null, "length": 6108}
{"pred": "   headbook.set_tab_reorderable(True)\n    headbook.set_tab_reorderable(False)\n    headbook.set_tab_reorderable(True)\n    headbook.set_tab_reorderable(False)\n    headbook.", "answers": ["                for notebook in notebooks.values():"], "all_classes": null, "length": 5754}
{"pred": "   \"Move-Tab-to-left\": QKeySequence(Qt.CTRL + Qt.SHIFT + Qt.Key_9),\n    \"Move-Tab-to-next\": QKeySequence(Qt.CTRL + Qt.SHIFT + Qt.Key_1),\n", "answers": ["    \"Move-Tab-to-left\": QKeySequence(Qt.CTRL + Qt.SHIFT + Qt.Key_9),"], "all_classes": null, "length": 5065}
{"pred": "\t\treturn \"MutablePersistenceUnitInfo{\" +\n\t\t\t\t\"persistenceUnitName='\" + this.persistenceUnitName + '\\'' +\n\t\t\t\t\", persistenceProviderClassName='\" + this.persistenceProviderClassName + '\\'' +\n\t\t\t\t\", transactionType=\" +", "answers": ["\t\tStringBuilder builder = new StringBuilder();"], "all_classes": null, "length": 1636}
{"pred": "   return false;\n  }\n  \n  protected boolean isFileReadOnly(IEditorInput input)\n  {\n    return false;\n  }\n  \n  protected boolean isFileReadOnly(IEditorPart part)\n  {\n    return false;\n  }\n  \n", "answers": ["    IWorkbench workbench = PlatformUI.getWorkbench();"], "all_classes": null, "length": 1880}
{"pred": "\t\t\tthis.butAttach.Location = new System.Drawing.Point(802, 23);\n\t\t\tthis.butAttach.Name = \"butAttach\";\n\t\t\tthis.butAttach.Size = new System.Drawing.Size(82", "answers": ["\t\t\tthis.butAttach.Location = new System.Drawing.Point(738, 2);"], "all_classes": null, "length": 3591}
{"pred": "       if (sb != null)\n        {\n            return sb.toString();\n        }\n        return string;\n    }\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value", "answers": ["        if (sb == null)"], "all_classes": null, "length": 2097}
{"pred": "\t\t\tCheck (\"HMACSHA512-N-RFC4231-TC1\", hmac, data, digest);\n\t\t}\n\t\t[Test]\n\t\t// Test with a key shorter than the length of the HMAC output.\n\t", "answers": ["\t\t\tCheck (\"HMACSHA512-L-RFC4231-TC1\", hmac, data, digest);"], "all_classes": null, "length": 8355}
{"pred": "\t    current_align += 4 + CDRSerializer.alignment(current_align, 4); // Enum type\n\t    \nNext line of code:\n\t    current_align += 4 + CDRSerializer.alignment(current_align, 4); // Enum type", "answers": ["\t    current_sum += 4 + CDRSerializer.alignment(current_sum, 4);"], "all_classes": null, "length": 2629}
{"pred": "       return null;\n      else\n        return java.GetValue(\"JavaHome\").ToString();\n    }\n    private static String GetJavaHome(String resinHome, String javaHome)\n    {\n      if (String.IsNullOrEmpty(javaHome))\n        javaHome = Find", "answers": ["        java = regKey.OpenSubKey(\"1.6\");"], "all_classes": null, "length": 3155}
{"pred": "   def _read_user_execute(self):\n        return self.cron_cmd + ' -u %s' % (self.user,)\n    def _write_execute(self, path):\n        return self.cron_cmd + ' -u %s -m %", "answers": ["                comment = re.sub(r'%s' % self.ansible, '', l)"], "all_classes": null, "length": 3996}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        modifier.vertex_group = modifier_json['vertex_group']"], "all_classes": null, "length": 6838}
{"pred": "           for(int i = 0; i < totalBuckets; ++i)\n            {\n                double bucketRank = mScoreRankBuckets.get(i);\n                if(bucketRank < minLikelihood)\n                    continue;\n                if(bucket", "answers": ["            for(int i = 0; i < rankCounts.length; ++i)"], "all_classes": null, "length": 3522}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for (val n : vertex.neighbors()) {"], "all_classes": null, "length": 2073}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                    self.choice = int(self.choice) - 1"], "all_classes": null, "length": 2295}
{"pred": "\n            this.rptComboBox.Location = new System.Drawing.Point(91, 105);\n            this.rptComboBox.Name = \"rptComboBox\";\n            this.rptComboBox.Size = new System.Drawing.Size(264, 21", "answers": ["            this.rptComboBox.Location = new System.Drawing.Point(92, 5);"], "all_classes": null, "length": 3611}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            'Meta': {'ordering': \"['ordering']\", 'object_name': 'Scan'},"], "all_classes": null, "length": 6011}
{"pred": "               return false;\n            }\n        }\n        return false;\n    }\n    private void initialize() {\n        packageName = null;\n        isImportProcessor = false;\n        inRestriction = false;\n        //initialize the globalRefs\n        globalRefs = new HashMap", "answers": ["                QName qname = new QName(targetNamespace, sdoTypeName);"], "all_classes": null, "length": 4418}
{"pred": "       self.holidays_first_validate_notificate(cr, uid, ids, context=context)\n        return self.write(cr, uid, ids, {'state':'validate', 'manager_id': False})\n    def holidays_first_validate_notificate", "answers": ["        obj_emp = self.pool.get('hr.employee')"], "all_classes": null, "length": 6621}
{"pred": "           set { this.Enabled = value; }\n        }\n        /// <summary>\n        /// Gets and sets the delegate that is called when the user double clicks on a row\n        /// </summary>\n        public RowDoubleClickedHandler RowDoubleClicked { get; set; }\n", "answers": ["            set { this.Enabled = value; }"], "all_classes": null, "length": 6164}
{"pred": "           return String.Format(\"Mixer Line {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10}\",\n                mixerLine.dwLineID,\n                mixerLine.dwComponentType,", "answers": ["            return String.Format(\"{0} {1} ({2} controls, ID={3})\", "], "all_classes": null, "length": 2383}
{"pred": "\t\t\tvalue10 = domainFactory.getDomainObject(ims.core.admin.domain.objects.CareContext.class, valueObject.getCareContext().getId());\n\t\t}\n\t\tdomainObject.setCareContext(value10);\n\t\tdomain", "answers": ["\t\t\tif (valueObject.getCareContext().getBoId() == null)"], "all_classes": null, "length": 8150}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            [\"cargo\", \"build\"] + opts,"], "all_classes": null, "length": 2307}
{"pred": "\t\t\tdouble estN = counts[3];\n\t\t\treturn Math.max(this.getScore(new double[] { p, 0 }, true), this.getScore(new double[] { 0, n }, false),\n\t\t\t\t\tMath.max(this.", "answers": ["\t\t\tdouble estN = counts[3];"], "all_classes": null, "length": 4658}
{"pred": "               Stashed.SetStashDiffs(gitStash.Name, gitStash.Name, gitStash.Message, gitItemStatuses);\n            }\n            Loading.IsAnimating = false;\n            Loading.Visible = false;\n            Stashed.Enabled = true", "answers": ["                var firstId = Module.RevParse(gitStash.Name + \"^\");"], "all_classes": null, "length": 2103}
{"pred": "   assert lattice.cbuffer.get_object(bm0_index).out_address == 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    assert lattice.cbuffer.get_object(bm1_index).out_address != 0"], "all_classes": null, "length": 3531}
{"pred": "       if (o instanceof AuthScope) {\n            final AuthScope scope = (AuthScope) o;\n            return this.match(scope) == 0;\n        }\n        return false;\n    }\n    /**\n     * @see java.lang.Object#hashCode()\n", "answers": ["        if (o == this) {"], "all_classes": null, "length": 2299}
{"pred": "                       b}, callback, asyncState);\n        }\n        public int EndAddInt(System.IAsyncResult asyncResult) {\n            object[] results = this.EndInvoke(asyncResult);\n            return ((int)(results[0]));\n        }\n        public void AddInt(", "answers": ["                        b}, callback, asyncState);"], "all_classes": null, "length": 4245}
{"pred": "\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\tpublic static String erstelleStringAusMehrerenChargennummern(\n\t\t\tList<SeriennrChargennrMitMengeDto> snrs", "answers": ["\t\t\t\t\tif (!(i == snrs.size() - 1)) {"], "all_classes": null, "length": 2553}
{"pred": "\t\t\t\t\tEType = (EClassifier)value;\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tcase \"eGenericType\" : \nNext line of code:\n\t\t\t\t\t", "answers": ["\t\t\t\t\tEType = (EClassifier)value;"], "all_classes": null, "length": 2751}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        log.log_strm = open(args.log_file, 'w')"], "all_classes": null, "length": 2396}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if ptype == 'BITS':"], "all_classes": null, "length": 5135}
{"pred": "         if (cursor >= limit) {\n            break lab1;\n          }\n          cursor++;\n        } while (false);\n        // call R1, line 200\n        if (!r_R1()) {\n          return false;\n        }\n        // (, line", "answers": ["          cursor = limit - v_3;"], "all_classes": null, "length": 9538}
{"pred": "               if (cd.cls == null)\n                    cd.cls = cls;\n                if (cd.last == null)\n                    cd.last = o = cd.cls.newInstance();\n                else\n                    cd.last = cd.cls.cast(cd.last", "answers": ["                if (cd == null) {"], "all_classes": null, "length": 2397}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                return sorted(result), bool(extension.get_critical())"], "all_classes": null, "length": 8052}
{"pred": "\t\t\t\tstill_there = s.find (i->first) != s.end ();\n\t\t\t}\n\t\t\tif (!still_there) {\n\t\t\t\t/* The slot has been disconnected, so we can't call it */\n\t\t\t", "answers": ["\t\t\t\tstill_there = _slots.find (i->first) != _slots.end ();"], "all_classes": null, "length": 3008}
{"pred": "   # The first value is the first word of the interval.\n    # The second value is the second word of the interval.\n    # The second value is the second word of the interval.\n    # The second value is the second word of the interval.\n    # The second value is the second", "answers": ["    front_seq = unicode_to_utf16(X.begin)"], "all_classes": null, "length": 2854}
{"pred": "\t\t\tint beg = la.pos; int col = la.col;\n\t\t\twhile (StartOf(11)) {\n\t\t\t\tif (StartOf(12)) {\n\t\t\t\t\tGet();\n\t\t\t\t} else {\n\t\t\t", "answers": ["\t\t\tint beg = la.pos; int col = la.col;"], "all_classes": null, "length": 3970}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            edi_doc['product_qty'] = line.product_uom_qty"], "all_classes": null, "length": 3078}
{"pred": "\t\tHashtable<String, String> serviceProperties = new Hashtable<String, String>();\n\t\tserviceProperties.put(\"uri\", REST_SERVLET_ALIAS);\n\t\treturn new ServiceDescription(\"_openhab-server._tcp.local.\", \"openH", "answers": ["    \tServiceDescription description = getDefaultServiceDescription();"], "all_classes": null, "length": 2686}
{"pred": "               permissions = new ArrayList<>();\n                nameMap.put(name,\n                           permissions);\n            }\n            permissions.add(permissionEntry);\n        }\n        return nameMap;\n    }\n    @Test\n    public void testHasPermission_virtualFolder() throws Exception\n    {", "answers": ["                permissions = new ArrayList<>();"], "all_classes": null, "length": 4784}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            subsystem='input', ID_INPUT_MOUSE=True, sys_name='mouse0'))"], "all_classes": null, "length": 2747}
{"pred": "   device = Device(deviceToken)\n    user = User(device, loginId, password)\n    roundtable = RoundTable(device)\n    menu = Menu(device)\n    exploration = Exploration(device)\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    device = Device(token=deviceToken)"], "all_classes": null, "length": 1781}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        elif (index_elements[0] == \"Scatter\"):"], "all_classes": null, "length": 6800}
{"pred": "           if (m_Keys.Count > 0)\n            {\n                ItemID = m_Keys[0].ItemID;\n            }\n        }\n        public override void GetProperties(ObjectPropertyList list)\n        {\n            base.GetProperties(list);\n            if (", "answers": ["            if (Keys.Count < 1)"], "all_classes": null, "length": 1721}
{"pred": "       for (String device : devices) {\n            // DRS 20181025 - Added 1 - If we get an error here, return an empty tuner list and stop any more attempts...all hope is lost.\n            if (tunerList.size() ==", "answers": ["        for (String device : devices) {"], "all_classes": null, "length": 6177}
{"pred": "   if (lastSeenVersion < Version.USER_NOTIFICATION) {\n      jobs.put(Version.USER_NOTIFICATION, new UserNotificationMigrationJob());\n    }\n    if (lastSeenVersion < Version.DAY_BY_DAY_STICKERS) {", "answers": ["    if (lastSeenVersion < Version.USER_NOTIFICATION) {"], "all_classes": null, "length": 3706}
{"pred": "     if (split.length != 3) {\n        throw new RuntimeIOException(\"Line \" + lineCount + \" of RegexNER mapping file is not in the correct format: \" + line);\n      }\n      String regex = split[0];\n      String type = split[1];\n     ", "answers": ["      if (split.length < 2 || split.length > 4)"], "all_classes": null, "length": 3280}
{"pred": "           if SCons.Util.is_List(sub_path):\n                sub_path = os.path.abspath(sub_path)\n            if SCons.Util.is_List(sub_path):\n                sub_path = os.path.abspath(sub", "answers": ["            i = SCons.Node.FS.find_file(n, (source_dir,) + sub_path[0])"], "all_classes": null, "length": 3329}
{"pred": "   def __init__(self, envelope=None, geometry_type=None, data_type=None):\n        self.envelope = envelope or Box2d(-180, -90, 180, 90)\n        self.geometry_type = geometry", "answers": ["        ctx = Context()"], "all_classes": null, "length": 7334}
{"pred": "\n\ndef main():\n    \"\"\"\n    Manage LDAP monitors.\n    \"\"\"\n\n    module = AnsibleModule(\n        argument_spec=f5_argument_spec(\n            parent=dict(type='str', aliases=['parent_name']),\n           ", "answers": ["        if self.want.destination != self.have.destination:"], "all_classes": null, "length": 4317}
{"pred": "   def fill(self, values):\n        \"\"\"\n        Args:\n            values (list): [] to remove all vars or [(\"var\", \"value\", \"type\"), ...] to fill the view\n        \"\"\"\n        if set(values) == set(self.all_vars):\n", "answers": ["    cancel_button = Button('Cancel')"], "all_classes": null, "length": 2561}
{"pred": "           result = (IAction) Class.forName(className).newInstance();\n        }\n        return result;\n    }\n    public IAction getActionObject(String className, String dbName) throws Exception {\n        IAction result = null;\n        String classPath = getActionProperty", "answers": ["            notifyListeners(new EventObject(this), EventStatusType.ERROR,"], "all_classes": null, "length": 2030}
{"pred": "           {\"commentable_id\": \"dummy\", \"course_id\": unicode(self.course_id)},\n            {\"body\": \"foo\"},\n            mock_request\n        )\n    def test_update_thread_empty_title(self, mock_request):\n        self._test", "answers": ["            {\"thread_id\": \"dummy\", \"course_id\": unicode(self.course_id)},"], "all_classes": null, "length": 5993}
{"pred": "           return embedManifestDllAction(target, source, env)\n        else:\n            raise SCons.Errors.UserError(\"Manifest file %s does not exist\" % manifestSrc)\ndef embedManifestExeCheck(target, source, env):\n    \"\"\"Function run", "answers": ["            ret = (embedManifestDllAction) ([target[0]],None,env)        "], "all_classes": null, "length": 2937}
{"pred": "           execute(getSelection(), new SubProgressMonitor(new ProgressMonitorJobsDialog(shell, getOperationMessage()), 1000));\n        } catch (CoreException e) {\n            errorStatus[0] = e.getStatus();\n        }\n        if (errorStatus", "answers": ["            WorkspaceModifyOperation op = new WorkspaceModifyOperation() {"], "all_classes": null, "length": 2944}
{"pred": "\t\tif (super.init(smi, sdi))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tpublic void dispose(StepMetaInterface smi, StepDataInterface sdi)\n\t{\n\t\t", "answers": ["\t\tif (super.init(smi, sdi))"], "all_classes": null, "length": 2657}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    assert f('+5..', last) == (d(2014,1,30, 22,21), now)"], "all_classes": null, "length": 5969}
{"pred": "           else if (smaxtime.Contains(\"h\"))\n                maxtime = TimeSpan.FromHours(dmaxtime);\n            //HomeRange\n            string shomerange = shomerange;\n            if (shomerange.Contains(\"s\") || shomerange.", "answers": ["            else if (smaxtime.Contains(\"h\"))"], "all_classes": null, "length": 5344}
{"pred": "       s, o = self._session_cmd_close(session, suspend_log_chk_cmd)\n        if s:\n            raise exceptions.TestFail(\"Guest doesn't support suspend.\")\n    @error_context.context_aware\n    def verify_guest_", "answers": ["        s, o = self._session_cmd_close(session, suspend_log_chk_cmd)"], "all_classes": null, "length": 3962}
{"pred": "       rc.get(10, TimeUnit.SECONDS);\n\n        service.submit(pub);\n        service.shutdown();\n        service.awaitTermination(30, TimeUnit.SECONDS);\n        ctx.term();\n    }\n    @Test", "answers": ["        final Future<Boolean> pubf = service.submit(pub);"], "all_classes": null, "length": 1744}
{"pred": "           if (this.owner.getDecorator() instanceof FTDecorator) {\n            \t((FTDecorator) this.owner.getDecorator()).setOnSendRequestAfterParameters(res, destination);\n            }\n            this.owner.getDecorator().on", "answers": ["            if (this.owner.getDecorator() instanceof FTDecorator) {"], "all_classes": null, "length": 3820}
{"pred": "\t\t\t\treturn (uint)((value & 0x7F) | (value >> 8 & 0x7F) | (value >> 16 & 0x7F) | (value >> 24 & 0x7F));\n\t\t}\n\t", "answers": ["\t\t\tif (value <= 0x7F)"], "all_classes": null, "length": 2738}
{"pred": "       self.fm.execute_command(au_flags, descr)\n        self.fm.env.copy.append(one_file)\n        self.fm.env.cut = True\n        self.fm.env.cwd = cwd\n        self.fm.env.", "answers": ["        obj = CommandLoader(args=['aunpack'] + au_flags \\"], "all_classes": null, "length": 11346}
{"pred": "\t\t\t[Test]\n\t\tpublic void CreateInstance_StringStringNull ()\n\t\t{\n\t\t\tObjectHandle objHandle = Activator.CreateInstance (null, null);\n\t\t\tCOMTest objCOMTest = (COMTest)objHandle.Unwrap ();\n\t\t", "answers": ["\t\t[ExpectedException (typeof (ArgumentNullException))]"], "all_classes": null, "length": 2175}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        de = Locale.objects.get(code='de')"], "all_classes": null, "length": 3187}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                userstate.texture = cmd.parameters[\"texture\"]"], "all_classes": null, "length": 6429}
{"pred": "       PlayerGroup group = player.getPlayerGroup2();\n        if (group != null) {\n            group.onEvent(new PlayerGroupLeaderChangedEvent(group, player));\n        }\n    }\n    public static void changeLeader(PlayerGroup group, Player newL", "answers": ["        PlayerGroup group = player.getPlayerGroup2();"], "all_classes": null, "length": 2737}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        r = [head]"], "all_classes": null, "length": 2628}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        column, tree_model, tree_iter = self._setup_column(1, False)"], "all_classes": null, "length": 2626}
{"pred": "\t} while (parent != null);\n\treturn EVAL_PAGE;\n    }\n}\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function.\n", "answers": ["\t    if (parent instanceof Grid) {"], "all_classes": null, "length": 3003}
{"pred": "               nl = element.SelectSingleNode(\"Dialog\").ChildNodes;\n                Dialog = new DialogEntry();\n                for (int i = 0; i < nl.Count; i++) {\n                    XmlNode n = nl[i];\n                    Dialog.Add(n.", "answers": ["                XmlNodeList dnl = element.SelectNodes(\"Dialog\");"], "all_classes": null, "length": 2176}
{"pred": "                   m_key[i] = new ExodusActivation();\n                    else if (m_Peerless == PeerlessList.MelisandeTrammel || m_Peerless == PeerlessList.MelisandeFelucca)\n                   ", "answers": ["                        m_key[i] = new ExodusTomeAltar();"], "all_classes": null, "length": 4416}
{"pred": "\t\tfor(int i = 0; i < beans.length; i++)\n\t\t{\n\t\t\tcoll.add(((ims.careuk.vo.beans.ChangeOfServiceVoBean)beans[i]).buildVo());\n\t\t}\n\t\treturn", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 2804}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                new Version(1, new int[]{},"], "all_classes": null, "length": 2661}
{"pred": "\t\t\tbyte[] pb = new byte[32];\n\t\t\tkdf.Compute(pb, 0, pb.Length, pbMsg, 0, pbSalt, pbKey,\n\t\t\t\tpbAssoc, pbExpc);", "answers": ["\t\t\tbyte[] pb = kdf.Transform(pbMsg, p);"], "all_classes": null, "length": 10494}
{"pred": "\t\treturn (requestManaExact(stack, player, cost, remove));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\treturn requestManaExact(stack, player, cost, remove);"], "all_classes": null, "length": 3347}
{"pred": "from django.conf.global_settings import *\n Q: How to get the current user's name in a Django view? I'm trying to get the current user's name in a Django view. I've tried the following:\nfrom django.contrib.auth.models import User\n", "answers": ["if DEBUG and len(sys.argv) > 1:"], "all_classes": null, "length": 2348}
{"pred": "\t\t\t\t\t\t\" but Lights has {1} LEDs\",\n\t\t\t\t\t\tNextFrame.PixelCount, LightCount));\n\t\t\tlock (OutputQueue) {\n\t\t\t\tOutputQueue.Enqueue (NextFrame);\n\t\t\t}\n\t", "answers": ["\t\t\t\t\t\t\" expected {1})\", NextFrame.PixelCount, LightCount"], "all_classes": null, "length": 2119}
{"pred": "       if ((this.userErrorMessage == null)) {\n            if ((other.userErrorMessage != null))\n                return false;\n        } else if ((!this.userErrorMessage.equals(other.userErrorMessage)))\n            return false;\n        if ((this.actionTraceList", "answers": ["        if ((this.userErrorMessage == null)) {"], "all_classes": null, "length": 3570}
{"pred": "           dc.number = p.readString();\n            dc.type = p.readInt();\n            dc.callerId = p.readString();\n            dc.callerIdType = p.readInt();\n            dc.callerIdNumber = p.", "answers": ["            dc.index = p.readInt();"], "all_classes": null, "length": 4893}
{"pred": "\t\t\t\t\t\tif (licence.isApplication()) {\n\t\t\t\t\t\t\trelevantLicences.add(licence);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (odrMetadata.getType", "answers": ["\t\t\t\t\t\tif (licence.isDomainSoftware()) {"], "all_classes": null, "length": 2726}
{"pred": "           for (int x = 0; x < xSizeP; x++)\n            {\n                newVertices[x + y * xSizeP] = new Vector3(x * xPixelsPerTile, y * yPixelsPerTile, 0);\n               ", "answers": ["            for (int x = 0; x < xSizeP; x++)"], "all_classes": null, "length": 2967}
{"pred": "\t\t\tint testInt2 = rand.nextInt(5000);\n\t\t\t\n\t\t\tObject[] params = new Object[] { testInt1, testInt2 };\n\t\t\t\n\t\t\trawResult = client.call(API_METHOD_ADD", "answers": ["\t\t\tint testInt2 = rand.nextInt(5000);"], "all_classes": null, "length": 2291}
{"pred": "\t\t\t\treturn new int[0];\n\t\t\t}\n\t\t\t@Nonnull\n\t\t\tpublic int[] getBlockSelectionEnds()\n\t\t\t{\n\t\t\t\treturn new int[0];\n\t\t\t}\n\t\t\tpublic void set", "answers": ["\t\t\t\treturn new int[0];"], "all_classes": null, "length": 1505}
{"pred": "           out.writeBoolean(false);\n            out.writeUTF(\"not found\");\n        }\n        else {\n            out.writeBoolean(true);\n            out.writeObject(found.object);\n        }\n        out.flush();\n        out.close();\n        in.", "answers": ["            logging2(name + \"not found.\");"], "all_classes": null, "length": 2085}
{"pred": "                       16 + (~stactics_display_buffer.read(i) & 0x0f),\n                        16,\n                        0, 0,\n                        pixel_x, pixel_y,\n                        Machine.visible_area, TRANSPAR", "answers": ["                        16 + (~stactics_display_buffer.read(i) & 0x0f),"], "all_classes": null, "length": 10397}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                                        .Distance(spell.From.To2D(), position.To2D(), true, true) <="], "all_classes": null, "length": 6321}
{"pred": "       List<Node> path = new LinkedList<>();\n        path.add(x);\n        path.add(y);\n        for (Node b : graph.getAdjacentNodes(y)) {\n            if (graph.isDefCollider(x, b, y)) {\n", "answers": ["        final LinkedList<Node> path = new LinkedList<>();"], "all_classes": null, "length": 3157}
{"pred": "                   var child=pop[i];\n                    if (child is PlaceBase)\n                        plcs.Push(child as PlaceBase);\n                    else if (child is Drawable)\n                        plcs.Push(child as Drawable);\n                }\n            }\n           ", "answers": ["                    if (pop[i] is PlaceBase)"], "all_classes": null, "length": 1868}
{"pred": "       if (this.attachmentFile == null) {\n            if (other.attachmentFile != null) {\n                return false;\n            }\n        } else if (!this.attachmentFile.equals(other.attachmentFile)) {\n            return false;\n        }\n       ", "answers": ["        else if (!this.getFileId().equals(other.getFileId())) {"], "all_classes": null, "length": 2154}
{"pred": "                       if (mobiles[i] == from)\n                            continue;\n                        if (mobiles[i].CanBeHarmful(from, false))\n                        {\n                            AOS.Damage(from, mobiles[i], m_Item.", "answers": ["                        Mobile m = mobiles[i];"], "all_classes": null, "length": 2807}
{"pred": "\t\t\t\tHistory.Add(msg.User, msg);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tpublic virtual void MessageTo(PlayerMobile user, PlayerMobile to, WorldChatMessage message)\n\t\t{\n\t\t\tif (Is", "answers": ["\t\t\t\twhile (HistoryCount >= WorldChat.CMOptions.HistoryBuffer)"], "all_classes": null, "length": 3475}
{"pred": "   return mock.getAvailCompoIds(sClientSpaceId, sUserId);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    return mock.getAvailCompoIds(sClientSpaceId, sUserId);"], "all_classes": null, "length": 2811}
{"pred": "                       files[++index] = (String) mListView.getItemAtPosition(key);\n                    }\n                    final DialogFragment dialog2 = ZipFilesDialog.instantiate(files);\n                    mode.finish();\n                    dialog2.show(mActivity.", "answers": ["                            files[++index] = (String) mListView.getItemAtPosition(key);"], "all_classes": null, "length": 2146}
{"pred": "       this.channel.close();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if (this.m instanceof IUpdatePlayerListBox) {"], "all_classes": null, "length": 2352}
{"pred": "           z_arr[p_index, z_key] = z_dict[z_key][per]\n            z_err_arr[p_index, z_key] = z_dict[z_key][per+1]\n            for t_key in sorted(t_", "answers": ["                ll = z_index_dict[z_key][1]"], "all_classes": null, "length": 12704}
{"pred": "     return context.getString(resourceOne, name);\n    } else {\n      String name = recipients.get(0).toShortString();\nNext line of code:\n      return context.getString(resourceTwo, name);\n    }\n    return context.getString(resourceMany, recip", "answers": ["      return context.getString(resourceOne, name);"], "all_classes": null, "length": 3137}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            env[\"PATH\"] = \"%s%s%s\" % ("], "all_classes": null, "length": 2420}
{"pred": "   for path, tests in sorted(iteritems(type_paths)):\n        for test in tests:\n            yield test\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            for path, manifest_tests in iteritems(type_paths):"], "all_classes": null, "length": 2062}
{"pred": "       if (compiledScript != null) {\n            compiledScript.setScript(null);\n        }\n    }\n    private void handleScriptRuntimeException(final GroovyRuntimeException e, final PrintStream outStream, final IFreeplaneScriptErrorHandler errorHandler) {\n        if (e", "answers": ["        if (compiledScript != null) {"], "all_classes": null, "length": 2171}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["            throw new NotSupportedException();"], "all_classes": null, "length": 1564}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["      for i in range(energy.size):"], "all_classes": null, "length": 3072}
{"pred": "\t\tif(caseInsensitive)\n\t\t{\n\t\t\tif(this.ordinvcurrentstatus == null)\n\t\t\t\treturn ((OrderInvestigationForStatusChangeVo)obj).getOrdInvCurrentStatus() == null ? 0 : this.ordinvcurrent", "answers": ["\t\tif(caseInsensitive); // this is to avoid eclipse warning only."], "all_classes": null, "length": 2670}
{"pred": "       assertEquals(found.size(), 2);\n        assertEquals(found.get(0).getId(), stacks[0].getId());\n        assertEquals(found.get(1).getId(), stacks[2].getId());\n    }\n    @Test(expected", "answers": ["        for (StackImpl stack : stacks) {"], "all_classes": null, "length": 2225}
{"pred": "       Parameter depthParameter = new ParameterImpl();\n        depthParameter.setParameterFamilyCode(pf.getParameterFamilyCode());\n        depthParameter.setParameterFamilyName(pf.getParameterFamilyName());\n        depthParameter.setParameterName(depth);\n        depthParameter.setParameterValue(depth", "answers": ["        ParameterElement ped = new ParameterElementImpl();"], "all_classes": null, "length": 3083}
{"pred": "\t\t\tif (kind == LNodeKind.Splice)\n\t\t\t{\n\t\t\t\tvar splice = (Splice)candidate;\n\t\t\t\tvar splice2 = (Splice)pattern;\n\t\t\t\tif (splice.Args.", "answers": ["\t\t\tif (kind == LNodeKind.Id && candidate.Name != pattern.Name)"], "all_classes": null, "length": 5116}
{"pred": "                   if (colisionList.Count > 0)\n                    {\n                        extendedFarmLocation = colisionList[0].To2D();\n                        extendedWillHit++;\n                    }\n                }\n                if (extendedWillHit >= zedMenu.", "answers": ["                    if (colisionList.Count > extendedWillHit)"], "all_classes": null, "length": 2371}
{"pred": "\t\tcontextMenus = new ContextMenus();\n\t\tcontextMenus.initialize(loadContextMenus);\n\t\t// Images\n\t\tthis.imageReferences = new ims.framework.utils.ImageReferences();\n\t\tthis.imageReferences.setImagesDirectory", "answers": ["\t\tcontextMenus = new ContextMenus();"], "all_classes": null, "length": 7325}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["    return bool(re.search(pattern, frozen_output))"], "all_classes": null, "length": 3072}
{"pred": "           'subs': [(6, 0, self.env['test_testing_utilities.sub2'].create({'name': 'a'}))],\n        })\n        f = Form(r)\n        with self.assertRaises(AssertionError):\n            f.", "answers": ["            'subs': [(0, 0, {})]"], "all_classes": null, "length": 3961}
{"pred": "   assert Sum(x, (x, 1, 2)).change_index(x, 1, 2) == Sum(x, (x, 1, 2))\n    assert Sum(x, (x, 1, 2)).change_index(x, ", "answers": ["    b, v = symbols('b, v', integer = True)"], "all_classes": null, "length": 13856}
{"pred": "\t\t\tint argc = LuaDLL.lua_gettop(l);\n\t\t\tif(argc==1){\n\t\t\t\tSystem.String a1;\n\t\t\t\tcheckType(l,1,out a1);\n\t\t\t\tvar ret", "answers": ["\t\t\tint argc = LuaDLL.lua_gettop(l);"], "all_classes": null, "length": 2713}
{"pred": "               this._notifyAction = NotifyCollectionChangedAction.Add;\n                this._newItemList = (changedItems == null) ? null : ArrayList.ReadOnly(changedItems);\n                this._newStartingIndex = startingIndex;\n            }\n            else\n            {\n                this._", "answers": ["                this.InitializeAdd(action, changedItems, startingIndex);"], "all_classes": null, "length": 2313}
{"pred": "           streamWriter.close();\n            int sizeAfter = getNamespaceResolverSize(desc);\n            assertEquals(sizeBefore, sizeAfter);\n            StringReader reader = new StringReader(writer.toString());\n            InputSource inputSource = new InputSource(reader);\n            Document testDocument = parser", "answers": ["            int sizeAfter = getNamespaceResolverSize(desc);"], "all_classes": null, "length": 4995}
{"pred": "                   c.Campus = Token2Csv();\n                    break;\n                case Param.Campus2:\n                    c.Campus2 = Token2Csv();\n                    break;\n                case Param.Campus3:\n                    c.C", "answers": ["                    c.Campus = Token2Csv();"], "all_classes": null, "length": 3085}
{"pred": "Console.WriteLine (\"width: {0}\", ide.width);\nConsole.WriteLine (\"height: {0}\", ide.height);\nConsole.WriteLine (\"colorCount: {0}\", ide.colorCount);\nConsole.WriteLine (\"reserved: {0}\", ide.reserved);\nConsole.WriteLine (\"", "answers": ["Console.WriteLine (\"\\tide.width: {0}\", ide.width);"], "all_classes": null, "length": 8777}
{"pred": "               JSR.successors.add(l);\n            }\n            if (l.inSubroutine(id)) {\n                l.status |= VISITED2;\n            }\n        }\n    }\n    /**\n     * Returns the number of subroutines to", "answers": ["                if ((l.status & VISITED2) != 0) {"], "all_classes": null, "length": 5684}
{"pred": "           ptr_of_this_method = ILIntepreter.Minus(__esp, 1);\n            ptr_of_this_method = ILIntepreter.GetObjectAndResolveReference(ptr_of_this_method);\n            UnityEngine.Ray instance_of", "answers": ["            ptr_of_this_method = ILIntepreter.Minus(__esp, 1);"], "all_classes": null, "length": 3322}
{"pred": "\t\t\tif(position == Position.INSIDE)\n\t\t\t\tcomboLabelPosition.select(0);\n\t\t\telse\n\t\t\t\tcomboLabelPosition.select(1);\n\t\t}\n\t\tprivate Position getPosition() {return comboLabelPosition", "answers": ["\t\t\tif(position == Position.INSIDE_LITERAL) {"], "all_classes": null, "length": 3713}
{"pred": "\n\n\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\nfunction get_value(var_name) {\n    return var", "answers": ["        currImageValue = self._getCurrentValue( driver, \"Image\")"], "all_classes": null, "length": 8550}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        if (self.f < 1) or (self.f > self.p - 1):"], "all_classes": null, "length": 8041}
{"pred": "           if (disableTreeSelection) {\n                tree.setSelectionRow(0);\n            }\n            tree.setSelectionRow(0);\n            tree.expandPath(new TreePath(new TreePath(tree.getRoot()).pathByAddingChild(overallNodeName)));\n       ", "answers": ["            if (disableTreeSelection) {"], "all_classes": null, "length": 2379}
{"pred": "                          (self.employee_id, from_date, to_date, code))\n                res = self.cr.fetchone()[0]\n                return res or 0.0\n        class WorkedHours(BrowsableObject):\n\"\"\"            \"\"\"a class that will", "answers": ["                           (self.employee_id, from_date, to_date, code))"], "all_classes": null, "length": 2916}
{"pred": "       mf.append(cosmo.MF(zi))\n        dlnmdlnm.append(cosmo.dlnMdlnm(zi))\n        bias.append(cosmo.bias(zi))\n        Darr.append(cosmo.D(zi))", "answers": ["        if config.MF =='Tinker':"], "all_classes": null, "length": 4537}
{"pred": "       d.width = font.stringWidth(getText());\n        d.height = font.getSize() + 2;\n        return d;\n    }\n    @Override\n    public void setText(String text) {\n        super.setText(text);\n        if (text", "answers": ["        if (font == null) {"], "all_classes": null, "length": 2125}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for theta in np.arange(0,np.pi,theta_res):"], "all_classes": null, "length": 5390}
{"pred": "\t\t\twindow.Show();\n\t\t}\n\t\tprivate void ShowOrHide(Window window, bool show)\n\t\t{\n\t\t\tif (window == null)\n\t\t\t\tthrow new ArgumentNullException(\"window\");\n\t\t\twindow.Show();\n\t", "answers": ["\t\t\tif (window.Visibility == Visibility.Visible)"], "all_classes": null, "length": 2154}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["                        for n in xrange(params[0]['nbins'] + 1)]"], "all_classes": null, "length": 6865}
{"pred": "           contact.firstServerMsgId = query.getLast();\n            protocol.getStorage().updateFirstServerMsgId(contact);\n        }\n    }\n    public void queryMessageArchiveManagement(XmppConnection connection, Query query) {\n        ConnectionManager.getInstance().getConnection(", "answers": ["            if (contact.setLastMessageTransmitted(query.getEnd())) {"], "all_classes": null, "length": 2319}
{"pred": "       im1L = im1.convert(\"L\", rgb2I)\n        h1 = im1L.histogram()\n        if im1.mode == \"RGB\":\n            if channel == \"I\":\n                # compute gray level image: I = (R + G +", "answers": ["                im1L = im1.convert(\"L\", rgb2I)"], "all_classes": null, "length": 2615}
{"pred": "\t\t\twhile (rsp.isOkey()) {\n\t\t\t\taddLog24(rsp, ret);\n\t\t\t\trsp = tag.readRecord(sfi);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\t", "answers": ["\t\t\tfor (int i = 1; i <= MAX_LOG; ++i) {"], "all_classes": null, "length": 2427}
{"pred": "   return self.createDescription()\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\n\nA: You can use the keyword self", "answers": ["            return \"Block: %s\" % self[\"type\"].display"], "all_classes": null, "length": 3062}
{"pred": "\t\tsocketAdapter.dispose();\n\t\tsocketAdapter = null;\n\t}\n\t/**\n\t * This method is called when the underlying socket is closed.\n\t */\n\t@Override\n\tpublic void socketClosed() {\n\t\tcleanEngine();\n\t}\n\t/**", "answers": ["\t\tif (socketAdapter != null) {"], "all_classes": null, "length": 2661}
{"pred": "   def respond(self):\n        \"\"\"Process the current request.\n        From :pep:`333`:\n            The start_response callable must not actually transmit\n            the response headers. Instead, it must store them for the\n            server or gateway to transmit only after the first\n           ", "answers": ["        path = environ['PATH_INFO'] or '/'"], "all_classes": null, "length": 3989}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["\t\tdatasetfile , field , parents = sys.argv[ 1: ]"], "all_classes": null, "length": 4154}
{"pred": "           if (Utility.Random(chance) == 0)\n            {\n                res = EnhanceResult.Success;\n            }\n            else\n            {\n                res = EnhanceResult.Failure;\n            }\n        }\n        public static void CheckResult(ref", "answers": ["            int random = Utility.Random(100);"], "all_classes": null, "length": 3932}
{"pred": "   def parse_registerFile(self, registerFile: minidom.Element) -> comp.Regfile:\n        \"\"\"\n        Parses an registerFile and returns an instantiated regfile component\n        \"\"\"\n        # Schema:\n        #   {nameGroup}\n        #      ", "answers": ["            entries[entry_name] = (entry_value, displayname, desc)"], "all_classes": null, "length": 7608}
{"pred": "                   MessageBox.Show(\"Fatal Error:\\nUnable to locate any FOG Service DLLs!\");\n                    this.Close();\n                }\n            }\n            else\n            {\n                MessageBox.Show(\"Fatal Error:\\nUnable to locate FOG Service DLLs!\");", "answers": ["                    Label noneFound = new Label();"], "all_classes": null, "length": 1652}
{"pred": "               return (bool)this.ViewState[\"SubmitText\"] ?? true;\n            }\n            set\n            {\n                this.ViewState[\"SubmitText\"] = value;\n            }\n        }\n        /// <summary>\n        /// True to submit value of selected items\n        /// </", "answers": ["                object obj = this.ViewState[\"SubmitText\"];"], "all_classes": null, "length": 4124}
{"pred": "               if(this.trianglesUsed[textureHash] <= 0)\n                    continue;\n                if(!this.textureArray[textureHash].getImage().isSelected())\n                {\n                    this.textureArray[textureHash].getImage().selectTexture", "answers": ["                int ti = 0, ci = 0, vi = 0;"], "all_classes": null, "length": 5164}
{"pred": "   if not exposedHeaders:\n        exposedHeaders = []\n    exposedHeaders.append(header)\n    response['Access-Control-Expose-Headers'] = exposedHeaders\n Q: How to get the current page URL in a Django template? I'm trying to get the current page URL in", "answers": ["    exposedHeaders += f', {header}' if exposedHeaders else header"], "all_classes": null, "length": 2466}
{"pred": "                   Driver d = idlePool.Dequeue();\n                    if (d.ConnectionLifetimeExpired())\n                    {\n                        oldDrivers.Add(d);\n                        d.Close();\n                    }\n                }\n            }\n            return oldDri", "answers": ["                    Driver d = idlePool.Peek();"], "all_classes": null, "length": 2614}
{"pred": "   return var\n Q: How to get the value of a variable in a function? I have a function that takes a variable as an argument. I want to get the value of that variable in the function. How can I do that?\nfunction get_value(var_name) {\n    return", "answers": ["        var = (float(var), float(var))"], "all_classes": null, "length": 9981}
{"pred": "QUEST.addStartNpc(WK_ROMP)\nQUEST.addTalkId(WK_ROMP)\nQUEST.addKillId(20670,20671,20954,20956,20958", "answers": ["CREATED     = State('Start',     QUEST)"], "all_classes": null, "length": 2986}
{"pred": "\t\t\t\t\tdouble? seconds1 = this.Seconds;\n\t\t\t\t\tint num2 = (int)Math.Floor(((double)seconds1.Value - ((double)num * 60 + (double)num1)) * 100);\n\t\t", "answers": ["\t\t\t\t\tdouble? seconds1 = this.Seconds;"], "all_classes": null, "length": 5017}
{"pred": "           _sCurProgram = this;\n            _attributes = new List<AttributeInfo>();\n            _textures = new Dictionary<String, TextureInfo>();\n            _uniforms = new Dictionary<String, int>();\n        }\n        public void Use()\n        {\n            if (Active", "answers": ["            _attributes = new List<AttributeInfo>();"], "all_classes": null, "length": 1724}
{"pred": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "answers": ["        for l in (self.reactions, self.genes, self.metabolites):"], "all_classes": null, "length": 3496}
{"pred": "\t\tfor(int i = 0; i < beans.size(); i++)\n\t\t{\n\t\t\tcoll.add((TumourGroupListVo)beans.get(i));\n\t\t}\n\t\treturn coll;\n\t}\n\tpublic static Tum", "answers": ["\t\tif(beans == null)"], "all_classes": null, "length": 2882}
{"pred": "\t\t\t\tcx = lines[selectedLine].getCenterX();\n\t\t\t\tright = lines[selectedLine].x+lines[selectedLine].width;\n\t\t\t\tcy = lines[selectedLine].getCenterY();\n\t\t\t\th = lines[selectedLine].", "answers": ["\t\t\t\tcx = lines[selectedLine].getCenterX();"], "all_classes": null, "length": 6153}
{"pred": "       mListView.setLayoutAnimation(set);\n    }\n\t\n\t/**\n\t * Fill the list with the bookmarks.\n\t */\n\tprivate void fillData() {\n\t\tmCursor = mDbAdapter.getBookmarksCursor();\n\t\t\n\t\tif (", "answers": ["                new LayoutAnimationController(set, 0.5f);"], "all_classes": null, "length": 3282}
{"pred": "               if (PartnerInterestRow.FieldKey > HighestNumber)\n                {\n                    HighestNumber = PartnerInterestRow.FieldKey;\n                }\n            }\n            ARow.FieldKey = HighestNumber + 1;\n            ARow.InterestCategory", "answers": ["                if (PartnerInterestRow.RowState != DataRowState.Deleted)"], "all_classes": null, "length": 2844}
{"pred": "\t\tint[] \t\tscores \t\t= new int[length];\nNext line of code:\n\t\tint \t\t\tscore \t\t= 0;\nNext line of code:\n\t\tint \t\t\twindow \t\t= 0;\nNext", "answers": ["\t\tint[] \t\tscoresTmh \t= new int[length];"], "all_classes": null, "length": 2153}
